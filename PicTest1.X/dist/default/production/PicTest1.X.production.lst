

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Fri Sep 25 13:44:36 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    15                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    16                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    30                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    31                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    36                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    37                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    40                           	psect	text18,local,class=CODE,merge=1,delta=2,group=3
    41                           	psect	text19,local,class=CODE,merge=1,delta=2,group=3
    42                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text21,local,class=CODE,merge=1,delta=2
    44                           	psect	text22,local,class=CODE,merge=1,delta=2
    45                           	psect	text23,local,class=CODE,merge=1,delta=2
    46                           	psect	text24,local,class=CODE,merge=1,delta=2,group=3
    47                           	psect	text25,local,class=CODE,merge=1,delta=2,group=3
    48                           	psect	text26,local,class=CODE,merge=1,delta=2
    49                           	psect	text27,local,class=CODE,merge=1,delta=2,group=3
    50                           	psect	text28,local,class=CODE,merge=1,delta=2
    51                           	psect	text29,local,class=CODE,merge=1,delta=2
    52                           	psect	text30,local,class=CODE,merge=1,delta=2
    53                           	psect	text31,local,class=CODE,merge=1,delta=2
    54                           	psect	text32,local,class=CODE,merge=1,delta=2
    55                           	psect	text33,local,class=CODE,merge=1,delta=2
    56                           	psect	text34,local,class=CODE,merge=1,delta=2
    57                           	psect	text35,local,class=CODE,merge=1,delta=2
    58                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text37,local,class=CODE,merge=1,delta=2
    60                           	psect	intentry,global,class=CODE,delta=2
    61                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    62                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    63                           	dabs	1,0x620,48
    64                           	dabs	1,0x5A0,80
    65                           	dabs	1,0x520,80
    66                           	dabs	1,0x4C0,48
    67                           	dabs	1,0x22F0,0,_eusart_tx_buff
    68                           	dabs	1,0x7E,2
    69  0000                     
    70                           ; Version 2.20
    71                           ; Generated 30/04/2020 GMT
    72                           ; 
    73                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC16F18875 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104  0000                     	;# 
   105  0001                     	;# 
   106  0002                     	;# 
   107  0003                     	;# 
   108  0004                     	;# 
   109  0005                     	;# 
   110  0006                     	;# 
   111  0007                     	;# 
   112  0008                     	;# 
   113  0009                     	;# 
   114  000A                     	;# 
   115  000B                     	;# 
   116  000C                     	;# 
   117  000D                     	;# 
   118  000E                     	;# 
   119  000F                     	;# 
   120  0010                     	;# 
   121  0011                     	;# 
   122  0012                     	;# 
   123  0013                     	;# 
   124  0014                     	;# 
   125  0015                     	;# 
   126  0016                     	;# 
   127  0017                     	;# 
   128  0018                     	;# 
   129  0019                     	;# 
   130  001A                     	;# 
   131  001C                     	;# 
   132  001C                     	;# 
   133  001D                     	;# 
   134  001D                     	;# 
   135  001E                     	;# 
   136  001F                     	;# 
   137  008C                     	;# 
   138  008C                     	;# 
   139  008D                     	;# 
   140  008E                     	;# 
   141  008E                     	;# 
   142  008F                     	;# 
   143  0090                     	;# 
   144  0090                     	;# 
   145  0091                     	;# 
   146  0093                     	;# 
   147  0094                     	;# 
   148  0095                     	;# 
   149  0096                     	;# 
   150  0097                     	;# 
   151  0098                     	;# 
   152  0099                     	;# 
   153  009A                     	;# 
   154  009B                     	;# 
   155  009C                     	;# 
   156  009D                     	;# 
   157  009E                     	;# 
   158  010C                     	;# 
   159  010D                     	;# 
   160  010E                     	;# 
   161  010E                     	;# 
   162  010F                     	;# 
   163  0110                     	;# 
   164  0110                     	;# 
   165  0111                     	;# 
   166  0112                     	;# 
   167  0112                     	;# 
   168  0113                     	;# 
   169  0114                     	;# 
   170  0114                     	;# 
   171  0115                     	;# 
   172  0116                     	;# 
   173  0116                     	;# 
   174  0117                     	;# 
   175  0119                     	;# 
   176  0119                     	;# 
   177  0119                     	;# 
   178  011A                     	;# 
   179  011A                     	;# 
   180  011A                     	;# 
   181  011B                     	;# 
   182  011B                     	;# 
   183  011B                     	;# 
   184  011B                     	;# 
   185  011B                     	;# 
   186  011C                     	;# 
   187  011C                     	;# 
   188  011C                     	;# 
   189  011D                     	;# 
   190  011D                     	;# 
   191  011D                     	;# 
   192  011E                     	;# 
   193  011E                     	;# 
   194  011E                     	;# 
   195  011F                     	;# 
   196  011F                     	;# 
   197  011F                     	;# 
   198  011F                     	;# 
   199  011F                     	;# 
   200  018C                     	;# 
   201  018D                     	;# 
   202  018E                     	;# 
   203  018F                     	;# 
   204  0190                     	;# 
   205  0191                     	;# 
   206  0192                     	;# 
   207  0196                     	;# 
   208  0197                     	;# 
   209  0198                     	;# 
   210  0199                     	;# 
   211  019A                     	;# 
   212  019B                     	;# 
   213  019C                     	;# 
   214  020C                     	;# 
   215  020C                     	;# 
   216  020D                     	;# 
   217  020E                     	;# 
   218  020F                     	;# 
   219  020F                     	;# 
   220  0210                     	;# 
   221  0210                     	;# 
   222  0211                     	;# 
   223  0211                     	;# 
   224  0212                     	;# 
   225  0212                     	;# 
   226  0213                     	;# 
   227  0214                     	;# 
   228  0215                     	;# 
   229  0215                     	;# 
   230  0216                     	;# 
   231  0216                     	;# 
   232  0217                     	;# 
   233  0217                     	;# 
   234  0218                     	;# 
   235  0218                     	;# 
   236  0219                     	;# 
   237  021A                     	;# 
   238  021B                     	;# 
   239  021B                     	;# 
   240  021C                     	;# 
   241  021C                     	;# 
   242  021D                     	;# 
   243  021D                     	;# 
   244  021E                     	;# 
   245  021F                     	;# 
   246  028C                     	;# 
   247  028C                     	;# 
   248  028D                     	;# 
   249  028D                     	;# 
   250  028E                     	;# 
   251  028F                     	;# 
   252  0290                     	;# 
   253  0290                     	;# 
   254  0291                     	;# 
   255  0292                     	;# 
   256  0292                     	;# 
   257  0293                     	;# 
   258  0293                     	;# 
   259  0294                     	;# 
   260  0295                     	;# 
   261  0296                     	;# 
   262  0296                     	;# 
   263  0297                     	;# 
   264  0298                     	;# 
   265  0298                     	;# 
   266  0299                     	;# 
   267  0299                     	;# 
   268  029A                     	;# 
   269  029B                     	;# 
   270  029C                     	;# 
   271  029C                     	;# 
   272  029D                     	;# 
   273  030C                     	;# 
   274  030C                     	;# 
   275  030D                     	;# 
   276  030E                     	;# 
   277  030F                     	;# 
   278  0310                     	;# 
   279  0310                     	;# 
   280  0311                     	;# 
   281  0312                     	;# 
   282  0313                     	;# 
   283  0314                     	;# 
   284  0314                     	;# 
   285  0315                     	;# 
   286  0316                     	;# 
   287  0317                     	;# 
   288  0318                     	;# 
   289  0318                     	;# 
   290  0319                     	;# 
   291  031A                     	;# 
   292  031B                     	;# 
   293  031C                     	;# 
   294  031C                     	;# 
   295  031D                     	;# 
   296  031E                     	;# 
   297  031F                     	;# 
   298  038C                     	;# 
   299  038C                     	;# 
   300  038D                     	;# 
   301  038E                     	;# 
   302  0390                     	;# 
   303  0390                     	;# 
   304  0391                     	;# 
   305  0392                     	;# 
   306  040C                     	;# 
   307  040D                     	;# 
   308  040E                     	;# 
   309  040F                     	;# 
   310  0410                     	;# 
   311  0411                     	;# 
   312  0416                     	;# 
   313  0416                     	;# 
   314  0417                     	;# 
   315  0418                     	;# 
   316  0418                     	;# 
   317  0419                     	;# 
   318  041A                     	;# 
   319  041A                     	;# 
   320  041B                     	;# 
   321  041C                     	;# 
   322  041C                     	;# 
   323  041D                     	;# 
   324  041E                     	;# 
   325  041F                     	;# 
   326  048C                     	;# 
   327  048C                     	;# 
   328  048D                     	;# 
   329  048E                     	;# 
   330  048F                     	;# 
   331  048F                     	;# 
   332  0490                     	;# 
   333  0491                     	;# 
   334  0492                     	;# 
   335  0492                     	;# 
   336  0493                     	;# 
   337  0494                     	;# 
   338  0495                     	;# 
   339  0495                     	;# 
   340  0496                     	;# 
   341  0497                     	;# 
   342  0498                     	;# 
   343  0499                     	;# 
   344  049A                     	;# 
   345  049B                     	;# 
   346  049C                     	;# 
   347  049D                     	;# 
   348  050C                     	;# 
   349  050C                     	;# 
   350  050D                     	;# 
   351  050E                     	;# 
   352  050F                     	;# 
   353  050F                     	;# 
   354  0510                     	;# 
   355  0511                     	;# 
   356  0512                     	;# 
   357  0512                     	;# 
   358  0513                     	;# 
   359  0514                     	;# 
   360  0515                     	;# 
   361  0515                     	;# 
   362  0516                     	;# 
   363  0517                     	;# 
   364  0518                     	;# 
   365  0519                     	;# 
   366  051A                     	;# 
   367  051B                     	;# 
   368  051C                     	;# 
   369  051D                     	;# 
   370  058C                     	;# 
   371  058C                     	;# 
   372  058D                     	;# 
   373  058E                     	;# 
   374  058F                     	;# 
   375  058F                     	;# 
   376  0590                     	;# 
   377  0591                     	;# 
   378  0592                     	;# 
   379  0593                     	;# 
   380  060C                     	;# 
   381  060D                     	;# 
   382  060E                     	;# 
   383  060F                     	;# 
   384  0610                     	;# 
   385  0611                     	;# 
   386  0612                     	;# 
   387  0613                     	;# 
   388  0614                     	;# 
   389  0616                     	;# 
   390  0617                     	;# 
   391  0618                     	;# 
   392  0619                     	;# 
   393  061A                     	;# 
   394  061B                     	;# 
   395  061C                     	;# 
   396  061D                     	;# 
   397  061E                     	;# 
   398  068C                     	;# 
   399  068D                     	;# 
   400  068E                     	;# 
   401  068F                     	;# 
   402  0690                     	;# 
   403  0691                     	;# 
   404  0692                     	;# 
   405  0693                     	;# 
   406  0694                     	;# 
   407  070C                     	;# 
   408  070D                     	;# 
   409  070E                     	;# 
   410  070F                     	;# 
   411  0710                     	;# 
   412  0711                     	;# 
   413  0712                     	;# 
   414  0713                     	;# 
   415  0714                     	;# 
   416  0716                     	;# 
   417  0717                     	;# 
   418  0718                     	;# 
   419  0719                     	;# 
   420  071A                     	;# 
   421  071B                     	;# 
   422  071C                     	;# 
   423  071D                     	;# 
   424  071E                     	;# 
   425  0796                     	;# 
   426  0797                     	;# 
   427  0798                     	;# 
   428  0799                     	;# 
   429  079A                     	;# 
   430  079B                     	;# 
   431  080C                     	;# 
   432  080D                     	;# 
   433  080E                     	;# 
   434  080F                     	;# 
   435  0810                     	;# 
   436  0811                     	;# 
   437  0812                     	;# 
   438  0813                     	;# 
   439  0814                     	;# 
   440  081A                     	;# 
   441  081B                     	;# 
   442  081C                     	;# 
   443  081D                     	;# 
   444  081E                     	;# 
   445  081F                     	;# 
   446  088C                     	;# 
   447  088D                     	;# 
   448  088E                     	;# 
   449  088F                     	;# 
   450  0890                     	;# 
   451  0891                     	;# 
   452  0892                     	;# 
   453  0893                     	;# 
   454  0895                     	;# 
   455  0896                     	;# 
   456  0897                     	;# 
   457  0898                     	;# 
   458  0899                     	;# 
   459  089A                     	;# 
   460  089B                     	;# 
   461  090C                     	;# 
   462  090E                     	;# 
   463  090F                     	;# 
   464  091F                     	;# 
   465  091F                     	;# 
   466  098F                     	;# 
   467  098F                     	;# 
   468  0990                     	;# 
   469  0991                     	;# 
   470  0992                     	;# 
   471  0993                     	;# 
   472  0994                     	;# 
   473  0995                     	;# 
   474  0996                     	;# 
   475  0997                     	;# 
   476  0E0F                     	;# 
   477  0E10                     	;# 
   478  0E11                     	;# 
   479  0E12                     	;# 
   480  0E13                     	;# 
   481  0E14                     	;# 
   482  0E15                     	;# 
   483  0E16                     	;# 
   484  0E17                     	;# 
   485  0E18                     	;# 
   486  0E19                     	;# 
   487  0E1A                     	;# 
   488  0E1B                     	;# 
   489  0E1C                     	;# 
   490  0E1D                     	;# 
   491  0E1E                     	;# 
   492  0E1F                     	;# 
   493  0E20                     	;# 
   494  0E21                     	;# 
   495  0E22                     	;# 
   496  0E23                     	;# 
   497  0E24                     	;# 
   498  0E25                     	;# 
   499  0E26                     	;# 
   500  0E27                     	;# 
   501  0E28                     	;# 
   502  0E29                     	;# 
   503  0E2A                     	;# 
   504  0E2B                     	;# 
   505  0E2C                     	;# 
   506  0E2D                     	;# 
   507  0E2E                     	;# 
   508  0E2F                     	;# 
   509  0E30                     	;# 
   510  0E31                     	;# 
   511  0E32                     	;# 
   512  0E33                     	;# 
   513  0E34                     	;# 
   514  0E35                     	;# 
   515  0E36                     	;# 
   516  0E37                     	;# 
   517  0E8F                     	;# 
   518  0E90                     	;# 
   519  0E91                     	;# 
   520  0E92                     	;# 
   521  0E93                     	;# 
   522  0E94                     	;# 
   523  0E95                     	;# 
   524  0E96                     	;# 
   525  0E97                     	;# 
   526  0E9C                     	;# 
   527  0E9D                     	;# 
   528  0E9E                     	;# 
   529  0EA1                     	;# 
   530  0EA2                     	;# 
   531  0EA3                     	;# 
   532  0EA4                     	;# 
   533  0EA5                     	;# 
   534  0EA9                     	;# 
   535  0EAA                     	;# 
   536  0EAB                     	;# 
   537  0EAC                     	;# 
   538  0EB1                     	;# 
   539  0EB2                     	;# 
   540  0EB3                     	;# 
   541  0EB8                     	;# 
   542  0EB9                     	;# 
   543  0EBA                     	;# 
   544  0EBB                     	;# 
   545  0EBC                     	;# 
   546  0EBD                     	;# 
   547  0EBE                     	;# 
   548  0EC3                     	;# 
   549  0EC5                     	;# 
   550  0EC6                     	;# 
   551  0EC7                     	;# 
   552  0EC8                     	;# 
   553  0EC9                     	;# 
   554  0ECA                     	;# 
   555  0ECB                     	;# 
   556  0ECC                     	;# 
   557  0F10                     	;# 
   558  0F11                     	;# 
   559  0F12                     	;# 
   560  0F13                     	;# 
   561  0F14                     	;# 
   562  0F15                     	;# 
   563  0F16                     	;# 
   564  0F17                     	;# 
   565  0F18                     	;# 
   566  0F19                     	;# 
   567  0F1A                     	;# 
   568  0F1B                     	;# 
   569  0F1C                     	;# 
   570  0F1D                     	;# 
   571  0F1E                     	;# 
   572  0F1F                     	;# 
   573  0F20                     	;# 
   574  0F21                     	;# 
   575  0F22                     	;# 
   576  0F23                     	;# 
   577  0F24                     	;# 
   578  0F25                     	;# 
   579  0F26                     	;# 
   580  0F27                     	;# 
   581  0F28                     	;# 
   582  0F29                     	;# 
   583  0F2A                     	;# 
   584  0F2B                     	;# 
   585  0F2C                     	;# 
   586  0F2D                     	;# 
   587  0F2E                     	;# 
   588  0F2F                     	;# 
   589  0F30                     	;# 
   590  0F31                     	;# 
   591  0F32                     	;# 
   592  0F38                     	;# 
   593  0F39                     	;# 
   594  0F3A                     	;# 
   595  0F3B                     	;# 
   596  0F3C                     	;# 
   597  0F3D                     	;# 
   598  0F3E                     	;# 
   599  0F3F                     	;# 
   600  0F40                     	;# 
   601  0F41                     	;# 
   602  0F43                     	;# 
   603  0F44                     	;# 
   604  0F45                     	;# 
   605  0F46                     	;# 
   606  0F47                     	;# 
   607  0F48                     	;# 
   608  0F49                     	;# 
   609  0F4A                     	;# 
   610  0F4B                     	;# 
   611  0F4C                     	;# 
   612  0F4E                     	;# 
   613  0F4F                     	;# 
   614  0F50                     	;# 
   615  0F51                     	;# 
   616  0F52                     	;# 
   617  0F53                     	;# 
   618  0F54                     	;# 
   619  0F55                     	;# 
   620  0F56                     	;# 
   621  0F57                     	;# 
   622  0F59                     	;# 
   623  0F5A                     	;# 
   624  0F5B                     	;# 
   625  0F5C                     	;# 
   626  0F5D                     	;# 
   627  0F61                     	;# 
   628  0F62                     	;# 
   629  0F64                     	;# 
   630  0F65                     	;# 
   631  0F66                     	;# 
   632  0F67                     	;# 
   633  0F68                     	;# 
   634  0F69                     	;# 
   635  0F6A                     	;# 
   636  0F6B                     	;# 
   637  0F6C                     	;# 
   638  0F6D                     	;# 
   639  0FE4                     	;# 
   640  0FE5                     	;# 
   641  0FE6                     	;# 
   642  0FE7                     	;# 
   643  0FE8                     	;# 
   644  0FE9                     	;# 
   645  0FEA                     	;# 
   646  0FEB                     	;# 
   647  0FED                     	;# 
   648  0FEE                     	;# 
   649  0FEF                     	;# 
   650  0000                     	;# 
   651  0001                     	;# 
   652  0002                     	;# 
   653  0003                     	;# 
   654  0004                     	;# 
   655  0005                     	;# 
   656  0006                     	;# 
   657  0007                     	;# 
   658  0008                     	;# 
   659  0009                     	;# 
   660  000A                     	;# 
   661  000B                     	;# 
   662  000C                     	;# 
   663  000D                     	;# 
   664  000E                     	;# 
   665  000F                     	;# 
   666  0010                     	;# 
   667  0011                     	;# 
   668  0012                     	;# 
   669  0013                     	;# 
   670  0014                     	;# 
   671  0015                     	;# 
   672  0016                     	;# 
   673  0017                     	;# 
   674  0018                     	;# 
   675  0019                     	;# 
   676  001A                     	;# 
   677  001C                     	;# 
   678  001C                     	;# 
   679  001D                     	;# 
   680  001D                     	;# 
   681  001E                     	;# 
   682  001F                     	;# 
   683  008C                     	;# 
   684  008C                     	;# 
   685  008D                     	;# 
   686  008E                     	;# 
   687  008E                     	;# 
   688  008F                     	;# 
   689  0090                     	;# 
   690  0090                     	;# 
   691  0091                     	;# 
   692  0093                     	;# 
   693  0094                     	;# 
   694  0095                     	;# 
   695  0096                     	;# 
   696  0097                     	;# 
   697  0098                     	;# 
   698  0099                     	;# 
   699  009A                     	;# 
   700  009B                     	;# 
   701  009C                     	;# 
   702  009D                     	;# 
   703  009E                     	;# 
   704  010C                     	;# 
   705  010D                     	;# 
   706  010E                     	;# 
   707  010E                     	;# 
   708  010F                     	;# 
   709  0110                     	;# 
   710  0110                     	;# 
   711  0111                     	;# 
   712  0112                     	;# 
   713  0112                     	;# 
   714  0113                     	;# 
   715  0114                     	;# 
   716  0114                     	;# 
   717  0115                     	;# 
   718  0116                     	;# 
   719  0116                     	;# 
   720  0117                     	;# 
   721  0119                     	;# 
   722  0119                     	;# 
   723  0119                     	;# 
   724  011A                     	;# 
   725  011A                     	;# 
   726  011A                     	;# 
   727  011B                     	;# 
   728  011B                     	;# 
   729  011B                     	;# 
   730  011B                     	;# 
   731  011B                     	;# 
   732  011C                     	;# 
   733  011C                     	;# 
   734  011C                     	;# 
   735  011D                     	;# 
   736  011D                     	;# 
   737  011D                     	;# 
   738  011E                     	;# 
   739  011E                     	;# 
   740  011E                     	;# 
   741  011F                     	;# 
   742  011F                     	;# 
   743  011F                     	;# 
   744  011F                     	;# 
   745  011F                     	;# 
   746  018C                     	;# 
   747  018D                     	;# 
   748  018E                     	;# 
   749  018F                     	;# 
   750  0190                     	;# 
   751  0191                     	;# 
   752  0192                     	;# 
   753  0196                     	;# 
   754  0197                     	;# 
   755  0198                     	;# 
   756  0199                     	;# 
   757  019A                     	;# 
   758  019B                     	;# 
   759  019C                     	;# 
   760  020C                     	;# 
   761  020C                     	;# 
   762  020D                     	;# 
   763  020E                     	;# 
   764  020F                     	;# 
   765  020F                     	;# 
   766  0210                     	;# 
   767  0210                     	;# 
   768  0211                     	;# 
   769  0211                     	;# 
   770  0212                     	;# 
   771  0212                     	;# 
   772  0213                     	;# 
   773  0214                     	;# 
   774  0215                     	;# 
   775  0215                     	;# 
   776  0216                     	;# 
   777  0216                     	;# 
   778  0217                     	;# 
   779  0217                     	;# 
   780  0218                     	;# 
   781  0218                     	;# 
   782  0219                     	;# 
   783  021A                     	;# 
   784  021B                     	;# 
   785  021B                     	;# 
   786  021C                     	;# 
   787  021C                     	;# 
   788  021D                     	;# 
   789  021D                     	;# 
   790  021E                     	;# 
   791  021F                     	;# 
   792  028C                     	;# 
   793  028C                     	;# 
   794  028D                     	;# 
   795  028D                     	;# 
   796  028E                     	;# 
   797  028F                     	;# 
   798  0290                     	;# 
   799  0290                     	;# 
   800  0291                     	;# 
   801  0292                     	;# 
   802  0292                     	;# 
   803  0293                     	;# 
   804  0293                     	;# 
   805  0294                     	;# 
   806  0295                     	;# 
   807  0296                     	;# 
   808  0296                     	;# 
   809  0297                     	;# 
   810  0298                     	;# 
   811  0298                     	;# 
   812  0299                     	;# 
   813  0299                     	;# 
   814  029A                     	;# 
   815  029B                     	;# 
   816  029C                     	;# 
   817  029C                     	;# 
   818  029D                     	;# 
   819  030C                     	;# 
   820  030C                     	;# 
   821  030D                     	;# 
   822  030E                     	;# 
   823  030F                     	;# 
   824  0310                     	;# 
   825  0310                     	;# 
   826  0311                     	;# 
   827  0312                     	;# 
   828  0313                     	;# 
   829  0314                     	;# 
   830  0314                     	;# 
   831  0315                     	;# 
   832  0316                     	;# 
   833  0317                     	;# 
   834  0318                     	;# 
   835  0318                     	;# 
   836  0319                     	;# 
   837  031A                     	;# 
   838  031B                     	;# 
   839  031C                     	;# 
   840  031C                     	;# 
   841  031D                     	;# 
   842  031E                     	;# 
   843  031F                     	;# 
   844  038C                     	;# 
   845  038C                     	;# 
   846  038D                     	;# 
   847  038E                     	;# 
   848  0390                     	;# 
   849  0390                     	;# 
   850  0391                     	;# 
   851  0392                     	;# 
   852  040C                     	;# 
   853  040D                     	;# 
   854  040E                     	;# 
   855  040F                     	;# 
   856  0410                     	;# 
   857  0411                     	;# 
   858  0416                     	;# 
   859  0416                     	;# 
   860  0417                     	;# 
   861  0418                     	;# 
   862  0418                     	;# 
   863  0419                     	;# 
   864  041A                     	;# 
   865  041A                     	;# 
   866  041B                     	;# 
   867  041C                     	;# 
   868  041C                     	;# 
   869  041D                     	;# 
   870  041E                     	;# 
   871  041F                     	;# 
   872  048C                     	;# 
   873  048C                     	;# 
   874  048D                     	;# 
   875  048E                     	;# 
   876  048F                     	;# 
   877  048F                     	;# 
   878  0490                     	;# 
   879  0491                     	;# 
   880  0492                     	;# 
   881  0492                     	;# 
   882  0493                     	;# 
   883  0494                     	;# 
   884  0495                     	;# 
   885  0495                     	;# 
   886  0496                     	;# 
   887  0497                     	;# 
   888  0498                     	;# 
   889  0499                     	;# 
   890  049A                     	;# 
   891  049B                     	;# 
   892  049C                     	;# 
   893  049D                     	;# 
   894  050C                     	;# 
   895  050C                     	;# 
   896  050D                     	;# 
   897  050E                     	;# 
   898  050F                     	;# 
   899  050F                     	;# 
   900  0510                     	;# 
   901  0511                     	;# 
   902  0512                     	;# 
   903  0512                     	;# 
   904  0513                     	;# 
   905  0514                     	;# 
   906  0515                     	;# 
   907  0515                     	;# 
   908  0516                     	;# 
   909  0517                     	;# 
   910  0518                     	;# 
   911  0519                     	;# 
   912  051A                     	;# 
   913  051B                     	;# 
   914  051C                     	;# 
   915  051D                     	;# 
   916  058C                     	;# 
   917  058C                     	;# 
   918  058D                     	;# 
   919  058E                     	;# 
   920  058F                     	;# 
   921  058F                     	;# 
   922  0590                     	;# 
   923  0591                     	;# 
   924  0592                     	;# 
   925  0593                     	;# 
   926  060C                     	;# 
   927  060D                     	;# 
   928  060E                     	;# 
   929  060F                     	;# 
   930  0610                     	;# 
   931  0611                     	;# 
   932  0612                     	;# 
   933  0613                     	;# 
   934  0614                     	;# 
   935  0616                     	;# 
   936  0617                     	;# 
   937  0618                     	;# 
   938  0619                     	;# 
   939  061A                     	;# 
   940  061B                     	;# 
   941  061C                     	;# 
   942  061D                     	;# 
   943  061E                     	;# 
   944  068C                     	;# 
   945  068D                     	;# 
   946  068E                     	;# 
   947  068F                     	;# 
   948  0690                     	;# 
   949  0691                     	;# 
   950  0692                     	;# 
   951  0693                     	;# 
   952  0694                     	;# 
   953  070C                     	;# 
   954  070D                     	;# 
   955  070E                     	;# 
   956  070F                     	;# 
   957  0710                     	;# 
   958  0711                     	;# 
   959  0712                     	;# 
   960  0713                     	;# 
   961  0714                     	;# 
   962  0716                     	;# 
   963  0717                     	;# 
   964  0718                     	;# 
   965  0719                     	;# 
   966  071A                     	;# 
   967  071B                     	;# 
   968  071C                     	;# 
   969  071D                     	;# 
   970  071E                     	;# 
   971  0796                     	;# 
   972  0797                     	;# 
   973  0798                     	;# 
   974  0799                     	;# 
   975  079A                     	;# 
   976  079B                     	;# 
   977  080C                     	;# 
   978  080D                     	;# 
   979  080E                     	;# 
   980  080F                     	;# 
   981  0810                     	;# 
   982  0811                     	;# 
   983  0812                     	;# 
   984  0813                     	;# 
   985  0814                     	;# 
   986  081A                     	;# 
   987  081B                     	;# 
   988  081C                     	;# 
   989  081D                     	;# 
   990  081E                     	;# 
   991  081F                     	;# 
   992  088C                     	;# 
   993  088D                     	;# 
   994  088E                     	;# 
   995  088F                     	;# 
   996  0890                     	;# 
   997  0891                     	;# 
   998  0892                     	;# 
   999  0893                     	;# 
  1000  0895                     	;# 
  1001  0896                     	;# 
  1002  0897                     	;# 
  1003  0898                     	;# 
  1004  0899                     	;# 
  1005  089A                     	;# 
  1006  089B                     	;# 
  1007  090C                     	;# 
  1008  090E                     	;# 
  1009  090F                     	;# 
  1010  091F                     	;# 
  1011  091F                     	;# 
  1012  098F                     	;# 
  1013  098F                     	;# 
  1014  0990                     	;# 
  1015  0991                     	;# 
  1016  0992                     	;# 
  1017  0993                     	;# 
  1018  0994                     	;# 
  1019  0995                     	;# 
  1020  0996                     	;# 
  1021  0997                     	;# 
  1022  0E0F                     	;# 
  1023  0E10                     	;# 
  1024  0E11                     	;# 
  1025  0E12                     	;# 
  1026  0E13                     	;# 
  1027  0E14                     	;# 
  1028  0E15                     	;# 
  1029  0E16                     	;# 
  1030  0E17                     	;# 
  1031  0E18                     	;# 
  1032  0E19                     	;# 
  1033  0E1A                     	;# 
  1034  0E1B                     	;# 
  1035  0E1C                     	;# 
  1036  0E1D                     	;# 
  1037  0E1E                     	;# 
  1038  0E1F                     	;# 
  1039  0E20                     	;# 
  1040  0E21                     	;# 
  1041  0E22                     	;# 
  1042  0E23                     	;# 
  1043  0E24                     	;# 
  1044  0E25                     	;# 
  1045  0E26                     	;# 
  1046  0E27                     	;# 
  1047  0E28                     	;# 
  1048  0E29                     	;# 
  1049  0E2A                     	;# 
  1050  0E2B                     	;# 
  1051  0E2C                     	;# 
  1052  0E2D                     	;# 
  1053  0E2E                     	;# 
  1054  0E2F                     	;# 
  1055  0E30                     	;# 
  1056  0E31                     	;# 
  1057  0E32                     	;# 
  1058  0E33                     	;# 
  1059  0E34                     	;# 
  1060  0E35                     	;# 
  1061  0E36                     	;# 
  1062  0E37                     	;# 
  1063  0E8F                     	;# 
  1064  0E90                     	;# 
  1065  0E91                     	;# 
  1066  0E92                     	;# 
  1067  0E93                     	;# 
  1068  0E94                     	;# 
  1069  0E95                     	;# 
  1070  0E96                     	;# 
  1071  0E97                     	;# 
  1072  0E9C                     	;# 
  1073  0E9D                     	;# 
  1074  0E9E                     	;# 
  1075  0EA1                     	;# 
  1076  0EA2                     	;# 
  1077  0EA3                     	;# 
  1078  0EA4                     	;# 
  1079  0EA5                     	;# 
  1080  0EA9                     	;# 
  1081  0EAA                     	;# 
  1082  0EAB                     	;# 
  1083  0EAC                     	;# 
  1084  0EB1                     	;# 
  1085  0EB2                     	;# 
  1086  0EB3                     	;# 
  1087  0EB8                     	;# 
  1088  0EB9                     	;# 
  1089  0EBA                     	;# 
  1090  0EBB                     	;# 
  1091  0EBC                     	;# 
  1092  0EBD                     	;# 
  1093  0EBE                     	;# 
  1094  0EC3                     	;# 
  1095  0EC5                     	;# 
  1096  0EC6                     	;# 
  1097  0EC7                     	;# 
  1098  0EC8                     	;# 
  1099  0EC9                     	;# 
  1100  0ECA                     	;# 
  1101  0ECB                     	;# 
  1102  0ECC                     	;# 
  1103  0F10                     	;# 
  1104  0F11                     	;# 
  1105  0F12                     	;# 
  1106  0F13                     	;# 
  1107  0F14                     	;# 
  1108  0F15                     	;# 
  1109  0F16                     	;# 
  1110  0F17                     	;# 
  1111  0F18                     	;# 
  1112  0F19                     	;# 
  1113  0F1A                     	;# 
  1114  0F1B                     	;# 
  1115  0F1C                     	;# 
  1116  0F1D                     	;# 
  1117  0F1E                     	;# 
  1118  0F1F                     	;# 
  1119  0F20                     	;# 
  1120  0F21                     	;# 
  1121  0F22                     	;# 
  1122  0F23                     	;# 
  1123  0F24                     	;# 
  1124  0F25                     	;# 
  1125  0F26                     	;# 
  1126  0F27                     	;# 
  1127  0F28                     	;# 
  1128  0F29                     	;# 
  1129  0F2A                     	;# 
  1130  0F2B                     	;# 
  1131  0F2C                     	;# 
  1132  0F2D                     	;# 
  1133  0F2E                     	;# 
  1134  0F2F                     	;# 
  1135  0F30                     	;# 
  1136  0F31                     	;# 
  1137  0F32                     	;# 
  1138  0F38                     	;# 
  1139  0F39                     	;# 
  1140  0F3A                     	;# 
  1141  0F3B                     	;# 
  1142  0F3C                     	;# 
  1143  0F3D                     	;# 
  1144  0F3E                     	;# 
  1145  0F3F                     	;# 
  1146  0F40                     	;# 
  1147  0F41                     	;# 
  1148  0F43                     	;# 
  1149  0F44                     	;# 
  1150  0F45                     	;# 
  1151  0F46                     	;# 
  1152  0F47                     	;# 
  1153  0F48                     	;# 
  1154  0F49                     	;# 
  1155  0F4A                     	;# 
  1156  0F4B                     	;# 
  1157  0F4C                     	;# 
  1158  0F4E                     	;# 
  1159  0F4F                     	;# 
  1160  0F50                     	;# 
  1161  0F51                     	;# 
  1162  0F52                     	;# 
  1163  0F53                     	;# 
  1164  0F54                     	;# 
  1165  0F55                     	;# 
  1166  0F56                     	;# 
  1167  0F57                     	;# 
  1168  0F59                     	;# 
  1169  0F5A                     	;# 
  1170  0F5B                     	;# 
  1171  0F5C                     	;# 
  1172  0F5D                     	;# 
  1173  0F61                     	;# 
  1174  0F62                     	;# 
  1175  0F64                     	;# 
  1176  0F65                     	;# 
  1177  0F66                     	;# 
  1178  0F67                     	;# 
  1179  0F68                     	;# 
  1180  0F69                     	;# 
  1181  0F6A                     	;# 
  1182  0F6B                     	;# 
  1183  0F6C                     	;# 
  1184  0F6D                     	;# 
  1185  0FE4                     	;# 
  1186  0FE5                     	;# 
  1187  0FE6                     	;# 
  1188  0FE7                     	;# 
  1189  0FE8                     	;# 
  1190  0FE9                     	;# 
  1191  0FEA                     	;# 
  1192  0FEB                     	;# 
  1193  0FED                     	;# 
  1194  0FEE                     	;# 
  1195  0FEF                     	;# 
  1196  0000                     	;# 
  1197  0001                     	;# 
  1198  0002                     	;# 
  1199  0003                     	;# 
  1200  0004                     	;# 
  1201  0005                     	;# 
  1202  0006                     	;# 
  1203  0007                     	;# 
  1204  0008                     	;# 
  1205  0009                     	;# 
  1206  000A                     	;# 
  1207  000B                     	;# 
  1208  000C                     	;# 
  1209  000D                     	;# 
  1210  000E                     	;# 
  1211  000F                     	;# 
  1212  0010                     	;# 
  1213  0011                     	;# 
  1214  0012                     	;# 
  1215  0013                     	;# 
  1216  0014                     	;# 
  1217  0015                     	;# 
  1218  0016                     	;# 
  1219  0017                     	;# 
  1220  0018                     	;# 
  1221  0019                     	;# 
  1222  001A                     	;# 
  1223  001C                     	;# 
  1224  001C                     	;# 
  1225  001D                     	;# 
  1226  001D                     	;# 
  1227  001E                     	;# 
  1228  001F                     	;# 
  1229  008C                     	;# 
  1230  008C                     	;# 
  1231  008D                     	;# 
  1232  008E                     	;# 
  1233  008E                     	;# 
  1234  008F                     	;# 
  1235  0090                     	;# 
  1236  0090                     	;# 
  1237  0091                     	;# 
  1238  0093                     	;# 
  1239  0094                     	;# 
  1240  0095                     	;# 
  1241  0096                     	;# 
  1242  0097                     	;# 
  1243  0098                     	;# 
  1244  0099                     	;# 
  1245  009A                     	;# 
  1246  009B                     	;# 
  1247  009C                     	;# 
  1248  009D                     	;# 
  1249  009E                     	;# 
  1250  010C                     	;# 
  1251  010D                     	;# 
  1252  010E                     	;# 
  1253  010E                     	;# 
  1254  010F                     	;# 
  1255  0110                     	;# 
  1256  0110                     	;# 
  1257  0111                     	;# 
  1258  0112                     	;# 
  1259  0112                     	;# 
  1260  0113                     	;# 
  1261  0114                     	;# 
  1262  0114                     	;# 
  1263  0115                     	;# 
  1264  0116                     	;# 
  1265  0116                     	;# 
  1266  0117                     	;# 
  1267  0119                     	;# 
  1268  0119                     	;# 
  1269  0119                     	;# 
  1270  011A                     	;# 
  1271  011A                     	;# 
  1272  011A                     	;# 
  1273  011B                     	;# 
  1274  011B                     	;# 
  1275  011B                     	;# 
  1276  011B                     	;# 
  1277  011B                     	;# 
  1278  011C                     	;# 
  1279  011C                     	;# 
  1280  011C                     	;# 
  1281  011D                     	;# 
  1282  011D                     	;# 
  1283  011D                     	;# 
  1284  011E                     	;# 
  1285  011E                     	;# 
  1286  011E                     	;# 
  1287  011F                     	;# 
  1288  011F                     	;# 
  1289  011F                     	;# 
  1290  011F                     	;# 
  1291  011F                     	;# 
  1292  018C                     	;# 
  1293  018D                     	;# 
  1294  018E                     	;# 
  1295  018F                     	;# 
  1296  0190                     	;# 
  1297  0191                     	;# 
  1298  0192                     	;# 
  1299  0196                     	;# 
  1300  0197                     	;# 
  1301  0198                     	;# 
  1302  0199                     	;# 
  1303  019A                     	;# 
  1304  019B                     	;# 
  1305  019C                     	;# 
  1306  020C                     	;# 
  1307  020C                     	;# 
  1308  020D                     	;# 
  1309  020E                     	;# 
  1310  020F                     	;# 
  1311  020F                     	;# 
  1312  0210                     	;# 
  1313  0210                     	;# 
  1314  0211                     	;# 
  1315  0211                     	;# 
  1316  0212                     	;# 
  1317  0212                     	;# 
  1318  0213                     	;# 
  1319  0214                     	;# 
  1320  0215                     	;# 
  1321  0215                     	;# 
  1322  0216                     	;# 
  1323  0216                     	;# 
  1324  0217                     	;# 
  1325  0217                     	;# 
  1326  0218                     	;# 
  1327  0218                     	;# 
  1328  0219                     	;# 
  1329  021A                     	;# 
  1330  021B                     	;# 
  1331  021B                     	;# 
  1332  021C                     	;# 
  1333  021C                     	;# 
  1334  021D                     	;# 
  1335  021D                     	;# 
  1336  021E                     	;# 
  1337  021F                     	;# 
  1338  028C                     	;# 
  1339  028C                     	;# 
  1340  028D                     	;# 
  1341  028D                     	;# 
  1342  028E                     	;# 
  1343  028F                     	;# 
  1344  0290                     	;# 
  1345  0290                     	;# 
  1346  0291                     	;# 
  1347  0292                     	;# 
  1348  0292                     	;# 
  1349  0293                     	;# 
  1350  0293                     	;# 
  1351  0294                     	;# 
  1352  0295                     	;# 
  1353  0296                     	;# 
  1354  0296                     	;# 
  1355  0297                     	;# 
  1356  0298                     	;# 
  1357  0298                     	;# 
  1358  0299                     	;# 
  1359  0299                     	;# 
  1360  029A                     	;# 
  1361  029B                     	;# 
  1362  029C                     	;# 
  1363  029C                     	;# 
  1364  029D                     	;# 
  1365  030C                     	;# 
  1366  030C                     	;# 
  1367  030D                     	;# 
  1368  030E                     	;# 
  1369  030F                     	;# 
  1370  0310                     	;# 
  1371  0310                     	;# 
  1372  0311                     	;# 
  1373  0312                     	;# 
  1374  0313                     	;# 
  1375  0314                     	;# 
  1376  0314                     	;# 
  1377  0315                     	;# 
  1378  0316                     	;# 
  1379  0317                     	;# 
  1380  0318                     	;# 
  1381  0318                     	;# 
  1382  0319                     	;# 
  1383  031A                     	;# 
  1384  031B                     	;# 
  1385  031C                     	;# 
  1386  031C                     	;# 
  1387  031D                     	;# 
  1388  031E                     	;# 
  1389  031F                     	;# 
  1390  038C                     	;# 
  1391  038C                     	;# 
  1392  038D                     	;# 
  1393  038E                     	;# 
  1394  0390                     	;# 
  1395  0390                     	;# 
  1396  0391                     	;# 
  1397  0392                     	;# 
  1398  040C                     	;# 
  1399  040D                     	;# 
  1400  040E                     	;# 
  1401  040F                     	;# 
  1402  0410                     	;# 
  1403  0411                     	;# 
  1404  0416                     	;# 
  1405  0416                     	;# 
  1406  0417                     	;# 
  1407  0418                     	;# 
  1408  0418                     	;# 
  1409  0419                     	;# 
  1410  041A                     	;# 
  1411  041A                     	;# 
  1412  041B                     	;# 
  1413  041C                     	;# 
  1414  041C                     	;# 
  1415  041D                     	;# 
  1416  041E                     	;# 
  1417  041F                     	;# 
  1418  048C                     	;# 
  1419  048C                     	;# 
  1420  048D                     	;# 
  1421  048E                     	;# 
  1422  048F                     	;# 
  1423  048F                     	;# 
  1424  0490                     	;# 
  1425  0491                     	;# 
  1426  0492                     	;# 
  1427  0492                     	;# 
  1428  0493                     	;# 
  1429  0494                     	;# 
  1430  0495                     	;# 
  1431  0495                     	;# 
  1432  0496                     	;# 
  1433  0497                     	;# 
  1434  0498                     	;# 
  1435  0499                     	;# 
  1436  049A                     	;# 
  1437  049B                     	;# 
  1438  049C                     	;# 
  1439  049D                     	;# 
  1440  050C                     	;# 
  1441  050C                     	;# 
  1442  050D                     	;# 
  1443  050E                     	;# 
  1444  050F                     	;# 
  1445  050F                     	;# 
  1446  0510                     	;# 
  1447  0511                     	;# 
  1448  0512                     	;# 
  1449  0512                     	;# 
  1450  0513                     	;# 
  1451  0514                     	;# 
  1452  0515                     	;# 
  1453  0515                     	;# 
  1454  0516                     	;# 
  1455  0517                     	;# 
  1456  0518                     	;# 
  1457  0519                     	;# 
  1458  051A                     	;# 
  1459  051B                     	;# 
  1460  051C                     	;# 
  1461  051D                     	;# 
  1462  058C                     	;# 
  1463  058C                     	;# 
  1464  058D                     	;# 
  1465  058E                     	;# 
  1466  058F                     	;# 
  1467  058F                     	;# 
  1468  0590                     	;# 
  1469  0591                     	;# 
  1470  0592                     	;# 
  1471  0593                     	;# 
  1472  060C                     	;# 
  1473  060D                     	;# 
  1474  060E                     	;# 
  1475  060F                     	;# 
  1476  0610                     	;# 
  1477  0611                     	;# 
  1478  0612                     	;# 
  1479  0613                     	;# 
  1480  0614                     	;# 
  1481  0616                     	;# 
  1482  0617                     	;# 
  1483  0618                     	;# 
  1484  0619                     	;# 
  1485  061A                     	;# 
  1486  061B                     	;# 
  1487  061C                     	;# 
  1488  061D                     	;# 
  1489  061E                     	;# 
  1490  068C                     	;# 
  1491  068D                     	;# 
  1492  068E                     	;# 
  1493  068F                     	;# 
  1494  0690                     	;# 
  1495  0691                     	;# 
  1496  0692                     	;# 
  1497  0693                     	;# 
  1498  0694                     	;# 
  1499  070C                     	;# 
  1500  070D                     	;# 
  1501  070E                     	;# 
  1502  070F                     	;# 
  1503  0710                     	;# 
  1504  0711                     	;# 
  1505  0712                     	;# 
  1506  0713                     	;# 
  1507  0714                     	;# 
  1508  0716                     	;# 
  1509  0717                     	;# 
  1510  0718                     	;# 
  1511  0719                     	;# 
  1512  071A                     	;# 
  1513  071B                     	;# 
  1514  071C                     	;# 
  1515  071D                     	;# 
  1516  071E                     	;# 
  1517  0796                     	;# 
  1518  0797                     	;# 
  1519  0798                     	;# 
  1520  0799                     	;# 
  1521  079A                     	;# 
  1522  079B                     	;# 
  1523  080C                     	;# 
  1524  080D                     	;# 
  1525  080E                     	;# 
  1526  080F                     	;# 
  1527  0810                     	;# 
  1528  0811                     	;# 
  1529  0812                     	;# 
  1530  0813                     	;# 
  1531  0814                     	;# 
  1532  081A                     	;# 
  1533  081B                     	;# 
  1534  081C                     	;# 
  1535  081D                     	;# 
  1536  081E                     	;# 
  1537  081F                     	;# 
  1538  088C                     	;# 
  1539  088D                     	;# 
  1540  088E                     	;# 
  1541  088F                     	;# 
  1542  0890                     	;# 
  1543  0891                     	;# 
  1544  0892                     	;# 
  1545  0893                     	;# 
  1546  0895                     	;# 
  1547  0896                     	;# 
  1548  0897                     	;# 
  1549  0898                     	;# 
  1550  0899                     	;# 
  1551  089A                     	;# 
  1552  089B                     	;# 
  1553  090C                     	;# 
  1554  090E                     	;# 
  1555  090F                     	;# 
  1556  091F                     	;# 
  1557  091F                     	;# 
  1558  098F                     	;# 
  1559  098F                     	;# 
  1560  0990                     	;# 
  1561  0991                     	;# 
  1562  0992                     	;# 
  1563  0993                     	;# 
  1564  0994                     	;# 
  1565  0995                     	;# 
  1566  0996                     	;# 
  1567  0997                     	;# 
  1568  0E0F                     	;# 
  1569  0E10                     	;# 
  1570  0E11                     	;# 
  1571  0E12                     	;# 
  1572  0E13                     	;# 
  1573  0E14                     	;# 
  1574  0E15                     	;# 
  1575  0E16                     	;# 
  1576  0E17                     	;# 
  1577  0E18                     	;# 
  1578  0E19                     	;# 
  1579  0E1A                     	;# 
  1580  0E1B                     	;# 
  1581  0E1C                     	;# 
  1582  0E1D                     	;# 
  1583  0E1E                     	;# 
  1584  0E1F                     	;# 
  1585  0E20                     	;# 
  1586  0E21                     	;# 
  1587  0E22                     	;# 
  1588  0E23                     	;# 
  1589  0E24                     	;# 
  1590  0E25                     	;# 
  1591  0E26                     	;# 
  1592  0E27                     	;# 
  1593  0E28                     	;# 
  1594  0E29                     	;# 
  1595  0E2A                     	;# 
  1596  0E2B                     	;# 
  1597  0E2C                     	;# 
  1598  0E2D                     	;# 
  1599  0E2E                     	;# 
  1600  0E2F                     	;# 
  1601  0E30                     	;# 
  1602  0E31                     	;# 
  1603  0E32                     	;# 
  1604  0E33                     	;# 
  1605  0E34                     	;# 
  1606  0E35                     	;# 
  1607  0E36                     	;# 
  1608  0E37                     	;# 
  1609  0E8F                     	;# 
  1610  0E90                     	;# 
  1611  0E91                     	;# 
  1612  0E92                     	;# 
  1613  0E93                     	;# 
  1614  0E94                     	;# 
  1615  0E95                     	;# 
  1616  0E96                     	;# 
  1617  0E97                     	;# 
  1618  0E9C                     	;# 
  1619  0E9D                     	;# 
  1620  0E9E                     	;# 
  1621  0EA1                     	;# 
  1622  0EA2                     	;# 
  1623  0EA3                     	;# 
  1624  0EA4                     	;# 
  1625  0EA5                     	;# 
  1626  0EA9                     	;# 
  1627  0EAA                     	;# 
  1628  0EAB                     	;# 
  1629  0EAC                     	;# 
  1630  0EB1                     	;# 
  1631  0EB2                     	;# 
  1632  0EB3                     	;# 
  1633  0EB8                     	;# 
  1634  0EB9                     	;# 
  1635  0EBA                     	;# 
  1636  0EBB                     	;# 
  1637  0EBC                     	;# 
  1638  0EBD                     	;# 
  1639  0EBE                     	;# 
  1640  0EC3                     	;# 
  1641  0EC5                     	;# 
  1642  0EC6                     	;# 
  1643  0EC7                     	;# 
  1644  0EC8                     	;# 
  1645  0EC9                     	;# 
  1646  0ECA                     	;# 
  1647  0ECB                     	;# 
  1648  0ECC                     	;# 
  1649  0F10                     	;# 
  1650  0F11                     	;# 
  1651  0F12                     	;# 
  1652  0F13                     	;# 
  1653  0F14                     	;# 
  1654  0F15                     	;# 
  1655  0F16                     	;# 
  1656  0F17                     	;# 
  1657  0F18                     	;# 
  1658  0F19                     	;# 
  1659  0F1A                     	;# 
  1660  0F1B                     	;# 
  1661  0F1C                     	;# 
  1662  0F1D                     	;# 
  1663  0F1E                     	;# 
  1664  0F1F                     	;# 
  1665  0F20                     	;# 
  1666  0F21                     	;# 
  1667  0F22                     	;# 
  1668  0F23                     	;# 
  1669  0F24                     	;# 
  1670  0F25                     	;# 
  1671  0F26                     	;# 
  1672  0F27                     	;# 
  1673  0F28                     	;# 
  1674  0F29                     	;# 
  1675  0F2A                     	;# 
  1676  0F2B                     	;# 
  1677  0F2C                     	;# 
  1678  0F2D                     	;# 
  1679  0F2E                     	;# 
  1680  0F2F                     	;# 
  1681  0F30                     	;# 
  1682  0F31                     	;# 
  1683  0F32                     	;# 
  1684  0F38                     	;# 
  1685  0F39                     	;# 
  1686  0F3A                     	;# 
  1687  0F3B                     	;# 
  1688  0F3C                     	;# 
  1689  0F3D                     	;# 
  1690  0F3E                     	;# 
  1691  0F3F                     	;# 
  1692  0F40                     	;# 
  1693  0F41                     	;# 
  1694  0F43                     	;# 
  1695  0F44                     	;# 
  1696  0F45                     	;# 
  1697  0F46                     	;# 
  1698  0F47                     	;# 
  1699  0F48                     	;# 
  1700  0F49                     	;# 
  1701  0F4A                     	;# 
  1702  0F4B                     	;# 
  1703  0F4C                     	;# 
  1704  0F4E                     	;# 
  1705  0F4F                     	;# 
  1706  0F50                     	;# 
  1707  0F51                     	;# 
  1708  0F52                     	;# 
  1709  0F53                     	;# 
  1710  0F54                     	;# 
  1711  0F55                     	;# 
  1712  0F56                     	;# 
  1713  0F57                     	;# 
  1714  0F59                     	;# 
  1715  0F5A                     	;# 
  1716  0F5B                     	;# 
  1717  0F5C                     	;# 
  1718  0F5D                     	;# 
  1719  0F61                     	;# 
  1720  0F62                     	;# 
  1721  0F64                     	;# 
  1722  0F65                     	;# 
  1723  0F66                     	;# 
  1724  0F67                     	;# 
  1725  0F68                     	;# 
  1726  0F69                     	;# 
  1727  0F6A                     	;# 
  1728  0F6B                     	;# 
  1729  0F6C                     	;# 
  1730  0F6D                     	;# 
  1731  0FE4                     	;# 
  1732  0FE5                     	;# 
  1733  0FE6                     	;# 
  1734  0FE7                     	;# 
  1735  0FE8                     	;# 
  1736  0FE9                     	;# 
  1737  0FEA                     	;# 
  1738  0FEB                     	;# 
  1739  0FED                     	;# 
  1740  0FEE                     	;# 
  1741  0FEF                     	;# 
  1742  0000                     	;# 
  1743  0001                     	;# 
  1744  0002                     	;# 
  1745  0003                     	;# 
  1746  0004                     	;# 
  1747  0005                     	;# 
  1748  0006                     	;# 
  1749  0007                     	;# 
  1750  0008                     	;# 
  1751  0009                     	;# 
  1752  000A                     	;# 
  1753  000B                     	;# 
  1754  000C                     	;# 
  1755  000D                     	;# 
  1756  000E                     	;# 
  1757  000F                     	;# 
  1758  0010                     	;# 
  1759  0011                     	;# 
  1760  0012                     	;# 
  1761  0013                     	;# 
  1762  0014                     	;# 
  1763  0015                     	;# 
  1764  0016                     	;# 
  1765  0017                     	;# 
  1766  0018                     	;# 
  1767  0019                     	;# 
  1768  001A                     	;# 
  1769  001C                     	;# 
  1770  001C                     	;# 
  1771  001D                     	;# 
  1772  001D                     	;# 
  1773  001E                     	;# 
  1774  001F                     	;# 
  1775  008C                     	;# 
  1776  008C                     	;# 
  1777  008D                     	;# 
  1778  008E                     	;# 
  1779  008E                     	;# 
  1780  008F                     	;# 
  1781  0090                     	;# 
  1782  0090                     	;# 
  1783  0091                     	;# 
  1784  0093                     	;# 
  1785  0094                     	;# 
  1786  0095                     	;# 
  1787  0096                     	;# 
  1788  0097                     	;# 
  1789  0098                     	;# 
  1790  0099                     	;# 
  1791  009A                     	;# 
  1792  009B                     	;# 
  1793  009C                     	;# 
  1794  009D                     	;# 
  1795  009E                     	;# 
  1796  010C                     	;# 
  1797  010D                     	;# 
  1798  010E                     	;# 
  1799  010E                     	;# 
  1800  010F                     	;# 
  1801  0110                     	;# 
  1802  0110                     	;# 
  1803  0111                     	;# 
  1804  0112                     	;# 
  1805  0112                     	;# 
  1806  0113                     	;# 
  1807  0114                     	;# 
  1808  0114                     	;# 
  1809  0115                     	;# 
  1810  0116                     	;# 
  1811  0116                     	;# 
  1812  0117                     	;# 
  1813  0119                     	;# 
  1814  0119                     	;# 
  1815  0119                     	;# 
  1816  011A                     	;# 
  1817  011A                     	;# 
  1818  011A                     	;# 
  1819  011B                     	;# 
  1820  011B                     	;# 
  1821  011B                     	;# 
  1822  011B                     	;# 
  1823  011B                     	;# 
  1824  011C                     	;# 
  1825  011C                     	;# 
  1826  011C                     	;# 
  1827  011D                     	;# 
  1828  011D                     	;# 
  1829  011D                     	;# 
  1830  011E                     	;# 
  1831  011E                     	;# 
  1832  011E                     	;# 
  1833  011F                     	;# 
  1834  011F                     	;# 
  1835  011F                     	;# 
  1836  011F                     	;# 
  1837  011F                     	;# 
  1838  018C                     	;# 
  1839  018D                     	;# 
  1840  018E                     	;# 
  1841  018F                     	;# 
  1842  0190                     	;# 
  1843  0191                     	;# 
  1844  0192                     	;# 
  1845  0196                     	;# 
  1846  0197                     	;# 
  1847  0198                     	;# 
  1848  0199                     	;# 
  1849  019A                     	;# 
  1850  019B                     	;# 
  1851  019C                     	;# 
  1852  020C                     	;# 
  1853  020C                     	;# 
  1854  020D                     	;# 
  1855  020E                     	;# 
  1856  020F                     	;# 
  1857  020F                     	;# 
  1858  0210                     	;# 
  1859  0210                     	;# 
  1860  0211                     	;# 
  1861  0211                     	;# 
  1862  0212                     	;# 
  1863  0212                     	;# 
  1864  0213                     	;# 
  1865  0214                     	;# 
  1866  0215                     	;# 
  1867  0215                     	;# 
  1868  0216                     	;# 
  1869  0216                     	;# 
  1870  0217                     	;# 
  1871  0217                     	;# 
  1872  0218                     	;# 
  1873  0218                     	;# 
  1874  0219                     	;# 
  1875  021A                     	;# 
  1876  021B                     	;# 
  1877  021B                     	;# 
  1878  021C                     	;# 
  1879  021C                     	;# 
  1880  021D                     	;# 
  1881  021D                     	;# 
  1882  021E                     	;# 
  1883  021F                     	;# 
  1884  028C                     	;# 
  1885  028C                     	;# 
  1886  028D                     	;# 
  1887  028D                     	;# 
  1888  028E                     	;# 
  1889  028F                     	;# 
  1890  0290                     	;# 
  1891  0290                     	;# 
  1892  0291                     	;# 
  1893  0292                     	;# 
  1894  0292                     	;# 
  1895  0293                     	;# 
  1896  0293                     	;# 
  1897  0294                     	;# 
  1898  0295                     	;# 
  1899  0296                     	;# 
  1900  0296                     	;# 
  1901  0297                     	;# 
  1902  0298                     	;# 
  1903  0298                     	;# 
  1904  0299                     	;# 
  1905  0299                     	;# 
  1906  029A                     	;# 
  1907  029B                     	;# 
  1908  029C                     	;# 
  1909  029C                     	;# 
  1910  029D                     	;# 
  1911  030C                     	;# 
  1912  030C                     	;# 
  1913  030D                     	;# 
  1914  030E                     	;# 
  1915  030F                     	;# 
  1916  0310                     	;# 
  1917  0310                     	;# 
  1918  0311                     	;# 
  1919  0312                     	;# 
  1920  0313                     	;# 
  1921  0314                     	;# 
  1922  0314                     	;# 
  1923  0315                     	;# 
  1924  0316                     	;# 
  1925  0317                     	;# 
  1926  0318                     	;# 
  1927  0318                     	;# 
  1928  0319                     	;# 
  1929  031A                     	;# 
  1930  031B                     	;# 
  1931  031C                     	;# 
  1932  031C                     	;# 
  1933  031D                     	;# 
  1934  031E                     	;# 
  1935  031F                     	;# 
  1936  038C                     	;# 
  1937  038C                     	;# 
  1938  038D                     	;# 
  1939  038E                     	;# 
  1940  0390                     	;# 
  1941  0390                     	;# 
  1942  0391                     	;# 
  1943  0392                     	;# 
  1944  040C                     	;# 
  1945  040D                     	;# 
  1946  040E                     	;# 
  1947  040F                     	;# 
  1948  0410                     	;# 
  1949  0411                     	;# 
  1950  0416                     	;# 
  1951  0416                     	;# 
  1952  0417                     	;# 
  1953  0418                     	;# 
  1954  0418                     	;# 
  1955  0419                     	;# 
  1956  041A                     	;# 
  1957  041A                     	;# 
  1958  041B                     	;# 
  1959  041C                     	;# 
  1960  041C                     	;# 
  1961  041D                     	;# 
  1962  041E                     	;# 
  1963  041F                     	;# 
  1964  048C                     	;# 
  1965  048C                     	;# 
  1966  048D                     	;# 
  1967  048E                     	;# 
  1968  048F                     	;# 
  1969  048F                     	;# 
  1970  0490                     	;# 
  1971  0491                     	;# 
  1972  0492                     	;# 
  1973  0492                     	;# 
  1974  0493                     	;# 
  1975  0494                     	;# 
  1976  0495                     	;# 
  1977  0495                     	;# 
  1978  0496                     	;# 
  1979  0497                     	;# 
  1980  0498                     	;# 
  1981  0499                     	;# 
  1982  049A                     	;# 
  1983  049B                     	;# 
  1984  049C                     	;# 
  1985  049D                     	;# 
  1986  050C                     	;# 
  1987  050C                     	;# 
  1988  050D                     	;# 
  1989  050E                     	;# 
  1990  050F                     	;# 
  1991  050F                     	;# 
  1992  0510                     	;# 
  1993  0511                     	;# 
  1994  0512                     	;# 
  1995  0512                     	;# 
  1996  0513                     	;# 
  1997  0514                     	;# 
  1998  0515                     	;# 
  1999  0515                     	;# 
  2000  0516                     	;# 
  2001  0517                     	;# 
  2002  0518                     	;# 
  2003  0519                     	;# 
  2004  051A                     	;# 
  2005  051B                     	;# 
  2006  051C                     	;# 
  2007  051D                     	;# 
  2008  058C                     	;# 
  2009  058C                     	;# 
  2010  058D                     	;# 
  2011  058E                     	;# 
  2012  058F                     	;# 
  2013  058F                     	;# 
  2014  0590                     	;# 
  2015  0591                     	;# 
  2016  0592                     	;# 
  2017  0593                     	;# 
  2018  060C                     	;# 
  2019  060D                     	;# 
  2020  060E                     	;# 
  2021  060F                     	;# 
  2022  0610                     	;# 
  2023  0611                     	;# 
  2024  0612                     	;# 
  2025  0613                     	;# 
  2026  0614                     	;# 
  2027  0616                     	;# 
  2028  0617                     	;# 
  2029  0618                     	;# 
  2030  0619                     	;# 
  2031  061A                     	;# 
  2032  061B                     	;# 
  2033  061C                     	;# 
  2034  061D                     	;# 
  2035  061E                     	;# 
  2036  068C                     	;# 
  2037  068D                     	;# 
  2038  068E                     	;# 
  2039  068F                     	;# 
  2040  0690                     	;# 
  2041  0691                     	;# 
  2042  0692                     	;# 
  2043  0693                     	;# 
  2044  0694                     	;# 
  2045  070C                     	;# 
  2046  070D                     	;# 
  2047  070E                     	;# 
  2048  070F                     	;# 
  2049  0710                     	;# 
  2050  0711                     	;# 
  2051  0712                     	;# 
  2052  0713                     	;# 
  2053  0714                     	;# 
  2054  0716                     	;# 
  2055  0717                     	;# 
  2056  0718                     	;# 
  2057  0719                     	;# 
  2058  071A                     	;# 
  2059  071B                     	;# 
  2060  071C                     	;# 
  2061  071D                     	;# 
  2062  071E                     	;# 
  2063  0796                     	;# 
  2064  0797                     	;# 
  2065  0798                     	;# 
  2066  0799                     	;# 
  2067  079A                     	;# 
  2068  079B                     	;# 
  2069  080C                     	;# 
  2070  080D                     	;# 
  2071  080E                     	;# 
  2072  080F                     	;# 
  2073  0810                     	;# 
  2074  0811                     	;# 
  2075  0812                     	;# 
  2076  0813                     	;# 
  2077  0814                     	;# 
  2078  081A                     	;# 
  2079  081B                     	;# 
  2080  081C                     	;# 
  2081  081D                     	;# 
  2082  081E                     	;# 
  2083  081F                     	;# 
  2084  088C                     	;# 
  2085  088D                     	;# 
  2086  088E                     	;# 
  2087  088F                     	;# 
  2088  0890                     	;# 
  2089  0891                     	;# 
  2090  0892                     	;# 
  2091  0893                     	;# 
  2092  0895                     	;# 
  2093  0896                     	;# 
  2094  0897                     	;# 
  2095  0898                     	;# 
  2096  0899                     	;# 
  2097  089A                     	;# 
  2098  089B                     	;# 
  2099  090C                     	;# 
  2100  090E                     	;# 
  2101  090F                     	;# 
  2102  091F                     	;# 
  2103  091F                     	;# 
  2104  098F                     	;# 
  2105  098F                     	;# 
  2106  0990                     	;# 
  2107  0991                     	;# 
  2108  0992                     	;# 
  2109  0993                     	;# 
  2110  0994                     	;# 
  2111  0995                     	;# 
  2112  0996                     	;# 
  2113  0997                     	;# 
  2114  0E0F                     	;# 
  2115  0E10                     	;# 
  2116  0E11                     	;# 
  2117  0E12                     	;# 
  2118  0E13                     	;# 
  2119  0E14                     	;# 
  2120  0E15                     	;# 
  2121  0E16                     	;# 
  2122  0E17                     	;# 
  2123  0E18                     	;# 
  2124  0E19                     	;# 
  2125  0E1A                     	;# 
  2126  0E1B                     	;# 
  2127  0E1C                     	;# 
  2128  0E1D                     	;# 
  2129  0E1E                     	;# 
  2130  0E1F                     	;# 
  2131  0E20                     	;# 
  2132  0E21                     	;# 
  2133  0E22                     	;# 
  2134  0E23                     	;# 
  2135  0E24                     	;# 
  2136  0E25                     	;# 
  2137  0E26                     	;# 
  2138  0E27                     	;# 
  2139  0E28                     	;# 
  2140  0E29                     	;# 
  2141  0E2A                     	;# 
  2142  0E2B                     	;# 
  2143  0E2C                     	;# 
  2144  0E2D                     	;# 
  2145  0E2E                     	;# 
  2146  0E2F                     	;# 
  2147  0E30                     	;# 
  2148  0E31                     	;# 
  2149  0E32                     	;# 
  2150  0E33                     	;# 
  2151  0E34                     	;# 
  2152  0E35                     	;# 
  2153  0E36                     	;# 
  2154  0E37                     	;# 
  2155  0E8F                     	;# 
  2156  0E90                     	;# 
  2157  0E91                     	;# 
  2158  0E92                     	;# 
  2159  0E93                     	;# 
  2160  0E94                     	;# 
  2161  0E95                     	;# 
  2162  0E96                     	;# 
  2163  0E97                     	;# 
  2164  0E9C                     	;# 
  2165  0E9D                     	;# 
  2166  0E9E                     	;# 
  2167  0EA1                     	;# 
  2168  0EA2                     	;# 
  2169  0EA3                     	;# 
  2170  0EA4                     	;# 
  2171  0EA5                     	;# 
  2172  0EA9                     	;# 
  2173  0EAA                     	;# 
  2174  0EAB                     	;# 
  2175  0EAC                     	;# 
  2176  0EB1                     	;# 
  2177  0EB2                     	;# 
  2178  0EB3                     	;# 
  2179  0EB8                     	;# 
  2180  0EB9                     	;# 
  2181  0EBA                     	;# 
  2182  0EBB                     	;# 
  2183  0EBC                     	;# 
  2184  0EBD                     	;# 
  2185  0EBE                     	;# 
  2186  0EC3                     	;# 
  2187  0EC5                     	;# 
  2188  0EC6                     	;# 
  2189  0EC7                     	;# 
  2190  0EC8                     	;# 
  2191  0EC9                     	;# 
  2192  0ECA                     	;# 
  2193  0ECB                     	;# 
  2194  0ECC                     	;# 
  2195  0F10                     	;# 
  2196  0F11                     	;# 
  2197  0F12                     	;# 
  2198  0F13                     	;# 
  2199  0F14                     	;# 
  2200  0F15                     	;# 
  2201  0F16                     	;# 
  2202  0F17                     	;# 
  2203  0F18                     	;# 
  2204  0F19                     	;# 
  2205  0F1A                     	;# 
  2206  0F1B                     	;# 
  2207  0F1C                     	;# 
  2208  0F1D                     	;# 
  2209  0F1E                     	;# 
  2210  0F1F                     	;# 
  2211  0F20                     	;# 
  2212  0F21                     	;# 
  2213  0F22                     	;# 
  2214  0F23                     	;# 
  2215  0F24                     	;# 
  2216  0F25                     	;# 
  2217  0F26                     	;# 
  2218  0F27                     	;# 
  2219  0F28                     	;# 
  2220  0F29                     	;# 
  2221  0F2A                     	;# 
  2222  0F2B                     	;# 
  2223  0F2C                     	;# 
  2224  0F2D                     	;# 
  2225  0F2E                     	;# 
  2226  0F2F                     	;# 
  2227  0F30                     	;# 
  2228  0F31                     	;# 
  2229  0F32                     	;# 
  2230  0F38                     	;# 
  2231  0F39                     	;# 
  2232  0F3A                     	;# 
  2233  0F3B                     	;# 
  2234  0F3C                     	;# 
  2235  0F3D                     	;# 
  2236  0F3E                     	;# 
  2237  0F3F                     	;# 
  2238  0F40                     	;# 
  2239  0F41                     	;# 
  2240  0F43                     	;# 
  2241  0F44                     	;# 
  2242  0F45                     	;# 
  2243  0F46                     	;# 
  2244  0F47                     	;# 
  2245  0F48                     	;# 
  2246  0F49                     	;# 
  2247  0F4A                     	;# 
  2248  0F4B                     	;# 
  2249  0F4C                     	;# 
  2250  0F4E                     	;# 
  2251  0F4F                     	;# 
  2252  0F50                     	;# 
  2253  0F51                     	;# 
  2254  0F52                     	;# 
  2255  0F53                     	;# 
  2256  0F54                     	;# 
  2257  0F55                     	;# 
  2258  0F56                     	;# 
  2259  0F57                     	;# 
  2260  0F59                     	;# 
  2261  0F5A                     	;# 
  2262  0F5B                     	;# 
  2263  0F5C                     	;# 
  2264  0F5D                     	;# 
  2265  0F61                     	;# 
  2266  0F62                     	;# 
  2267  0F64                     	;# 
  2268  0F65                     	;# 
  2269  0F66                     	;# 
  2270  0F67                     	;# 
  2271  0F68                     	;# 
  2272  0F69                     	;# 
  2273  0F6A                     	;# 
  2274  0F6B                     	;# 
  2275  0F6C                     	;# 
  2276  0F6D                     	;# 
  2277  0FE4                     	;# 
  2278  0FE5                     	;# 
  2279  0FE6                     	;# 
  2280  0FE7                     	;# 
  2281  0FE8                     	;# 
  2282  0FE9                     	;# 
  2283  0FEA                     	;# 
  2284  0FEB                     	;# 
  2285  0FED                     	;# 
  2286  0FEE                     	;# 
  2287  0FEF                     	;# 
  2288  0000                     	;# 
  2289  0001                     	;# 
  2290  0002                     	;# 
  2291  0003                     	;# 
  2292  0004                     	;# 
  2293  0005                     	;# 
  2294  0006                     	;# 
  2295  0007                     	;# 
  2296  0008                     	;# 
  2297  0009                     	;# 
  2298  000A                     	;# 
  2299  000B                     	;# 
  2300  000C                     	;# 
  2301  000D                     	;# 
  2302  000E                     	;# 
  2303  000F                     	;# 
  2304  0010                     	;# 
  2305  0011                     	;# 
  2306  0012                     	;# 
  2307  0013                     	;# 
  2308  0014                     	;# 
  2309  0015                     	;# 
  2310  0016                     	;# 
  2311  0017                     	;# 
  2312  0018                     	;# 
  2313  0019                     	;# 
  2314  001A                     	;# 
  2315  001C                     	;# 
  2316  001C                     	;# 
  2317  001D                     	;# 
  2318  001D                     	;# 
  2319  001E                     	;# 
  2320  001F                     	;# 
  2321  008C                     	;# 
  2322  008C                     	;# 
  2323  008D                     	;# 
  2324  008E                     	;# 
  2325  008E                     	;# 
  2326  008F                     	;# 
  2327  0090                     	;# 
  2328  0090                     	;# 
  2329  0091                     	;# 
  2330  0093                     	;# 
  2331  0094                     	;# 
  2332  0095                     	;# 
  2333  0096                     	;# 
  2334  0097                     	;# 
  2335  0098                     	;# 
  2336  0099                     	;# 
  2337  009A                     	;# 
  2338  009B                     	;# 
  2339  009C                     	;# 
  2340  009D                     	;# 
  2341  009E                     	;# 
  2342  010C                     	;# 
  2343  010D                     	;# 
  2344  010E                     	;# 
  2345  010E                     	;# 
  2346  010F                     	;# 
  2347  0110                     	;# 
  2348  0110                     	;# 
  2349  0111                     	;# 
  2350  0112                     	;# 
  2351  0112                     	;# 
  2352  0113                     	;# 
  2353  0114                     	;# 
  2354  0114                     	;# 
  2355  0115                     	;# 
  2356  0116                     	;# 
  2357  0116                     	;# 
  2358  0117                     	;# 
  2359  0119                     	;# 
  2360  0119                     	;# 
  2361  0119                     	;# 
  2362  011A                     	;# 
  2363  011A                     	;# 
  2364  011A                     	;# 
  2365  011B                     	;# 
  2366  011B                     	;# 
  2367  011B                     	;# 
  2368  011B                     	;# 
  2369  011B                     	;# 
  2370  011C                     	;# 
  2371  011C                     	;# 
  2372  011C                     	;# 
  2373  011D                     	;# 
  2374  011D                     	;# 
  2375  011D                     	;# 
  2376  011E                     	;# 
  2377  011E                     	;# 
  2378  011E                     	;# 
  2379  011F                     	;# 
  2380  011F                     	;# 
  2381  011F                     	;# 
  2382  011F                     	;# 
  2383  011F                     	;# 
  2384  018C                     	;# 
  2385  018D                     	;# 
  2386  018E                     	;# 
  2387  018F                     	;# 
  2388  0190                     	;# 
  2389  0191                     	;# 
  2390  0192                     	;# 
  2391  0196                     	;# 
  2392  0197                     	;# 
  2393  0198                     	;# 
  2394  0199                     	;# 
  2395  019A                     	;# 
  2396  019B                     	;# 
  2397  019C                     	;# 
  2398  020C                     	;# 
  2399  020C                     	;# 
  2400  020D                     	;# 
  2401  020E                     	;# 
  2402  020F                     	;# 
  2403  020F                     	;# 
  2404  0210                     	;# 
  2405  0210                     	;# 
  2406  0211                     	;# 
  2407  0211                     	;# 
  2408  0212                     	;# 
  2409  0212                     	;# 
  2410  0213                     	;# 
  2411  0214                     	;# 
  2412  0215                     	;# 
  2413  0215                     	;# 
  2414  0216                     	;# 
  2415  0216                     	;# 
  2416  0217                     	;# 
  2417  0217                     	;# 
  2418  0218                     	;# 
  2419  0218                     	;# 
  2420  0219                     	;# 
  2421  021A                     	;# 
  2422  021B                     	;# 
  2423  021B                     	;# 
  2424  021C                     	;# 
  2425  021C                     	;# 
  2426  021D                     	;# 
  2427  021D                     	;# 
  2428  021E                     	;# 
  2429  021F                     	;# 
  2430  028C                     	;# 
  2431  028C                     	;# 
  2432  028D                     	;# 
  2433  028D                     	;# 
  2434  028E                     	;# 
  2435  028F                     	;# 
  2436  0290                     	;# 
  2437  0290                     	;# 
  2438  0291                     	;# 
  2439  0292                     	;# 
  2440  0292                     	;# 
  2441  0293                     	;# 
  2442  0293                     	;# 
  2443  0294                     	;# 
  2444  0295                     	;# 
  2445  0296                     	;# 
  2446  0296                     	;# 
  2447  0297                     	;# 
  2448  0298                     	;# 
  2449  0298                     	;# 
  2450  0299                     	;# 
  2451  0299                     	;# 
  2452  029A                     	;# 
  2453  029B                     	;# 
  2454  029C                     	;# 
  2455  029C                     	;# 
  2456  029D                     	;# 
  2457  030C                     	;# 
  2458  030C                     	;# 
  2459  030D                     	;# 
  2460  030E                     	;# 
  2461  030F                     	;# 
  2462  0310                     	;# 
  2463  0310                     	;# 
  2464  0311                     	;# 
  2465  0312                     	;# 
  2466  0313                     	;# 
  2467  0314                     	;# 
  2468  0314                     	;# 
  2469  0315                     	;# 
  2470  0316                     	;# 
  2471  0317                     	;# 
  2472  0318                     	;# 
  2473  0318                     	;# 
  2474  0319                     	;# 
  2475  031A                     	;# 
  2476  031B                     	;# 
  2477  031C                     	;# 
  2478  031C                     	;# 
  2479  031D                     	;# 
  2480  031E                     	;# 
  2481  031F                     	;# 
  2482  038C                     	;# 
  2483  038C                     	;# 
  2484  038D                     	;# 
  2485  038E                     	;# 
  2486  0390                     	;# 
  2487  0390                     	;# 
  2488  0391                     	;# 
  2489  0392                     	;# 
  2490  040C                     	;# 
  2491  040D                     	;# 
  2492  040E                     	;# 
  2493  040F                     	;# 
  2494  0410                     	;# 
  2495  0411                     	;# 
  2496  0416                     	;# 
  2497  0416                     	;# 
  2498  0417                     	;# 
  2499  0418                     	;# 
  2500  0418                     	;# 
  2501  0419                     	;# 
  2502  041A                     	;# 
  2503  041A                     	;# 
  2504  041B                     	;# 
  2505  041C                     	;# 
  2506  041C                     	;# 
  2507  041D                     	;# 
  2508  041E                     	;# 
  2509  041F                     	;# 
  2510  048C                     	;# 
  2511  048C                     	;# 
  2512  048D                     	;# 
  2513  048E                     	;# 
  2514  048F                     	;# 
  2515  048F                     	;# 
  2516  0490                     	;# 
  2517  0491                     	;# 
  2518  0492                     	;# 
  2519  0492                     	;# 
  2520  0493                     	;# 
  2521  0494                     	;# 
  2522  0495                     	;# 
  2523  0495                     	;# 
  2524  0496                     	;# 
  2525  0497                     	;# 
  2526  0498                     	;# 
  2527  0499                     	;# 
  2528  049A                     	;# 
  2529  049B                     	;# 
  2530  049C                     	;# 
  2531  049D                     	;# 
  2532  050C                     	;# 
  2533  050C                     	;# 
  2534  050D                     	;# 
  2535  050E                     	;# 
  2536  050F                     	;# 
  2537  050F                     	;# 
  2538  0510                     	;# 
  2539  0511                     	;# 
  2540  0512                     	;# 
  2541  0512                     	;# 
  2542  0513                     	;# 
  2543  0514                     	;# 
  2544  0515                     	;# 
  2545  0515                     	;# 
  2546  0516                     	;# 
  2547  0517                     	;# 
  2548  0518                     	;# 
  2549  0519                     	;# 
  2550  051A                     	;# 
  2551  051B                     	;# 
  2552  051C                     	;# 
  2553  051D                     	;# 
  2554  058C                     	;# 
  2555  058C                     	;# 
  2556  058D                     	;# 
  2557  058E                     	;# 
  2558  058F                     	;# 
  2559  058F                     	;# 
  2560  0590                     	;# 
  2561  0591                     	;# 
  2562  0592                     	;# 
  2563  0593                     	;# 
  2564  060C                     	;# 
  2565  060D                     	;# 
  2566  060E                     	;# 
  2567  060F                     	;# 
  2568  0610                     	;# 
  2569  0611                     	;# 
  2570  0612                     	;# 
  2571  0613                     	;# 
  2572  0614                     	;# 
  2573  0616                     	;# 
  2574  0617                     	;# 
  2575  0618                     	;# 
  2576  0619                     	;# 
  2577  061A                     	;# 
  2578  061B                     	;# 
  2579  061C                     	;# 
  2580  061D                     	;# 
  2581  061E                     	;# 
  2582  068C                     	;# 
  2583  068D                     	;# 
  2584  068E                     	;# 
  2585  068F                     	;# 
  2586  0690                     	;# 
  2587  0691                     	;# 
  2588  0692                     	;# 
  2589  0693                     	;# 
  2590  0694                     	;# 
  2591  070C                     	;# 
  2592  070D                     	;# 
  2593  070E                     	;# 
  2594  070F                     	;# 
  2595  0710                     	;# 
  2596  0711                     	;# 
  2597  0712                     	;# 
  2598  0713                     	;# 
  2599  0714                     	;# 
  2600  0716                     	;# 
  2601  0717                     	;# 
  2602  0718                     	;# 
  2603  0719                     	;# 
  2604  071A                     	;# 
  2605  071B                     	;# 
  2606  071C                     	;# 
  2607  071D                     	;# 
  2608  071E                     	;# 
  2609  0796                     	;# 
  2610  0797                     	;# 
  2611  0798                     	;# 
  2612  0799                     	;# 
  2613  079A                     	;# 
  2614  079B                     	;# 
  2615  080C                     	;# 
  2616  080D                     	;# 
  2617  080E                     	;# 
  2618  080F                     	;# 
  2619  0810                     	;# 
  2620  0811                     	;# 
  2621  0812                     	;# 
  2622  0813                     	;# 
  2623  0814                     	;# 
  2624  081A                     	;# 
  2625  081B                     	;# 
  2626  081C                     	;# 
  2627  081D                     	;# 
  2628  081E                     	;# 
  2629  081F                     	;# 
  2630  088C                     	;# 
  2631  088D                     	;# 
  2632  088E                     	;# 
  2633  088F                     	;# 
  2634  0890                     	;# 
  2635  0891                     	;# 
  2636  0892                     	;# 
  2637  0893                     	;# 
  2638  0895                     	;# 
  2639  0896                     	;# 
  2640  0897                     	;# 
  2641  0898                     	;# 
  2642  0899                     	;# 
  2643  089A                     	;# 
  2644  089B                     	;# 
  2645  090C                     	;# 
  2646  090E                     	;# 
  2647  090F                     	;# 
  2648  091F                     	;# 
  2649  091F                     	;# 
  2650  098F                     	;# 
  2651  098F                     	;# 
  2652  0990                     	;# 
  2653  0991                     	;# 
  2654  0992                     	;# 
  2655  0993                     	;# 
  2656  0994                     	;# 
  2657  0995                     	;# 
  2658  0996                     	;# 
  2659  0997                     	;# 
  2660  0E0F                     	;# 
  2661  0E10                     	;# 
  2662  0E11                     	;# 
  2663  0E12                     	;# 
  2664  0E13                     	;# 
  2665  0E14                     	;# 
  2666  0E15                     	;# 
  2667  0E16                     	;# 
  2668  0E17                     	;# 
  2669  0E18                     	;# 
  2670  0E19                     	;# 
  2671  0E1A                     	;# 
  2672  0E1B                     	;# 
  2673  0E1C                     	;# 
  2674  0E1D                     	;# 
  2675  0E1E                     	;# 
  2676  0E1F                     	;# 
  2677  0E20                     	;# 
  2678  0E21                     	;# 
  2679  0E22                     	;# 
  2680  0E23                     	;# 
  2681  0E24                     	;# 
  2682  0E25                     	;# 
  2683  0E26                     	;# 
  2684  0E27                     	;# 
  2685  0E28                     	;# 
  2686  0E29                     	;# 
  2687  0E2A                     	;# 
  2688  0E2B                     	;# 
  2689  0E2C                     	;# 
  2690  0E2D                     	;# 
  2691  0E2E                     	;# 
  2692  0E2F                     	;# 
  2693  0E30                     	;# 
  2694  0E31                     	;# 
  2695  0E32                     	;# 
  2696  0E33                     	;# 
  2697  0E34                     	;# 
  2698  0E35                     	;# 
  2699  0E36                     	;# 
  2700  0E37                     	;# 
  2701  0E8F                     	;# 
  2702  0E90                     	;# 
  2703  0E91                     	;# 
  2704  0E92                     	;# 
  2705  0E93                     	;# 
  2706  0E94                     	;# 
  2707  0E95                     	;# 
  2708  0E96                     	;# 
  2709  0E97                     	;# 
  2710  0E9C                     	;# 
  2711  0E9D                     	;# 
  2712  0E9E                     	;# 
  2713  0EA1                     	;# 
  2714  0EA2                     	;# 
  2715  0EA3                     	;# 
  2716  0EA4                     	;# 
  2717  0EA5                     	;# 
  2718  0EA9                     	;# 
  2719  0EAA                     	;# 
  2720  0EAB                     	;# 
  2721  0EAC                     	;# 
  2722  0EB1                     	;# 
  2723  0EB2                     	;# 
  2724  0EB3                     	;# 
  2725  0EB8                     	;# 
  2726  0EB9                     	;# 
  2727  0EBA                     	;# 
  2728  0EBB                     	;# 
  2729  0EBC                     	;# 
  2730  0EBD                     	;# 
  2731  0EBE                     	;# 
  2732  0EC3                     	;# 
  2733  0EC5                     	;# 
  2734  0EC6                     	;# 
  2735  0EC7                     	;# 
  2736  0EC8                     	;# 
  2737  0EC9                     	;# 
  2738  0ECA                     	;# 
  2739  0ECB                     	;# 
  2740  0ECC                     	;# 
  2741  0F10                     	;# 
  2742  0F11                     	;# 
  2743  0F12                     	;# 
  2744  0F13                     	;# 
  2745  0F14                     	;# 
  2746  0F15                     	;# 
  2747  0F16                     	;# 
  2748  0F17                     	;# 
  2749  0F18                     	;# 
  2750  0F19                     	;# 
  2751  0F1A                     	;# 
  2752  0F1B                     	;# 
  2753  0F1C                     	;# 
  2754  0F1D                     	;# 
  2755  0F1E                     	;# 
  2756  0F1F                     	;# 
  2757  0F20                     	;# 
  2758  0F21                     	;# 
  2759  0F22                     	;# 
  2760  0F23                     	;# 
  2761  0F24                     	;# 
  2762  0F25                     	;# 
  2763  0F26                     	;# 
  2764  0F27                     	;# 
  2765  0F28                     	;# 
  2766  0F29                     	;# 
  2767  0F2A                     	;# 
  2768  0F2B                     	;# 
  2769  0F2C                     	;# 
  2770  0F2D                     	;# 
  2771  0F2E                     	;# 
  2772  0F2F                     	;# 
  2773  0F30                     	;# 
  2774  0F31                     	;# 
  2775  0F32                     	;# 
  2776  0F38                     	;# 
  2777  0F39                     	;# 
  2778  0F3A                     	;# 
  2779  0F3B                     	;# 
  2780  0F3C                     	;# 
  2781  0F3D                     	;# 
  2782  0F3E                     	;# 
  2783  0F3F                     	;# 
  2784  0F40                     	;# 
  2785  0F41                     	;# 
  2786  0F43                     	;# 
  2787  0F44                     	;# 
  2788  0F45                     	;# 
  2789  0F46                     	;# 
  2790  0F47                     	;# 
  2791  0F48                     	;# 
  2792  0F49                     	;# 
  2793  0F4A                     	;# 
  2794  0F4B                     	;# 
  2795  0F4C                     	;# 
  2796  0F4E                     	;# 
  2797  0F4F                     	;# 
  2798  0F50                     	;# 
  2799  0F51                     	;# 
  2800  0F52                     	;# 
  2801  0F53                     	;# 
  2802  0F54                     	;# 
  2803  0F55                     	;# 
  2804  0F56                     	;# 
  2805  0F57                     	;# 
  2806  0F59                     	;# 
  2807  0F5A                     	;# 
  2808  0F5B                     	;# 
  2809  0F5C                     	;# 
  2810  0F5D                     	;# 
  2811  0F61                     	;# 
  2812  0F62                     	;# 
  2813  0F64                     	;# 
  2814  0F65                     	;# 
  2815  0F66                     	;# 
  2816  0F67                     	;# 
  2817  0F68                     	;# 
  2818  0F69                     	;# 
  2819  0F6A                     	;# 
  2820  0F6B                     	;# 
  2821  0F6C                     	;# 
  2822  0F6D                     	;# 
  2823  0FE4                     	;# 
  2824  0FE5                     	;# 
  2825  0FE6                     	;# 
  2826  0FE7                     	;# 
  2827  0FE8                     	;# 
  2828  0FE9                     	;# 
  2829  0FEA                     	;# 
  2830  0FEB                     	;# 
  2831  0FED                     	;# 
  2832  0FEE                     	;# 
  2833  0FEF                     	;# 
  2834  0000                     	;# 
  2835  0001                     	;# 
  2836  0002                     	;# 
  2837  0003                     	;# 
  2838  0004                     	;# 
  2839  0005                     	;# 
  2840  0006                     	;# 
  2841  0007                     	;# 
  2842  0008                     	;# 
  2843  0009                     	;# 
  2844  000A                     	;# 
  2845  000B                     	;# 
  2846  000C                     	;# 
  2847  000D                     	;# 
  2848  000E                     	;# 
  2849  000F                     	;# 
  2850  0010                     	;# 
  2851  0011                     	;# 
  2852  0012                     	;# 
  2853  0013                     	;# 
  2854  0014                     	;# 
  2855  0015                     	;# 
  2856  0016                     	;# 
  2857  0017                     	;# 
  2858  0018                     	;# 
  2859  0019                     	;# 
  2860  001A                     	;# 
  2861  001C                     	;# 
  2862  001C                     	;# 
  2863  001D                     	;# 
  2864  001D                     	;# 
  2865  001E                     	;# 
  2866  001F                     	;# 
  2867  008C                     	;# 
  2868  008C                     	;# 
  2869  008D                     	;# 
  2870  008E                     	;# 
  2871  008E                     	;# 
  2872  008F                     	;# 
  2873  0090                     	;# 
  2874  0090                     	;# 
  2875  0091                     	;# 
  2876  0093                     	;# 
  2877  0094                     	;# 
  2878  0095                     	;# 
  2879  0096                     	;# 
  2880  0097                     	;# 
  2881  0098                     	;# 
  2882  0099                     	;# 
  2883  009A                     	;# 
  2884  009B                     	;# 
  2885  009C                     	;# 
  2886  009D                     	;# 
  2887  009E                     	;# 
  2888  010C                     	;# 
  2889  010D                     	;# 
  2890  010E                     	;# 
  2891  010E                     	;# 
  2892  010F                     	;# 
  2893  0110                     	;# 
  2894  0110                     	;# 
  2895  0111                     	;# 
  2896  0112                     	;# 
  2897  0112                     	;# 
  2898  0113                     	;# 
  2899  0114                     	;# 
  2900  0114                     	;# 
  2901  0115                     	;# 
  2902  0116                     	;# 
  2903  0116                     	;# 
  2904  0117                     	;# 
  2905  0119                     	;# 
  2906  0119                     	;# 
  2907  0119                     	;# 
  2908  011A                     	;# 
  2909  011A                     	;# 
  2910  011A                     	;# 
  2911  011B                     	;# 
  2912  011B                     	;# 
  2913  011B                     	;# 
  2914  011B                     	;# 
  2915  011B                     	;# 
  2916  011C                     	;# 
  2917  011C                     	;# 
  2918  011C                     	;# 
  2919  011D                     	;# 
  2920  011D                     	;# 
  2921  011D                     	;# 
  2922  011E                     	;# 
  2923  011E                     	;# 
  2924  011E                     	;# 
  2925  011F                     	;# 
  2926  011F                     	;# 
  2927  011F                     	;# 
  2928  011F                     	;# 
  2929  011F                     	;# 
  2930  018C                     	;# 
  2931  018D                     	;# 
  2932  018E                     	;# 
  2933  018F                     	;# 
  2934  0190                     	;# 
  2935  0191                     	;# 
  2936  0192                     	;# 
  2937  0196                     	;# 
  2938  0197                     	;# 
  2939  0198                     	;# 
  2940  0199                     	;# 
  2941  019A                     	;# 
  2942  019B                     	;# 
  2943  019C                     	;# 
  2944  020C                     	;# 
  2945  020C                     	;# 
  2946  020D                     	;# 
  2947  020E                     	;# 
  2948  020F                     	;# 
  2949  020F                     	;# 
  2950  0210                     	;# 
  2951  0210                     	;# 
  2952  0211                     	;# 
  2953  0211                     	;# 
  2954  0212                     	;# 
  2955  0212                     	;# 
  2956  0213                     	;# 
  2957  0214                     	;# 
  2958  0215                     	;# 
  2959  0215                     	;# 
  2960  0216                     	;# 
  2961  0216                     	;# 
  2962  0217                     	;# 
  2963  0217                     	;# 
  2964  0218                     	;# 
  2965  0218                     	;# 
  2966  0219                     	;# 
  2967  021A                     	;# 
  2968  021B                     	;# 
  2969  021B                     	;# 
  2970  021C                     	;# 
  2971  021C                     	;# 
  2972  021D                     	;# 
  2973  021D                     	;# 
  2974  021E                     	;# 
  2975  021F                     	;# 
  2976  028C                     	;# 
  2977  028C                     	;# 
  2978  028D                     	;# 
  2979  028D                     	;# 
  2980  028E                     	;# 
  2981  028F                     	;# 
  2982  0290                     	;# 
  2983  0290                     	;# 
  2984  0291                     	;# 
  2985  0292                     	;# 
  2986  0292                     	;# 
  2987  0293                     	;# 
  2988  0293                     	;# 
  2989  0294                     	;# 
  2990  0295                     	;# 
  2991  0296                     	;# 
  2992  0296                     	;# 
  2993  0297                     	;# 
  2994  0298                     	;# 
  2995  0298                     	;# 
  2996  0299                     	;# 
  2997  0299                     	;# 
  2998  029A                     	;# 
  2999  029B                     	;# 
  3000  029C                     	;# 
  3001  029C                     	;# 
  3002  029D                     	;# 
  3003  030C                     	;# 
  3004  030C                     	;# 
  3005  030D                     	;# 
  3006  030E                     	;# 
  3007  030F                     	;# 
  3008  0310                     	;# 
  3009  0310                     	;# 
  3010  0311                     	;# 
  3011  0312                     	;# 
  3012  0313                     	;# 
  3013  0314                     	;# 
  3014  0314                     	;# 
  3015  0315                     	;# 
  3016  0316                     	;# 
  3017  0317                     	;# 
  3018  0318                     	;# 
  3019  0318                     	;# 
  3020  0319                     	;# 
  3021  031A                     	;# 
  3022  031B                     	;# 
  3023  031C                     	;# 
  3024  031C                     	;# 
  3025  031D                     	;# 
  3026  031E                     	;# 
  3027  031F                     	;# 
  3028  038C                     	;# 
  3029  038C                     	;# 
  3030  038D                     	;# 
  3031  038E                     	;# 
  3032  0390                     	;# 
  3033  0390                     	;# 
  3034  0391                     	;# 
  3035  0392                     	;# 
  3036  040C                     	;# 
  3037  040D                     	;# 
  3038  040E                     	;# 
  3039  040F                     	;# 
  3040  0410                     	;# 
  3041  0411                     	;# 
  3042  0416                     	;# 
  3043  0416                     	;# 
  3044  0417                     	;# 
  3045  0418                     	;# 
  3046  0418                     	;# 
  3047  0419                     	;# 
  3048  041A                     	;# 
  3049  041A                     	;# 
  3050  041B                     	;# 
  3051  041C                     	;# 
  3052  041C                     	;# 
  3053  041D                     	;# 
  3054  041E                     	;# 
  3055  041F                     	;# 
  3056  048C                     	;# 
  3057  048C                     	;# 
  3058  048D                     	;# 
  3059  048E                     	;# 
  3060  048F                     	;# 
  3061  048F                     	;# 
  3062  0490                     	;# 
  3063  0491                     	;# 
  3064  0492                     	;# 
  3065  0492                     	;# 
  3066  0493                     	;# 
  3067  0494                     	;# 
  3068  0495                     	;# 
  3069  0495                     	;# 
  3070  0496                     	;# 
  3071  0497                     	;# 
  3072  0498                     	;# 
  3073  0499                     	;# 
  3074  049A                     	;# 
  3075  049B                     	;# 
  3076  049C                     	;# 
  3077  049D                     	;# 
  3078  050C                     	;# 
  3079  050C                     	;# 
  3080  050D                     	;# 
  3081  050E                     	;# 
  3082  050F                     	;# 
  3083  050F                     	;# 
  3084  0510                     	;# 
  3085  0511                     	;# 
  3086  0512                     	;# 
  3087  0512                     	;# 
  3088  0513                     	;# 
  3089  0514                     	;# 
  3090  0515                     	;# 
  3091  0515                     	;# 
  3092  0516                     	;# 
  3093  0517                     	;# 
  3094  0518                     	;# 
  3095  0519                     	;# 
  3096  051A                     	;# 
  3097  051B                     	;# 
  3098  051C                     	;# 
  3099  051D                     	;# 
  3100  058C                     	;# 
  3101  058C                     	;# 
  3102  058D                     	;# 
  3103  058E                     	;# 
  3104  058F                     	;# 
  3105  058F                     	;# 
  3106  0590                     	;# 
  3107  0591                     	;# 
  3108  0592                     	;# 
  3109  0593                     	;# 
  3110  060C                     	;# 
  3111  060D                     	;# 
  3112  060E                     	;# 
  3113  060F                     	;# 
  3114  0610                     	;# 
  3115  0611                     	;# 
  3116  0612                     	;# 
  3117  0613                     	;# 
  3118  0614                     	;# 
  3119  0616                     	;# 
  3120  0617                     	;# 
  3121  0618                     	;# 
  3122  0619                     	;# 
  3123  061A                     	;# 
  3124  061B                     	;# 
  3125  061C                     	;# 
  3126  061D                     	;# 
  3127  061E                     	;# 
  3128  068C                     	;# 
  3129  068D                     	;# 
  3130  068E                     	;# 
  3131  068F                     	;# 
  3132  0690                     	;# 
  3133  0691                     	;# 
  3134  0692                     	;# 
  3135  0693                     	;# 
  3136  0694                     	;# 
  3137  070C                     	;# 
  3138  070D                     	;# 
  3139  070E                     	;# 
  3140  070F                     	;# 
  3141  0710                     	;# 
  3142  0711                     	;# 
  3143  0712                     	;# 
  3144  0713                     	;# 
  3145  0714                     	;# 
  3146  0716                     	;# 
  3147  0717                     	;# 
  3148  0718                     	;# 
  3149  0719                     	;# 
  3150  071A                     	;# 
  3151  071B                     	;# 
  3152  071C                     	;# 
  3153  071D                     	;# 
  3154  071E                     	;# 
  3155  0796                     	;# 
  3156  0797                     	;# 
  3157  0798                     	;# 
  3158  0799                     	;# 
  3159  079A                     	;# 
  3160  079B                     	;# 
  3161  080C                     	;# 
  3162  080D                     	;# 
  3163  080E                     	;# 
  3164  080F                     	;# 
  3165  0810                     	;# 
  3166  0811                     	;# 
  3167  0812                     	;# 
  3168  0813                     	;# 
  3169  0814                     	;# 
  3170  081A                     	;# 
  3171  081B                     	;# 
  3172  081C                     	;# 
  3173  081D                     	;# 
  3174  081E                     	;# 
  3175  081F                     	;# 
  3176  088C                     	;# 
  3177  088D                     	;# 
  3178  088E                     	;# 
  3179  088F                     	;# 
  3180  0890                     	;# 
  3181  0891                     	;# 
  3182  0892                     	;# 
  3183  0893                     	;# 
  3184  0895                     	;# 
  3185  0896                     	;# 
  3186  0897                     	;# 
  3187  0898                     	;# 
  3188  0899                     	;# 
  3189  089A                     	;# 
  3190  089B                     	;# 
  3191  090C                     	;# 
  3192  090E                     	;# 
  3193  090F                     	;# 
  3194  091F                     	;# 
  3195  091F                     	;# 
  3196  098F                     	;# 
  3197  098F                     	;# 
  3198  0990                     	;# 
  3199  0991                     	;# 
  3200  0992                     	;# 
  3201  0993                     	;# 
  3202  0994                     	;# 
  3203  0995                     	;# 
  3204  0996                     	;# 
  3205  0997                     	;# 
  3206  0E0F                     	;# 
  3207  0E10                     	;# 
  3208  0E11                     	;# 
  3209  0E12                     	;# 
  3210  0E13                     	;# 
  3211  0E14                     	;# 
  3212  0E15                     	;# 
  3213  0E16                     	;# 
  3214  0E17                     	;# 
  3215  0E18                     	;# 
  3216  0E19                     	;# 
  3217  0E1A                     	;# 
  3218  0E1B                     	;# 
  3219  0E1C                     	;# 
  3220  0E1D                     	;# 
  3221  0E1E                     	;# 
  3222  0E1F                     	;# 
  3223  0E20                     	;# 
  3224  0E21                     	;# 
  3225  0E22                     	;# 
  3226  0E23                     	;# 
  3227  0E24                     	;# 
  3228  0E25                     	;# 
  3229  0E26                     	;# 
  3230  0E27                     	;# 
  3231  0E28                     	;# 
  3232  0E29                     	;# 
  3233  0E2A                     	;# 
  3234  0E2B                     	;# 
  3235  0E2C                     	;# 
  3236  0E2D                     	;# 
  3237  0E2E                     	;# 
  3238  0E2F                     	;# 
  3239  0E30                     	;# 
  3240  0E31                     	;# 
  3241  0E32                     	;# 
  3242  0E33                     	;# 
  3243  0E34                     	;# 
  3244  0E35                     	;# 
  3245  0E36                     	;# 
  3246  0E37                     	;# 
  3247  0E8F                     	;# 
  3248  0E90                     	;# 
  3249  0E91                     	;# 
  3250  0E92                     	;# 
  3251  0E93                     	;# 
  3252  0E94                     	;# 
  3253  0E95                     	;# 
  3254  0E96                     	;# 
  3255  0E97                     	;# 
  3256  0E9C                     	;# 
  3257  0E9D                     	;# 
  3258  0E9E                     	;# 
  3259  0EA1                     	;# 
  3260  0EA2                     	;# 
  3261  0EA3                     	;# 
  3262  0EA4                     	;# 
  3263  0EA5                     	;# 
  3264  0EA9                     	;# 
  3265  0EAA                     	;# 
  3266  0EAB                     	;# 
  3267  0EAC                     	;# 
  3268  0EB1                     	;# 
  3269  0EB2                     	;# 
  3270  0EB3                     	;# 
  3271  0EB8                     	;# 
  3272  0EB9                     	;# 
  3273  0EBA                     	;# 
  3274  0EBB                     	;# 
  3275  0EBC                     	;# 
  3276  0EBD                     	;# 
  3277  0EBE                     	;# 
  3278  0EC3                     	;# 
  3279  0EC5                     	;# 
  3280  0EC6                     	;# 
  3281  0EC7                     	;# 
  3282  0EC8                     	;# 
  3283  0EC9                     	;# 
  3284  0ECA                     	;# 
  3285  0ECB                     	;# 
  3286  0ECC                     	;# 
  3287  0F10                     	;# 
  3288  0F11                     	;# 
  3289  0F12                     	;# 
  3290  0F13                     	;# 
  3291  0F14                     	;# 
  3292  0F15                     	;# 
  3293  0F16                     	;# 
  3294  0F17                     	;# 
  3295  0F18                     	;# 
  3296  0F19                     	;# 
  3297  0F1A                     	;# 
  3298  0F1B                     	;# 
  3299  0F1C                     	;# 
  3300  0F1D                     	;# 
  3301  0F1E                     	;# 
  3302  0F1F                     	;# 
  3303  0F20                     	;# 
  3304  0F21                     	;# 
  3305  0F22                     	;# 
  3306  0F23                     	;# 
  3307  0F24                     	;# 
  3308  0F25                     	;# 
  3309  0F26                     	;# 
  3310  0F27                     	;# 
  3311  0F28                     	;# 
  3312  0F29                     	;# 
  3313  0F2A                     	;# 
  3314  0F2B                     	;# 
  3315  0F2C                     	;# 
  3316  0F2D                     	;# 
  3317  0F2E                     	;# 
  3318  0F2F                     	;# 
  3319  0F30                     	;# 
  3320  0F31                     	;# 
  3321  0F32                     	;# 
  3322  0F38                     	;# 
  3323  0F39                     	;# 
  3324  0F3A                     	;# 
  3325  0F3B                     	;# 
  3326  0F3C                     	;# 
  3327  0F3D                     	;# 
  3328  0F3E                     	;# 
  3329  0F3F                     	;# 
  3330  0F40                     	;# 
  3331  0F41                     	;# 
  3332  0F43                     	;# 
  3333  0F44                     	;# 
  3334  0F45                     	;# 
  3335  0F46                     	;# 
  3336  0F47                     	;# 
  3337  0F48                     	;# 
  3338  0F49                     	;# 
  3339  0F4A                     	;# 
  3340  0F4B                     	;# 
  3341  0F4C                     	;# 
  3342  0F4E                     	;# 
  3343  0F4F                     	;# 
  3344  0F50                     	;# 
  3345  0F51                     	;# 
  3346  0F52                     	;# 
  3347  0F53                     	;# 
  3348  0F54                     	;# 
  3349  0F55                     	;# 
  3350  0F56                     	;# 
  3351  0F57                     	;# 
  3352  0F59                     	;# 
  3353  0F5A                     	;# 
  3354  0F5B                     	;# 
  3355  0F5C                     	;# 
  3356  0F5D                     	;# 
  3357  0F61                     	;# 
  3358  0F62                     	;# 
  3359  0F64                     	;# 
  3360  0F65                     	;# 
  3361  0F66                     	;# 
  3362  0F67                     	;# 
  3363  0F68                     	;# 
  3364  0F69                     	;# 
  3365  0F6A                     	;# 
  3366  0F6B                     	;# 
  3367  0F6C                     	;# 
  3368  0F6D                     	;# 
  3369  0FE4                     	;# 
  3370  0FE5                     	;# 
  3371  0FE6                     	;# 
  3372  0FE7                     	;# 
  3373  0FE8                     	;# 
  3374  0FE9                     	;# 
  3375  0FEA                     	;# 
  3376  0FEB                     	;# 
  3377  0FED                     	;# 
  3378  0FEE                     	;# 
  3379  0FEF                     	;# 
  3380  0000                     	;# 
  3381  0001                     	;# 
  3382  0002                     	;# 
  3383  0003                     	;# 
  3384  0004                     	;# 
  3385  0005                     	;# 
  3386  0006                     	;# 
  3387  0007                     	;# 
  3388  0008                     	;# 
  3389  0009                     	;# 
  3390  000A                     	;# 
  3391  000B                     	;# 
  3392  000C                     	;# 
  3393  000D                     	;# 
  3394  000E                     	;# 
  3395  000F                     	;# 
  3396  0010                     	;# 
  3397  0011                     	;# 
  3398  0012                     	;# 
  3399  0013                     	;# 
  3400  0014                     	;# 
  3401  0015                     	;# 
  3402  0016                     	;# 
  3403  0017                     	;# 
  3404  0018                     	;# 
  3405  0019                     	;# 
  3406  001A                     	;# 
  3407  001C                     	;# 
  3408  001C                     	;# 
  3409  001D                     	;# 
  3410  001D                     	;# 
  3411  001E                     	;# 
  3412  001F                     	;# 
  3413  008C                     	;# 
  3414  008C                     	;# 
  3415  008D                     	;# 
  3416  008E                     	;# 
  3417  008E                     	;# 
  3418  008F                     	;# 
  3419  0090                     	;# 
  3420  0090                     	;# 
  3421  0091                     	;# 
  3422  0093                     	;# 
  3423  0094                     	;# 
  3424  0095                     	;# 
  3425  0096                     	;# 
  3426  0097                     	;# 
  3427  0098                     	;# 
  3428  0099                     	;# 
  3429  009A                     	;# 
  3430  009B                     	;# 
  3431  009C                     	;# 
  3432  009D                     	;# 
  3433  009E                     	;# 
  3434  010C                     	;# 
  3435  010D                     	;# 
  3436  010E                     	;# 
  3437  010E                     	;# 
  3438  010F                     	;# 
  3439  0110                     	;# 
  3440  0110                     	;# 
  3441  0111                     	;# 
  3442  0112                     	;# 
  3443  0112                     	;# 
  3444  0113                     	;# 
  3445  0114                     	;# 
  3446  0114                     	;# 
  3447  0115                     	;# 
  3448  0116                     	;# 
  3449  0116                     	;# 
  3450  0117                     	;# 
  3451  0119                     	;# 
  3452  0119                     	;# 
  3453  0119                     	;# 
  3454  011A                     	;# 
  3455  011A                     	;# 
  3456  011A                     	;# 
  3457  011B                     	;# 
  3458  011B                     	;# 
  3459  011B                     	;# 
  3460  011B                     	;# 
  3461  011B                     	;# 
  3462  011C                     	;# 
  3463  011C                     	;# 
  3464  011C                     	;# 
  3465  011D                     	;# 
  3466  011D                     	;# 
  3467  011D                     	;# 
  3468  011E                     	;# 
  3469  011E                     	;# 
  3470  011E                     	;# 
  3471  011F                     	;# 
  3472  011F                     	;# 
  3473  011F                     	;# 
  3474  011F                     	;# 
  3475  011F                     	;# 
  3476  018C                     	;# 
  3477  018D                     	;# 
  3478  018E                     	;# 
  3479  018F                     	;# 
  3480  0190                     	;# 
  3481  0191                     	;# 
  3482  0192                     	;# 
  3483  0196                     	;# 
  3484  0197                     	;# 
  3485  0198                     	;# 
  3486  0199                     	;# 
  3487  019A                     	;# 
  3488  019B                     	;# 
  3489  019C                     	;# 
  3490  020C                     	;# 
  3491  020C                     	;# 
  3492  020D                     	;# 
  3493  020E                     	;# 
  3494  020F                     	;# 
  3495  020F                     	;# 
  3496  0210                     	;# 
  3497  0210                     	;# 
  3498  0211                     	;# 
  3499  0211                     	;# 
  3500  0212                     	;# 
  3501  0212                     	;# 
  3502  0213                     	;# 
  3503  0214                     	;# 
  3504  0215                     	;# 
  3505  0215                     	;# 
  3506  0216                     	;# 
  3507  0216                     	;# 
  3508  0217                     	;# 
  3509  0217                     	;# 
  3510  0218                     	;# 
  3511  0218                     	;# 
  3512  0219                     	;# 
  3513  021A                     	;# 
  3514  021B                     	;# 
  3515  021B                     	;# 
  3516  021C                     	;# 
  3517  021C                     	;# 
  3518  021D                     	;# 
  3519  021D                     	;# 
  3520  021E                     	;# 
  3521  021F                     	;# 
  3522  028C                     	;# 
  3523  028C                     	;# 
  3524  028D                     	;# 
  3525  028D                     	;# 
  3526  028E                     	;# 
  3527  028F                     	;# 
  3528  0290                     	;# 
  3529  0290                     	;# 
  3530  0291                     	;# 
  3531  0292                     	;# 
  3532  0292                     	;# 
  3533  0293                     	;# 
  3534  0293                     	;# 
  3535  0294                     	;# 
  3536  0295                     	;# 
  3537  0296                     	;# 
  3538  0296                     	;# 
  3539  0297                     	;# 
  3540  0298                     	;# 
  3541  0298                     	;# 
  3542  0299                     	;# 
  3543  0299                     	;# 
  3544  029A                     	;# 
  3545  029B                     	;# 
  3546  029C                     	;# 
  3547  029C                     	;# 
  3548  029D                     	;# 
  3549  030C                     	;# 
  3550  030C                     	;# 
  3551  030D                     	;# 
  3552  030E                     	;# 
  3553  030F                     	;# 
  3554  0310                     	;# 
  3555  0310                     	;# 
  3556  0311                     	;# 
  3557  0312                     	;# 
  3558  0313                     	;# 
  3559  0314                     	;# 
  3560  0314                     	;# 
  3561  0315                     	;# 
  3562  0316                     	;# 
  3563  0317                     	;# 
  3564  0318                     	;# 
  3565  0318                     	;# 
  3566  0319                     	;# 
  3567  031A                     	;# 
  3568  031B                     	;# 
  3569  031C                     	;# 
  3570  031C                     	;# 
  3571  031D                     	;# 
  3572  031E                     	;# 
  3573  031F                     	;# 
  3574  038C                     	;# 
  3575  038C                     	;# 
  3576  038D                     	;# 
  3577  038E                     	;# 
  3578  0390                     	;# 
  3579  0390                     	;# 
  3580  0391                     	;# 
  3581  0392                     	;# 
  3582  040C                     	;# 
  3583  040D                     	;# 
  3584  040E                     	;# 
  3585  040F                     	;# 
  3586  0410                     	;# 
  3587  0411                     	;# 
  3588  0416                     	;# 
  3589  0416                     	;# 
  3590  0417                     	;# 
  3591  0418                     	;# 
  3592  0418                     	;# 
  3593  0419                     	;# 
  3594  041A                     	;# 
  3595  041A                     	;# 
  3596  041B                     	;# 
  3597  041C                     	;# 
  3598  041C                     	;# 
  3599  041D                     	;# 
  3600  041E                     	;# 
  3601  041F                     	;# 
  3602  048C                     	;# 
  3603  048C                     	;# 
  3604  048D                     	;# 
  3605  048E                     	;# 
  3606  048F                     	;# 
  3607  048F                     	;# 
  3608  0490                     	;# 
  3609  0491                     	;# 
  3610  0492                     	;# 
  3611  0492                     	;# 
  3612  0493                     	;# 
  3613  0494                     	;# 
  3614  0495                     	;# 
  3615  0495                     	;# 
  3616  0496                     	;# 
  3617  0497                     	;# 
  3618  0498                     	;# 
  3619  0499                     	;# 
  3620  049A                     	;# 
  3621  049B                     	;# 
  3622  049C                     	;# 
  3623  049D                     	;# 
  3624  050C                     	;# 
  3625  050C                     	;# 
  3626  050D                     	;# 
  3627  050E                     	;# 
  3628  050F                     	;# 
  3629  050F                     	;# 
  3630  0510                     	;# 
  3631  0511                     	;# 
  3632  0512                     	;# 
  3633  0512                     	;# 
  3634  0513                     	;# 
  3635  0514                     	;# 
  3636  0515                     	;# 
  3637  0515                     	;# 
  3638  0516                     	;# 
  3639  0517                     	;# 
  3640  0518                     	;# 
  3641  0519                     	;# 
  3642  051A                     	;# 
  3643  051B                     	;# 
  3644  051C                     	;# 
  3645  051D                     	;# 
  3646  058C                     	;# 
  3647  058C                     	;# 
  3648  058D                     	;# 
  3649  058E                     	;# 
  3650  058F                     	;# 
  3651  058F                     	;# 
  3652  0590                     	;# 
  3653  0591                     	;# 
  3654  0592                     	;# 
  3655  0593                     	;# 
  3656  060C                     	;# 
  3657  060D                     	;# 
  3658  060E                     	;# 
  3659  060F                     	;# 
  3660  0610                     	;# 
  3661  0611                     	;# 
  3662  0612                     	;# 
  3663  0613                     	;# 
  3664  0614                     	;# 
  3665  0616                     	;# 
  3666  0617                     	;# 
  3667  0618                     	;# 
  3668  0619                     	;# 
  3669  061A                     	;# 
  3670  061B                     	;# 
  3671  061C                     	;# 
  3672  061D                     	;# 
  3673  061E                     	;# 
  3674  068C                     	;# 
  3675  068D                     	;# 
  3676  068E                     	;# 
  3677  068F                     	;# 
  3678  0690                     	;# 
  3679  0691                     	;# 
  3680  0692                     	;# 
  3681  0693                     	;# 
  3682  0694                     	;# 
  3683  070C                     	;# 
  3684  070D                     	;# 
  3685  070E                     	;# 
  3686  070F                     	;# 
  3687  0710                     	;# 
  3688  0711                     	;# 
  3689  0712                     	;# 
  3690  0713                     	;# 
  3691  0714                     	;# 
  3692  0716                     	;# 
  3693  0717                     	;# 
  3694  0718                     	;# 
  3695  0719                     	;# 
  3696  071A                     	;# 
  3697  071B                     	;# 
  3698  071C                     	;# 
  3699  071D                     	;# 
  3700  071E                     	;# 
  3701  0796                     	;# 
  3702  0797                     	;# 
  3703  0798                     	;# 
  3704  0799                     	;# 
  3705  079A                     	;# 
  3706  079B                     	;# 
  3707  080C                     	;# 
  3708  080D                     	;# 
  3709  080E                     	;# 
  3710  080F                     	;# 
  3711  0810                     	;# 
  3712  0811                     	;# 
  3713  0812                     	;# 
  3714  0813                     	;# 
  3715  0814                     	;# 
  3716  081A                     	;# 
  3717  081B                     	;# 
  3718  081C                     	;# 
  3719  081D                     	;# 
  3720  081E                     	;# 
  3721  081F                     	;# 
  3722  088C                     	;# 
  3723  088D                     	;# 
  3724  088E                     	;# 
  3725  088F                     	;# 
  3726  0890                     	;# 
  3727  0891                     	;# 
  3728  0892                     	;# 
  3729  0893                     	;# 
  3730  0895                     	;# 
  3731  0896                     	;# 
  3732  0897                     	;# 
  3733  0898                     	;# 
  3734  0899                     	;# 
  3735  089A                     	;# 
  3736  089B                     	;# 
  3737  090C                     	;# 
  3738  090E                     	;# 
  3739  090F                     	;# 
  3740  091F                     	;# 
  3741  091F                     	;# 
  3742  098F                     	;# 
  3743  098F                     	;# 
  3744  0990                     	;# 
  3745  0991                     	;# 
  3746  0992                     	;# 
  3747  0993                     	;# 
  3748  0994                     	;# 
  3749  0995                     	;# 
  3750  0996                     	;# 
  3751  0997                     	;# 
  3752  0E0F                     	;# 
  3753  0E10                     	;# 
  3754  0E11                     	;# 
  3755  0E12                     	;# 
  3756  0E13                     	;# 
  3757  0E14                     	;# 
  3758  0E15                     	;# 
  3759  0E16                     	;# 
  3760  0E17                     	;# 
  3761  0E18                     	;# 
  3762  0E19                     	;# 
  3763  0E1A                     	;# 
  3764  0E1B                     	;# 
  3765  0E1C                     	;# 
  3766  0E1D                     	;# 
  3767  0E1E                     	;# 
  3768  0E1F                     	;# 
  3769  0E20                     	;# 
  3770  0E21                     	;# 
  3771  0E22                     	;# 
  3772  0E23                     	;# 
  3773  0E24                     	;# 
  3774  0E25                     	;# 
  3775  0E26                     	;# 
  3776  0E27                     	;# 
  3777  0E28                     	;# 
  3778  0E29                     	;# 
  3779  0E2A                     	;# 
  3780  0E2B                     	;# 
  3781  0E2C                     	;# 
  3782  0E2D                     	;# 
  3783  0E2E                     	;# 
  3784  0E2F                     	;# 
  3785  0E30                     	;# 
  3786  0E31                     	;# 
  3787  0E32                     	;# 
  3788  0E33                     	;# 
  3789  0E34                     	;# 
  3790  0E35                     	;# 
  3791  0E36                     	;# 
  3792  0E37                     	;# 
  3793  0E8F                     	;# 
  3794  0E90                     	;# 
  3795  0E91                     	;# 
  3796  0E92                     	;# 
  3797  0E93                     	;# 
  3798  0E94                     	;# 
  3799  0E95                     	;# 
  3800  0E96                     	;# 
  3801  0E97                     	;# 
  3802  0E9C                     	;# 
  3803  0E9D                     	;# 
  3804  0E9E                     	;# 
  3805  0EA1                     	;# 
  3806  0EA2                     	;# 
  3807  0EA3                     	;# 
  3808  0EA4                     	;# 
  3809  0EA5                     	;# 
  3810  0EA9                     	;# 
  3811  0EAA                     	;# 
  3812  0EAB                     	;# 
  3813  0EAC                     	;# 
  3814  0EB1                     	;# 
  3815  0EB2                     	;# 
  3816  0EB3                     	;# 
  3817  0EB8                     	;# 
  3818  0EB9                     	;# 
  3819  0EBA                     	;# 
  3820  0EBB                     	;# 
  3821  0EBC                     	;# 
  3822  0EBD                     	;# 
  3823  0EBE                     	;# 
  3824  0EC3                     	;# 
  3825  0EC5                     	;# 
  3826  0EC6                     	;# 
  3827  0EC7                     	;# 
  3828  0EC8                     	;# 
  3829  0EC9                     	;# 
  3830  0ECA                     	;# 
  3831  0ECB                     	;# 
  3832  0ECC                     	;# 
  3833  0F10                     	;# 
  3834  0F11                     	;# 
  3835  0F12                     	;# 
  3836  0F13                     	;# 
  3837  0F14                     	;# 
  3838  0F15                     	;# 
  3839  0F16                     	;# 
  3840  0F17                     	;# 
  3841  0F18                     	;# 
  3842  0F19                     	;# 
  3843  0F1A                     	;# 
  3844  0F1B                     	;# 
  3845  0F1C                     	;# 
  3846  0F1D                     	;# 
  3847  0F1E                     	;# 
  3848  0F1F                     	;# 
  3849  0F20                     	;# 
  3850  0F21                     	;# 
  3851  0F22                     	;# 
  3852  0F23                     	;# 
  3853  0F24                     	;# 
  3854  0F25                     	;# 
  3855  0F26                     	;# 
  3856  0F27                     	;# 
  3857  0F28                     	;# 
  3858  0F29                     	;# 
  3859  0F2A                     	;# 
  3860  0F2B                     	;# 
  3861  0F2C                     	;# 
  3862  0F2D                     	;# 
  3863  0F2E                     	;# 
  3864  0F2F                     	;# 
  3865  0F30                     	;# 
  3866  0F31                     	;# 
  3867  0F32                     	;# 
  3868  0F38                     	;# 
  3869  0F39                     	;# 
  3870  0F3A                     	;# 
  3871  0F3B                     	;# 
  3872  0F3C                     	;# 
  3873  0F3D                     	;# 
  3874  0F3E                     	;# 
  3875  0F3F                     	;# 
  3876  0F40                     	;# 
  3877  0F41                     	;# 
  3878  0F43                     	;# 
  3879  0F44                     	;# 
  3880  0F45                     	;# 
  3881  0F46                     	;# 
  3882  0F47                     	;# 
  3883  0F48                     	;# 
  3884  0F49                     	;# 
  3885  0F4A                     	;# 
  3886  0F4B                     	;# 
  3887  0F4C                     	;# 
  3888  0F4E                     	;# 
  3889  0F4F                     	;# 
  3890  0F50                     	;# 
  3891  0F51                     	;# 
  3892  0F52                     	;# 
  3893  0F53                     	;# 
  3894  0F54                     	;# 
  3895  0F55                     	;# 
  3896  0F56                     	;# 
  3897  0F57                     	;# 
  3898  0F59                     	;# 
  3899  0F5A                     	;# 
  3900  0F5B                     	;# 
  3901  0F5C                     	;# 
  3902  0F5D                     	;# 
  3903  0F61                     	;# 
  3904  0F62                     	;# 
  3905  0F64                     	;# 
  3906  0F65                     	;# 
  3907  0F66                     	;# 
  3908  0F67                     	;# 
  3909  0F68                     	;# 
  3910  0F69                     	;# 
  3911  0F6A                     	;# 
  3912  0F6B                     	;# 
  3913  0F6C                     	;# 
  3914  0F6D                     	;# 
  3915  0FE4                     	;# 
  3916  0FE5                     	;# 
  3917  0FE6                     	;# 
  3918  0FE7                     	;# 
  3919  0FE8                     	;# 
  3920  0FE9                     	;# 
  3921  0FEA                     	;# 
  3922  0FEB                     	;# 
  3923  0FED                     	;# 
  3924  0FEE                     	;# 
  3925  0FEF                     	;# 
  3926  0000                     	;# 
  3927  0001                     	;# 
  3928  0002                     	;# 
  3929  0003                     	;# 
  3930  0004                     	;# 
  3931  0005                     	;# 
  3932  0006                     	;# 
  3933  0007                     	;# 
  3934  0008                     	;# 
  3935  0009                     	;# 
  3936  000A                     	;# 
  3937  000B                     	;# 
  3938  000C                     	;# 
  3939  000D                     	;# 
  3940  000E                     	;# 
  3941  000F                     	;# 
  3942  0010                     	;# 
  3943  0011                     	;# 
  3944  0012                     	;# 
  3945  0013                     	;# 
  3946  0014                     	;# 
  3947  0015                     	;# 
  3948  0016                     	;# 
  3949  0017                     	;# 
  3950  0018                     	;# 
  3951  0019                     	;# 
  3952  001A                     	;# 
  3953  001C                     	;# 
  3954  001C                     	;# 
  3955  001D                     	;# 
  3956  001D                     	;# 
  3957  001E                     	;# 
  3958  001F                     	;# 
  3959  008C                     	;# 
  3960  008C                     	;# 
  3961  008D                     	;# 
  3962  008E                     	;# 
  3963  008E                     	;# 
  3964  008F                     	;# 
  3965  0090                     	;# 
  3966  0090                     	;# 
  3967  0091                     	;# 
  3968  0093                     	;# 
  3969  0094                     	;# 
  3970  0095                     	;# 
  3971  0096                     	;# 
  3972  0097                     	;# 
  3973  0098                     	;# 
  3974  0099                     	;# 
  3975  009A                     	;# 
  3976  009B                     	;# 
  3977  009C                     	;# 
  3978  009D                     	;# 
  3979  009E                     	;# 
  3980  010C                     	;# 
  3981  010D                     	;# 
  3982  010E                     	;# 
  3983  010E                     	;# 
  3984  010F                     	;# 
  3985  0110                     	;# 
  3986  0110                     	;# 
  3987  0111                     	;# 
  3988  0112                     	;# 
  3989  0112                     	;# 
  3990  0113                     	;# 
  3991  0114                     	;# 
  3992  0114                     	;# 
  3993  0115                     	;# 
  3994  0116                     	;# 
  3995  0116                     	;# 
  3996  0117                     	;# 
  3997  0119                     	;# 
  3998  0119                     	;# 
  3999  0119                     	;# 
  4000  011A                     	;# 
  4001  011A                     	;# 
  4002  011A                     	;# 
  4003  011B                     	;# 
  4004  011B                     	;# 
  4005  011B                     	;# 
  4006  011B                     	;# 
  4007  011B                     	;# 
  4008  011C                     	;# 
  4009  011C                     	;# 
  4010  011C                     	;# 
  4011  011D                     	;# 
  4012  011D                     	;# 
  4013  011D                     	;# 
  4014  011E                     	;# 
  4015  011E                     	;# 
  4016  011E                     	;# 
  4017  011F                     	;# 
  4018  011F                     	;# 
  4019  011F                     	;# 
  4020  011F                     	;# 
  4021  011F                     	;# 
  4022  018C                     	;# 
  4023  018D                     	;# 
  4024  018E                     	;# 
  4025  018F                     	;# 
  4026  0190                     	;# 
  4027  0191                     	;# 
  4028  0192                     	;# 
  4029  0196                     	;# 
  4030  0197                     	;# 
  4031  0198                     	;# 
  4032  0199                     	;# 
  4033  019A                     	;# 
  4034  019B                     	;# 
  4035  019C                     	;# 
  4036  020C                     	;# 
  4037  020C                     	;# 
  4038  020D                     	;# 
  4039  020E                     	;# 
  4040  020F                     	;# 
  4041  020F                     	;# 
  4042  0210                     	;# 
  4043  0210                     	;# 
  4044  0211                     	;# 
  4045  0211                     	;# 
  4046  0212                     	;# 
  4047  0212                     	;# 
  4048  0213                     	;# 
  4049  0214                     	;# 
  4050  0215                     	;# 
  4051  0215                     	;# 
  4052  0216                     	;# 
  4053  0216                     	;# 
  4054  0217                     	;# 
  4055  0217                     	;# 
  4056  0218                     	;# 
  4057  0218                     	;# 
  4058  0219                     	;# 
  4059  021A                     	;# 
  4060  021B                     	;# 
  4061  021B                     	;# 
  4062  021C                     	;# 
  4063  021C                     	;# 
  4064  021D                     	;# 
  4065  021D                     	;# 
  4066  021E                     	;# 
  4067  021F                     	;# 
  4068  028C                     	;# 
  4069  028C                     	;# 
  4070  028D                     	;# 
  4071  028D                     	;# 
  4072  028E                     	;# 
  4073  028F                     	;# 
  4074  0290                     	;# 
  4075  0290                     	;# 
  4076  0291                     	;# 
  4077  0292                     	;# 
  4078  0292                     	;# 
  4079  0293                     	;# 
  4080  0293                     	;# 
  4081  0294                     	;# 
  4082  0295                     	;# 
  4083  0296                     	;# 
  4084  0296                     	;# 
  4085  0297                     	;# 
  4086  0298                     	;# 
  4087  0298                     	;# 
  4088  0299                     	;# 
  4089  0299                     	;# 
  4090  029A                     	;# 
  4091  029B                     	;# 
  4092  029C                     	;# 
  4093  029C                     	;# 
  4094  029D                     	;# 
  4095  030C                     	;# 
  4096  030C                     	;# 
  4097  030D                     	;# 
  4098  030E                     	;# 
  4099  030F                     	;# 
  4100  0310                     	;# 
  4101  0310                     	;# 
  4102  0311                     	;# 
  4103  0312                     	;# 
  4104  0313                     	;# 
  4105  0314                     	;# 
  4106  0314                     	;# 
  4107  0315                     	;# 
  4108  0316                     	;# 
  4109  0317                     	;# 
  4110  0318                     	;# 
  4111  0318                     	;# 
  4112  0319                     	;# 
  4113  031A                     	;# 
  4114  031B                     	;# 
  4115  031C                     	;# 
  4116  031C                     	;# 
  4117  031D                     	;# 
  4118  031E                     	;# 
  4119  031F                     	;# 
  4120  038C                     	;# 
  4121  038C                     	;# 
  4122  038D                     	;# 
  4123  038E                     	;# 
  4124  0390                     	;# 
  4125  0390                     	;# 
  4126  0391                     	;# 
  4127  0392                     	;# 
  4128  040C                     	;# 
  4129  040D                     	;# 
  4130  040E                     	;# 
  4131  040F                     	;# 
  4132  0410                     	;# 
  4133  0411                     	;# 
  4134  0416                     	;# 
  4135  0416                     	;# 
  4136  0417                     	;# 
  4137  0418                     	;# 
  4138  0418                     	;# 
  4139  0419                     	;# 
  4140  041A                     	;# 
  4141  041A                     	;# 
  4142  041B                     	;# 
  4143  041C                     	;# 
  4144  041C                     	;# 
  4145  041D                     	;# 
  4146  041E                     	;# 
  4147  041F                     	;# 
  4148  048C                     	;# 
  4149  048C                     	;# 
  4150  048D                     	;# 
  4151  048E                     	;# 
  4152  048F                     	;# 
  4153  048F                     	;# 
  4154  0490                     	;# 
  4155  0491                     	;# 
  4156  0492                     	;# 
  4157  0492                     	;# 
  4158  0493                     	;# 
  4159  0494                     	;# 
  4160  0495                     	;# 
  4161  0495                     	;# 
  4162  0496                     	;# 
  4163  0497                     	;# 
  4164  0498                     	;# 
  4165  0499                     	;# 
  4166  049A                     	;# 
  4167  049B                     	;# 
  4168  049C                     	;# 
  4169  049D                     	;# 
  4170  050C                     	;# 
  4171  050C                     	;# 
  4172  050D                     	;# 
  4173  050E                     	;# 
  4174  050F                     	;# 
  4175  050F                     	;# 
  4176  0510                     	;# 
  4177  0511                     	;# 
  4178  0512                     	;# 
  4179  0512                     	;# 
  4180  0513                     	;# 
  4181  0514                     	;# 
  4182  0515                     	;# 
  4183  0515                     	;# 
  4184  0516                     	;# 
  4185  0517                     	;# 
  4186  0518                     	;# 
  4187  0519                     	;# 
  4188  051A                     	;# 
  4189  051B                     	;# 
  4190  051C                     	;# 
  4191  051D                     	;# 
  4192  058C                     	;# 
  4193  058C                     	;# 
  4194  058D                     	;# 
  4195  058E                     	;# 
  4196  058F                     	;# 
  4197  058F                     	;# 
  4198  0590                     	;# 
  4199  0591                     	;# 
  4200  0592                     	;# 
  4201  0593                     	;# 
  4202  060C                     	;# 
  4203  060D                     	;# 
  4204  060E                     	;# 
  4205  060F                     	;# 
  4206  0610                     	;# 
  4207  0611                     	;# 
  4208  0612                     	;# 
  4209  0613                     	;# 
  4210  0614                     	;# 
  4211  0616                     	;# 
  4212  0617                     	;# 
  4213  0618                     	;# 
  4214  0619                     	;# 
  4215  061A                     	;# 
  4216  061B                     	;# 
  4217  061C                     	;# 
  4218  061D                     	;# 
  4219  061E                     	;# 
  4220  068C                     	;# 
  4221  068D                     	;# 
  4222  068E                     	;# 
  4223  068F                     	;# 
  4224  0690                     	;# 
  4225  0691                     	;# 
  4226  0692                     	;# 
  4227  0693                     	;# 
  4228  0694                     	;# 
  4229  070C                     	;# 
  4230  070D                     	;# 
  4231  070E                     	;# 
  4232  070F                     	;# 
  4233  0710                     	;# 
  4234  0711                     	;# 
  4235  0712                     	;# 
  4236  0713                     	;# 
  4237  0714                     	;# 
  4238  0716                     	;# 
  4239  0717                     	;# 
  4240  0718                     	;# 
  4241  0719                     	;# 
  4242  071A                     	;# 
  4243  071B                     	;# 
  4244  071C                     	;# 
  4245  071D                     	;# 
  4246  071E                     	;# 
  4247  0796                     	;# 
  4248  0797                     	;# 
  4249  0798                     	;# 
  4250  0799                     	;# 
  4251  079A                     	;# 
  4252  079B                     	;# 
  4253  080C                     	;# 
  4254  080D                     	;# 
  4255  080E                     	;# 
  4256  080F                     	;# 
  4257  0810                     	;# 
  4258  0811                     	;# 
  4259  0812                     	;# 
  4260  0813                     	;# 
  4261  0814                     	;# 
  4262  081A                     	;# 
  4263  081B                     	;# 
  4264  081C                     	;# 
  4265  081D                     	;# 
  4266  081E                     	;# 
  4267  081F                     	;# 
  4268  088C                     	;# 
  4269  088D                     	;# 
  4270  088E                     	;# 
  4271  088F                     	;# 
  4272  0890                     	;# 
  4273  0891                     	;# 
  4274  0892                     	;# 
  4275  0893                     	;# 
  4276  0895                     	;# 
  4277  0896                     	;# 
  4278  0897                     	;# 
  4279  0898                     	;# 
  4280  0899                     	;# 
  4281  089A                     	;# 
  4282  089B                     	;# 
  4283  090C                     	;# 
  4284  090E                     	;# 
  4285  090F                     	;# 
  4286  091F                     	;# 
  4287  091F                     	;# 
  4288  098F                     	;# 
  4289  098F                     	;# 
  4290  0990                     	;# 
  4291  0991                     	;# 
  4292  0992                     	;# 
  4293  0993                     	;# 
  4294  0994                     	;# 
  4295  0995                     	;# 
  4296  0996                     	;# 
  4297  0997                     	;# 
  4298  0E0F                     	;# 
  4299  0E10                     	;# 
  4300  0E11                     	;# 
  4301  0E12                     	;# 
  4302  0E13                     	;# 
  4303  0E14                     	;# 
  4304  0E15                     	;# 
  4305  0E16                     	;# 
  4306  0E17                     	;# 
  4307  0E18                     	;# 
  4308  0E19                     	;# 
  4309  0E1A                     	;# 
  4310  0E1B                     	;# 
  4311  0E1C                     	;# 
  4312  0E1D                     	;# 
  4313  0E1E                     	;# 
  4314  0E1F                     	;# 
  4315  0E20                     	;# 
  4316  0E21                     	;# 
  4317  0E22                     	;# 
  4318  0E23                     	;# 
  4319  0E24                     	;# 
  4320  0E25                     	;# 
  4321  0E26                     	;# 
  4322  0E27                     	;# 
  4323  0E28                     	;# 
  4324  0E29                     	;# 
  4325  0E2A                     	;# 
  4326  0E2B                     	;# 
  4327  0E2C                     	;# 
  4328  0E2D                     	;# 
  4329  0E2E                     	;# 
  4330  0E2F                     	;# 
  4331  0E30                     	;# 
  4332  0E31                     	;# 
  4333  0E32                     	;# 
  4334  0E33                     	;# 
  4335  0E34                     	;# 
  4336  0E35                     	;# 
  4337  0E36                     	;# 
  4338  0E37                     	;# 
  4339  0E8F                     	;# 
  4340  0E90                     	;# 
  4341  0E91                     	;# 
  4342  0E92                     	;# 
  4343  0E93                     	;# 
  4344  0E94                     	;# 
  4345  0E95                     	;# 
  4346  0E96                     	;# 
  4347  0E97                     	;# 
  4348  0E9C                     	;# 
  4349  0E9D                     	;# 
  4350  0E9E                     	;# 
  4351  0EA1                     	;# 
  4352  0EA2                     	;# 
  4353  0EA3                     	;# 
  4354  0EA4                     	;# 
  4355  0EA5                     	;# 
  4356  0EA9                     	;# 
  4357  0EAA                     	;# 
  4358  0EAB                     	;# 
  4359  0EAC                     	;# 
  4360  0EB1                     	;# 
  4361  0EB2                     	;# 
  4362  0EB3                     	;# 
  4363  0EB8                     	;# 
  4364  0EB9                     	;# 
  4365  0EBA                     	;# 
  4366  0EBB                     	;# 
  4367  0EBC                     	;# 
  4368  0EBD                     	;# 
  4369  0EBE                     	;# 
  4370  0EC3                     	;# 
  4371  0EC5                     	;# 
  4372  0EC6                     	;# 
  4373  0EC7                     	;# 
  4374  0EC8                     	;# 
  4375  0EC9                     	;# 
  4376  0ECA                     	;# 
  4377  0ECB                     	;# 
  4378  0ECC                     	;# 
  4379  0F10                     	;# 
  4380  0F11                     	;# 
  4381  0F12                     	;# 
  4382  0F13                     	;# 
  4383  0F14                     	;# 
  4384  0F15                     	;# 
  4385  0F16                     	;# 
  4386  0F17                     	;# 
  4387  0F18                     	;# 
  4388  0F19                     	;# 
  4389  0F1A                     	;# 
  4390  0F1B                     	;# 
  4391  0F1C                     	;# 
  4392  0F1D                     	;# 
  4393  0F1E                     	;# 
  4394  0F1F                     	;# 
  4395  0F20                     	;# 
  4396  0F21                     	;# 
  4397  0F22                     	;# 
  4398  0F23                     	;# 
  4399  0F24                     	;# 
  4400  0F25                     	;# 
  4401  0F26                     	;# 
  4402  0F27                     	;# 
  4403  0F28                     	;# 
  4404  0F29                     	;# 
  4405  0F2A                     	;# 
  4406  0F2B                     	;# 
  4407  0F2C                     	;# 
  4408  0F2D                     	;# 
  4409  0F2E                     	;# 
  4410  0F2F                     	;# 
  4411  0F30                     	;# 
  4412  0F31                     	;# 
  4413  0F32                     	;# 
  4414  0F38                     	;# 
  4415  0F39                     	;# 
  4416  0F3A                     	;# 
  4417  0F3B                     	;# 
  4418  0F3C                     	;# 
  4419  0F3D                     	;# 
  4420  0F3E                     	;# 
  4421  0F3F                     	;# 
  4422  0F40                     	;# 
  4423  0F41                     	;# 
  4424  0F43                     	;# 
  4425  0F44                     	;# 
  4426  0F45                     	;# 
  4427  0F46                     	;# 
  4428  0F47                     	;# 
  4429  0F48                     	;# 
  4430  0F49                     	;# 
  4431  0F4A                     	;# 
  4432  0F4B                     	;# 
  4433  0F4C                     	;# 
  4434  0F4E                     	;# 
  4435  0F4F                     	;# 
  4436  0F50                     	;# 
  4437  0F51                     	;# 
  4438  0F52                     	;# 
  4439  0F53                     	;# 
  4440  0F54                     	;# 
  4441  0F55                     	;# 
  4442  0F56                     	;# 
  4443  0F57                     	;# 
  4444  0F59                     	;# 
  4445  0F5A                     	;# 
  4446  0F5B                     	;# 
  4447  0F5C                     	;# 
  4448  0F5D                     	;# 
  4449  0F61                     	;# 
  4450  0F62                     	;# 
  4451  0F64                     	;# 
  4452  0F65                     	;# 
  4453  0F66                     	;# 
  4454  0F67                     	;# 
  4455  0F68                     	;# 
  4456  0F69                     	;# 
  4457  0F6A                     	;# 
  4458  0F6B                     	;# 
  4459  0F6C                     	;# 
  4460  0F6D                     	;# 
  4461  0FE4                     	;# 
  4462  0FE5                     	;# 
  4463  0FE6                     	;# 
  4464  0FE7                     	;# 
  4465  0FE8                     	;# 
  4466  0FE9                     	;# 
  4467  0FEA                     	;# 
  4468  0FEB                     	;# 
  4469  0FED                     	;# 
  4470  0FEE                     	;# 
  4471  0FEF                     	;# 
  4472  0000                     	;# 
  4473  0001                     	;# 
  4474  0002                     	;# 
  4475  0003                     	;# 
  4476  0004                     	;# 
  4477  0005                     	;# 
  4478  0006                     	;# 
  4479  0007                     	;# 
  4480  0008                     	;# 
  4481  0009                     	;# 
  4482  000A                     	;# 
  4483  000B                     	;# 
  4484  000C                     	;# 
  4485  000D                     	;# 
  4486  000E                     	;# 
  4487  000F                     	;# 
  4488  0010                     	;# 
  4489  0011                     	;# 
  4490  0012                     	;# 
  4491  0013                     	;# 
  4492  0014                     	;# 
  4493  0015                     	;# 
  4494  0016                     	;# 
  4495  0017                     	;# 
  4496  0018                     	;# 
  4497  0019                     	;# 
  4498  001A                     	;# 
  4499  001C                     	;# 
  4500  001C                     	;# 
  4501  001D                     	;# 
  4502  001D                     	;# 
  4503  001E                     	;# 
  4504  001F                     	;# 
  4505  008C                     	;# 
  4506  008C                     	;# 
  4507  008D                     	;# 
  4508  008E                     	;# 
  4509  008E                     	;# 
  4510  008F                     	;# 
  4511  0090                     	;# 
  4512  0090                     	;# 
  4513  0091                     	;# 
  4514  0093                     	;# 
  4515  0094                     	;# 
  4516  0095                     	;# 
  4517  0096                     	;# 
  4518  0097                     	;# 
  4519  0098                     	;# 
  4520  0099                     	;# 
  4521  009A                     	;# 
  4522  009B                     	;# 
  4523  009C                     	;# 
  4524  009D                     	;# 
  4525  009E                     	;# 
  4526  010C                     	;# 
  4527  010D                     	;# 
  4528  010E                     	;# 
  4529  010E                     	;# 
  4530  010F                     	;# 
  4531  0110                     	;# 
  4532  0110                     	;# 
  4533  0111                     	;# 
  4534  0112                     	;# 
  4535  0112                     	;# 
  4536  0113                     	;# 
  4537  0114                     	;# 
  4538  0114                     	;# 
  4539  0115                     	;# 
  4540  0116                     	;# 
  4541  0116                     	;# 
  4542  0117                     	;# 
  4543  0119                     	;# 
  4544  0119                     	;# 
  4545  0119                     	;# 
  4546  011A                     	;# 
  4547  011A                     	;# 
  4548  011A                     	;# 
  4549  011B                     	;# 
  4550  011B                     	;# 
  4551  011B                     	;# 
  4552  011B                     	;# 
  4553  011B                     	;# 
  4554  011C                     	;# 
  4555  011C                     	;# 
  4556  011C                     	;# 
  4557  011D                     	;# 
  4558  011D                     	;# 
  4559  011D                     	;# 
  4560  011E                     	;# 
  4561  011E                     	;# 
  4562  011E                     	;# 
  4563  011F                     	;# 
  4564  011F                     	;# 
  4565  011F                     	;# 
  4566  011F                     	;# 
  4567  011F                     	;# 
  4568  018C                     	;# 
  4569  018D                     	;# 
  4570  018E                     	;# 
  4571  018F                     	;# 
  4572  0190                     	;# 
  4573  0191                     	;# 
  4574  0192                     	;# 
  4575  0196                     	;# 
  4576  0197                     	;# 
  4577  0198                     	;# 
  4578  0199                     	;# 
  4579  019A                     	;# 
  4580  019B                     	;# 
  4581  019C                     	;# 
  4582  020C                     	;# 
  4583  020C                     	;# 
  4584  020D                     	;# 
  4585  020E                     	;# 
  4586  020F                     	;# 
  4587  020F                     	;# 
  4588  0210                     	;# 
  4589  0210                     	;# 
  4590  0211                     	;# 
  4591  0211                     	;# 
  4592  0212                     	;# 
  4593  0212                     	;# 
  4594  0213                     	;# 
  4595  0214                     	;# 
  4596  0215                     	;# 
  4597  0215                     	;# 
  4598  0216                     	;# 
  4599  0216                     	;# 
  4600  0217                     	;# 
  4601  0217                     	;# 
  4602  0218                     	;# 
  4603  0218                     	;# 
  4604  0219                     	;# 
  4605  021A                     	;# 
  4606  021B                     	;# 
  4607  021B                     	;# 
  4608  021C                     	;# 
  4609  021C                     	;# 
  4610  021D                     	;# 
  4611  021D                     	;# 
  4612  021E                     	;# 
  4613  021F                     	;# 
  4614  028C                     	;# 
  4615  028C                     	;# 
  4616  028D                     	;# 
  4617  028D                     	;# 
  4618  028E                     	;# 
  4619  028F                     	;# 
  4620  0290                     	;# 
  4621  0290                     	;# 
  4622  0291                     	;# 
  4623  0292                     	;# 
  4624  0292                     	;# 
  4625  0293                     	;# 
  4626  0293                     	;# 
  4627  0294                     	;# 
  4628  0295                     	;# 
  4629  0296                     	;# 
  4630  0296                     	;# 
  4631  0297                     	;# 
  4632  0298                     	;# 
  4633  0298                     	;# 
  4634  0299                     	;# 
  4635  0299                     	;# 
  4636  029A                     	;# 
  4637  029B                     	;# 
  4638  029C                     	;# 
  4639  029C                     	;# 
  4640  029D                     	;# 
  4641  030C                     	;# 
  4642  030C                     	;# 
  4643  030D                     	;# 
  4644  030E                     	;# 
  4645  030F                     	;# 
  4646  0310                     	;# 
  4647  0310                     	;# 
  4648  0311                     	;# 
  4649  0312                     	;# 
  4650  0313                     	;# 
  4651  0314                     	;# 
  4652  0314                     	;# 
  4653  0315                     	;# 
  4654  0316                     	;# 
  4655  0317                     	;# 
  4656  0318                     	;# 
  4657  0318                     	;# 
  4658  0319                     	;# 
  4659  031A                     	;# 
  4660  031B                     	;# 
  4661  031C                     	;# 
  4662  031C                     	;# 
  4663  031D                     	;# 
  4664  031E                     	;# 
  4665  031F                     	;# 
  4666  038C                     	;# 
  4667  038C                     	;# 
  4668  038D                     	;# 
  4669  038E                     	;# 
  4670  0390                     	;# 
  4671  0390                     	;# 
  4672  0391                     	;# 
  4673  0392                     	;# 
  4674  040C                     	;# 
  4675  040D                     	;# 
  4676  040E                     	;# 
  4677  040F                     	;# 
  4678  0410                     	;# 
  4679  0411                     	;# 
  4680  0416                     	;# 
  4681  0416                     	;# 
  4682  0417                     	;# 
  4683  0418                     	;# 
  4684  0418                     	;# 
  4685  0419                     	;# 
  4686  041A                     	;# 
  4687  041A                     	;# 
  4688  041B                     	;# 
  4689  041C                     	;# 
  4690  041C                     	;# 
  4691  041D                     	;# 
  4692  041E                     	;# 
  4693  041F                     	;# 
  4694  048C                     	;# 
  4695  048C                     	;# 
  4696  048D                     	;# 
  4697  048E                     	;# 
  4698  048F                     	;# 
  4699  048F                     	;# 
  4700  0490                     	;# 
  4701  0491                     	;# 
  4702  0492                     	;# 
  4703  0492                     	;# 
  4704  0493                     	;# 
  4705  0494                     	;# 
  4706  0495                     	;# 
  4707  0495                     	;# 
  4708  0496                     	;# 
  4709  0497                     	;# 
  4710  0498                     	;# 
  4711  0499                     	;# 
  4712  049A                     	;# 
  4713  049B                     	;# 
  4714  049C                     	;# 
  4715  049D                     	;# 
  4716  050C                     	;# 
  4717  050C                     	;# 
  4718  050D                     	;# 
  4719  050E                     	;# 
  4720  050F                     	;# 
  4721  050F                     	;# 
  4722  0510                     	;# 
  4723  0511                     	;# 
  4724  0512                     	;# 
  4725  0512                     	;# 
  4726  0513                     	;# 
  4727  0514                     	;# 
  4728  0515                     	;# 
  4729  0515                     	;# 
  4730  0516                     	;# 
  4731  0517                     	;# 
  4732  0518                     	;# 
  4733  0519                     	;# 
  4734  051A                     	;# 
  4735  051B                     	;# 
  4736  051C                     	;# 
  4737  051D                     	;# 
  4738  058C                     	;# 
  4739  058C                     	;# 
  4740  058D                     	;# 
  4741  058E                     	;# 
  4742  058F                     	;# 
  4743  058F                     	;# 
  4744  0590                     	;# 
  4745  0591                     	;# 
  4746  0592                     	;# 
  4747  0593                     	;# 
  4748  060C                     	;# 
  4749  060D                     	;# 
  4750  060E                     	;# 
  4751  060F                     	;# 
  4752  0610                     	;# 
  4753  0611                     	;# 
  4754  0612                     	;# 
  4755  0613                     	;# 
  4756  0614                     	;# 
  4757  0616                     	;# 
  4758  0617                     	;# 
  4759  0618                     	;# 
  4760  0619                     	;# 
  4761  061A                     	;# 
  4762  061B                     	;# 
  4763  061C                     	;# 
  4764  061D                     	;# 
  4765  061E                     	;# 
  4766  068C                     	;# 
  4767  068D                     	;# 
  4768  068E                     	;# 
  4769  068F                     	;# 
  4770  0690                     	;# 
  4771  0691                     	;# 
  4772  0692                     	;# 
  4773  0693                     	;# 
  4774  0694                     	;# 
  4775  070C                     	;# 
  4776  070D                     	;# 
  4777  070E                     	;# 
  4778  070F                     	;# 
  4779  0710                     	;# 
  4780  0711                     	;# 
  4781  0712                     	;# 
  4782  0713                     	;# 
  4783  0714                     	;# 
  4784  0716                     	;# 
  4785  0717                     	;# 
  4786  0718                     	;# 
  4787  0719                     	;# 
  4788  071A                     	;# 
  4789  071B                     	;# 
  4790  071C                     	;# 
  4791  071D                     	;# 
  4792  071E                     	;# 
  4793  0796                     	;# 
  4794  0797                     	;# 
  4795  0798                     	;# 
  4796  0799                     	;# 
  4797  079A                     	;# 
  4798  079B                     	;# 
  4799  080C                     	;# 
  4800  080D                     	;# 
  4801  080E                     	;# 
  4802  080F                     	;# 
  4803  0810                     	;# 
  4804  0811                     	;# 
  4805  0812                     	;# 
  4806  0813                     	;# 
  4807  0814                     	;# 
  4808  081A                     	;# 
  4809  081B                     	;# 
  4810  081C                     	;# 
  4811  081D                     	;# 
  4812  081E                     	;# 
  4813  081F                     	;# 
  4814  088C                     	;# 
  4815  088D                     	;# 
  4816  088E                     	;# 
  4817  088F                     	;# 
  4818  0890                     	;# 
  4819  0891                     	;# 
  4820  0892                     	;# 
  4821  0893                     	;# 
  4822  0895                     	;# 
  4823  0896                     	;# 
  4824  0897                     	;# 
  4825  0898                     	;# 
  4826  0899                     	;# 
  4827  089A                     	;# 
  4828  089B                     	;# 
  4829  090C                     	;# 
  4830  090E                     	;# 
  4831  090F                     	;# 
  4832  091F                     	;# 
  4833  091F                     	;# 
  4834  098F                     	;# 
  4835  098F                     	;# 
  4836  0990                     	;# 
  4837  0991                     	;# 
  4838  0992                     	;# 
  4839  0993                     	;# 
  4840  0994                     	;# 
  4841  0995                     	;# 
  4842  0996                     	;# 
  4843  0997                     	;# 
  4844  0E0F                     	;# 
  4845  0E10                     	;# 
  4846  0E11                     	;# 
  4847  0E12                     	;# 
  4848  0E13                     	;# 
  4849  0E14                     	;# 
  4850  0E15                     	;# 
  4851  0E16                     	;# 
  4852  0E17                     	;# 
  4853  0E18                     	;# 
  4854  0E19                     	;# 
  4855  0E1A                     	;# 
  4856  0E1B                     	;# 
  4857  0E1C                     	;# 
  4858  0E1D                     	;# 
  4859  0E1E                     	;# 
  4860  0E1F                     	;# 
  4861  0E20                     	;# 
  4862  0E21                     	;# 
  4863  0E22                     	;# 
  4864  0E23                     	;# 
  4865  0E24                     	;# 
  4866  0E25                     	;# 
  4867  0E26                     	;# 
  4868  0E27                     	;# 
  4869  0E28                     	;# 
  4870  0E29                     	;# 
  4871  0E2A                     	;# 
  4872  0E2B                     	;# 
  4873  0E2C                     	;# 
  4874  0E2D                     	;# 
  4875  0E2E                     	;# 
  4876  0E2F                     	;# 
  4877  0E30                     	;# 
  4878  0E31                     	;# 
  4879  0E32                     	;# 
  4880  0E33                     	;# 
  4881  0E34                     	;# 
  4882  0E35                     	;# 
  4883  0E36                     	;# 
  4884  0E37                     	;# 
  4885  0E8F                     	;# 
  4886  0E90                     	;# 
  4887  0E91                     	;# 
  4888  0E92                     	;# 
  4889  0E93                     	;# 
  4890  0E94                     	;# 
  4891  0E95                     	;# 
  4892  0E96                     	;# 
  4893  0E97                     	;# 
  4894  0E9C                     	;# 
  4895  0E9D                     	;# 
  4896  0E9E                     	;# 
  4897  0EA1                     	;# 
  4898  0EA2                     	;# 
  4899  0EA3                     	;# 
  4900  0EA4                     	;# 
  4901  0EA5                     	;# 
  4902  0EA9                     	;# 
  4903  0EAA                     	;# 
  4904  0EAB                     	;# 
  4905  0EAC                     	;# 
  4906  0EB1                     	;# 
  4907  0EB2                     	;# 
  4908  0EB3                     	;# 
  4909  0EB8                     	;# 
  4910  0EB9                     	;# 
  4911  0EBA                     	;# 
  4912  0EBB                     	;# 
  4913  0EBC                     	;# 
  4914  0EBD                     	;# 
  4915  0EBE                     	;# 
  4916  0EC3                     	;# 
  4917  0EC5                     	;# 
  4918  0EC6                     	;# 
  4919  0EC7                     	;# 
  4920  0EC8                     	;# 
  4921  0EC9                     	;# 
  4922  0ECA                     	;# 
  4923  0ECB                     	;# 
  4924  0ECC                     	;# 
  4925  0F10                     	;# 
  4926  0F11                     	;# 
  4927  0F12                     	;# 
  4928  0F13                     	;# 
  4929  0F14                     	;# 
  4930  0F15                     	;# 
  4931  0F16                     	;# 
  4932  0F17                     	;# 
  4933  0F18                     	;# 
  4934  0F19                     	;# 
  4935  0F1A                     	;# 
  4936  0F1B                     	;# 
  4937  0F1C                     	;# 
  4938  0F1D                     	;# 
  4939  0F1E                     	;# 
  4940  0F1F                     	;# 
  4941  0F20                     	;# 
  4942  0F21                     	;# 
  4943  0F22                     	;# 
  4944  0F23                     	;# 
  4945  0F24                     	;# 
  4946  0F25                     	;# 
  4947  0F26                     	;# 
  4948  0F27                     	;# 
  4949  0F28                     	;# 
  4950  0F29                     	;# 
  4951  0F2A                     	;# 
  4952  0F2B                     	;# 
  4953  0F2C                     	;# 
  4954  0F2D                     	;# 
  4955  0F2E                     	;# 
  4956  0F2F                     	;# 
  4957  0F30                     	;# 
  4958  0F31                     	;# 
  4959  0F32                     	;# 
  4960  0F38                     	;# 
  4961  0F39                     	;# 
  4962  0F3A                     	;# 
  4963  0F3B                     	;# 
  4964  0F3C                     	;# 
  4965  0F3D                     	;# 
  4966  0F3E                     	;# 
  4967  0F3F                     	;# 
  4968  0F40                     	;# 
  4969  0F41                     	;# 
  4970  0F43                     	;# 
  4971  0F44                     	;# 
  4972  0F45                     	;# 
  4973  0F46                     	;# 
  4974  0F47                     	;# 
  4975  0F48                     	;# 
  4976  0F49                     	;# 
  4977  0F4A                     	;# 
  4978  0F4B                     	;# 
  4979  0F4C                     	;# 
  4980  0F4E                     	;# 
  4981  0F4F                     	;# 
  4982  0F50                     	;# 
  4983  0F51                     	;# 
  4984  0F52                     	;# 
  4985  0F53                     	;# 
  4986  0F54                     	;# 
  4987  0F55                     	;# 
  4988  0F56                     	;# 
  4989  0F57                     	;# 
  4990  0F59                     	;# 
  4991  0F5A                     	;# 
  4992  0F5B                     	;# 
  4993  0F5C                     	;# 
  4994  0F5D                     	;# 
  4995  0F61                     	;# 
  4996  0F62                     	;# 
  4997  0F64                     	;# 
  4998  0F65                     	;# 
  4999  0F66                     	;# 
  5000  0F67                     	;# 
  5001  0F68                     	;# 
  5002  0F69                     	;# 
  5003  0F6A                     	;# 
  5004  0F6B                     	;# 
  5005  0F6C                     	;# 
  5006  0F6D                     	;# 
  5007  0FE4                     	;# 
  5008  0FE5                     	;# 
  5009  0FE6                     	;# 
  5010  0FE7                     	;# 
  5011  0FE8                     	;# 
  5012  0FE9                     	;# 
  5013  0FEA                     	;# 
  5014  0FEB                     	;# 
  5015  0FED                     	;# 
  5016  0FEE                     	;# 
  5017  0FEF                     	;_eusart_tx_buff
  5018  0011                     _TRISAbits	set	17
  5019  0016                     _LATAbits	set	22
  5020  0018                     _LATCbits	set	24
  5021  0017                     _LATBbits	set	23
  5022  000D                     _PORTBbits	set	13
  5023  000B                     _INTCONbits	set	11
  5024  0012                     _TRISBbits	set	18
  5025  000F                     _PORTDbits	set	15
  5026  0014                     _TRISDbits	set	20
  5027  0019                     _LATDbits	set	25
  5028  0013                     _TRISCbits	set	19
  5029  005E                     _PEIE	set	94
  5030  005F                     _GIE	set	95
  5031  0119                     _RC1REG	set	281
  5032  011A                     _TX1REG	set	282
  5033  011D                     _RC1STA	set	285
  5034  011B                     _SP1BRGL	set	283
  5035  011C                     _SP1BRGH	set	284
  5036  011F                     _BAUD1CONbits	set	287
  5037  011E                     _TX1STAbits	set	286
  5038  011D                     _RC1STAbits	set	285
  5039  08F5                     _TXEN	set	2293
  5040  0293                     _T4PR	set	659
  5041  0295                     _T4HLT	set	661
  5042  0296                     _T4CLKCON	set	662
  5043  0294                     _T4CON	set	660
  5044  0716                     _PIE0bits	set	1814
  5045  071A                     _PIE4	set	1818
  5046  0710                     _PIR4	set	1808
  5047  387C                     _TXIF	set	14460
  5048  3860                     _INTF	set	14432
  5049  38CC                     _TXIE	set	14540
  5050  38CD                     _RCIE	set	14541
  5051  387D                     _RCIF	set	14461
  5052  0890                     _OSCSTATbits	set	2192
  5053  0893                     _OSCFRQ	set	2195
  5054  088D                     _OSCCON1	set	2189
  5055  0E90                     _INTPPS	set	3728
  5056  0ECB                     _RXPPS	set	3787
  5057  0F64                     _ANSELE	set	3940
  5058  0F59                     _ANSELD	set	3929
  5059  0F4E                     _ANSELC	set	3918
  5060  0F43                     _ANSELB	set	3907
  5061  0F38                     _ANSELA	set	3896
  5062  0F26                     _RC6PPS	set	3878
  5063                           
  5064                           	psect	stringtext1
  5065  1800                     __pstringtext1:
  5066  1800                     STR_2:
  5067  1800  3453               	retlw	83	;'S'
  5068  1801  3479               	retlw	121	;'y'
  5069  1802  3473               	retlw	115	;'s'
  5070  1803  3474               	retlw	116	;'t'
  5071  1804  3465               	retlw	101	;'e'
  5072  1805  346D               	retlw	109	;'m'
  5073  1806  3420               	retlw	32	;' '
  5074  1807  3449               	retlw	73	;'I'
  5075  1808  346E               	retlw	110	;'n'
  5076  1809  3469               	retlw	105	;'i'
  5077  180A  3474               	retlw	116	;'t'
  5078  180B  3420               	retlw	32	;' '
  5079  180C  3443               	retlw	67	;'C'
  5080  180D  346F               	retlw	111	;'o'
  5081  180E  346D               	retlw	109	;'m'
  5082  180F  3470               	retlw	112	;'p'
  5083  1810  346C               	retlw	108	;'l'
  5084  1811  3465               	retlw	101	;'e'
  5085  1812  3474               	retlw	116	;'t'
  5086  1813  3465               	retlw	101	;'e'
  5087  1814  342C               	retlw	44	;','
  5088  1815  3420               	retlw	32	;' '
  5089  1816  3453               	retlw	83	;'S'
  5090  1817  3479               	retlw	121	;'y'
  5091  1818  3473               	retlw	115	;'s'
  5092  1819  3474               	retlw	116	;'t'
  5093  181A  3465               	retlw	101	;'e'
  5094  181B  346D               	retlw	109	;'m'
  5095  181C  3420               	retlw	32	;' '
  5096  181D  3453               	retlw	83	;'S'
  5097  181E  3474               	retlw	116	;'t'
  5098  181F  3461               	retlw	97	;'a'
  5099  1820  3474               	retlw	116	;'t'
  5100  1821  3475               	retlw	117	;'u'
  5101  1822  3473               	retlw	115	;'s'
  5102  1823  343A               	retlw	58	;':'
  5103  1824  3420               	retlw	32	;' '
  5104  1825  3430               	retlw	48	;'0'
  5105  1826  3478               	retlw	120	;'x'
  5106  1827  3425               	retlw	37	;'%'
  5107  1828  3430               	retlw	48	;'0'
  5108  1829  3432               	retlw	50	;'2'
  5109  182A  3458               	retlw	88	;'X'
  5110  182B  342C               	retlw	44	;','
  5111  182C  3420               	retlw	32	;' '
  5112  182D  3442               	retlw	66	;'B'
  5113  182E  3465               	retlw	101	;'e'
  5114  182F  3467               	retlw	103	;'g'
  5115  1830  3469               	retlw	105	;'i'
  5116  1831  346E               	retlw	110	;'n'
  5117  1832  346E               	retlw	110	;'n'
  5118  1833  3469               	retlw	105	;'i'
  5119  1834  346E               	retlw	110	;'n'
  5120  1835  3467               	retlw	103	;'g'
  5121  1836  3420               	retlw	32	;' '
  5122  1837  344C               	retlw	76	;'L'
  5123  1838  346F               	retlw	111	;'o'
  5124  1839  346F               	retlw	111	;'o'
  5125  183A  3470               	retlw	112	;'p'
  5126  183B  3400               	retlw	0
  5127                           
  5128                           	psect	stringtext2
  5129  183C                     __pstringtext2:
  5130  183C                     STR_4:
  5131  183C  3448               	retlw	72	;'H'
  5132  183D  3420               	retlw	32	;' '
  5133  183E  343D               	retlw	61	;'='
  5134  183F  3420               	retlw	32	;' '
  5135  1840  3425               	retlw	37	;'%'
  5136  1841  3464               	retlw	100	;'d'
  5137  1842  342E               	retlw	46	;'.'
  5138  1843  3425               	retlw	37	;'%'
  5139  1844  3464               	retlw	100	;'d'
  5140  1845  3425               	retlw	37	;'%'
  5141  1846  3425               	retlw	37	;'%'
  5142  1847  3420               	retlw	32	;' '
  5143  1848  3454               	retlw	84	;'T'
  5144  1849  3420               	retlw	32	;' '
  5145  184A  343D               	retlw	61	;'='
  5146  184B  3420               	retlw	32	;' '
  5147  184C  3425               	retlw	37	;'%'
  5148  184D  3464               	retlw	100	;'d'
  5149  184E  342E               	retlw	46	;'.'
  5150  184F  3425               	retlw	37	;'%'
  5151  1850  3464               	retlw	100	;'d'
  5152  1851  3443               	retlw	67	;'C'
  5153  1852  3400               	retlw	0
  5154                           
  5155                           	psect	stringtext3
  5156  1853                     __pstringtext3:
  5157  1853                     STR_3:
  5158  1853  3425               	retlw	37	;'%'
  5159  1854  3464               	retlw	100	;'d'
  5160  1855  343A               	retlw	58	;':'
  5161  1856  3420               	retlw	32	;' '
  5162  1857  3453               	retlw	83	;'S'
  5163  1858  3474               	retlw	116	;'t'
  5164  1859  3461               	retlw	97	;'a'
  5165  185A  3472               	retlw	114	;'r'
  5166  185B  3474               	retlw	116	;'t'
  5167  185C  3469               	retlw	105	;'i'
  5168  185D  346E               	retlw	110	;'n'
  5169  185E  3467               	retlw	103	;'g'
  5170  185F  3420               	retlw	32	;' '
  5171  1860  3444               	retlw	68	;'D'
  5172  1861  3461               	retlw	97	;'a'
  5173  1862  3474               	retlw	116	;'t'
  5174  1863  3461               	retlw	97	;'a'
  5175  1864  3420               	retlw	32	;' '
  5176  1865  3452               	retlw	82	;'R'
  5177  1866  3465               	retlw	101	;'e'
  5178  1867  3461               	retlw	97	;'a'
  5179  1868  3464               	retlw	100	;'d'
  5180  1869  3400               	retlw	0
  5181                           
  5182                           	psect	stringtext4
  5183  186A                     __pstringtext4:
  5184  186A                     STR_1:
  5185  186A  340A               	retlw	10
  5186  186B  340D               	retlw	13
  5187  186C  3400               	retlw	0
  5188                           
  5189                           	psect	stringtext5
  5190  0000                     __pstringtext5:
  5191                           
  5192                           	psect	cinit
  5193  01B3                     start_initialization:	
  5194                           ; #config settings
  5195                           
  5196  01B3                     __initialization:	;BIGRAM
  5197                           
  5198                           ; Clear objects allocated to BIGRAM
  5199  01B3  30F0               	movlw	low (0+8944)
  5200  01B4  0084               	movwf	4
  5201  01B5  3022               	movlw	high (0+8944)
  5202  01B6  0085               	movwf	5
  5203  01B7  3000               	movlw	0
  5204  01B8  00FE               	movwf	btemp
  5205  01B9  3001               	movlw	1
  5206  01BA  00FF               	movwf	btemp+1
  5207  01BB  3195  25D1  3181   	fcall	clear_ram0
  5208                           
  5209                           ; Clear objects allocated to COMMON
  5210  01BE  01FB               	clrf	__pbssCOMMON& (0+127)
  5211  01BF  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
  5212  01C0  01FD               	clrf	(__pbssCOMMON+2)& (0+127)
  5213                           
  5214                           ; Clear objects allocated to BANK0
  5215  01C1  0020               	movlb	0	; select bank0
  5216  01C2  01E6               	clrf	__pbssBANK0& (0+127)
  5217  01C3  01E7               	clrf	(__pbssBANK0+1)& (0+127)
  5218  01C4  01E8               	clrf	(__pbssBANK0+2)& (0+127)
  5219  01C5  01E9               	clrf	(__pbssBANK0+3)& (0+127)
  5220  01C6  01EA               	clrf	(__pbssBANK0+4)& (0+127)
  5221                           
  5222                           ; Clear objects allocated to BANK1
  5223  01C7  0021               	movlb	1	; select bank1
  5224  01C8  01EA               	clrf	__pbssBANK1& (0+127)
  5225  01C9  01EB               	clrf	(__pbssBANK1+1)& (0+127)
  5226  01CA  01EC               	clrf	(__pbssBANK1+2)& (0+127)
  5227  01CB  01ED               	clrf	(__pbssBANK1+3)& (0+127)
  5228  01CC  01EE               	clrf	(__pbssBANK1+4)& (0+127)
  5229  01CD  01EF               	clrf	(__pbssBANK1+5)& (0+127)
  5230                           
  5231                           ; Clear objects allocated to BANK2
  5232  01CE  3065               	movlw	low __pbssBANK2
  5233  01CF  0084               	movwf	4
  5234  01D0  3001               	movlw	high __pbssBANK2
  5235  01D1  0085               	movwf	5
  5236  01D2  300A               	movlw	10
  5237  01D3  00FE               	movwf	btemp
  5238  01D4  3000               	movlw	0
  5239  01D5  00FF               	movwf	btemp+1
  5240  01D6  3195  25D1  3181   	fcall	clear_ram0
  5241                           
  5242                           ; Clear objects allocated to BANK3
  5243  01D9  30A0               	movlw	low __pbssBANK3
  5244  01DA  0084               	movwf	4
  5245  01DB  3001               	movlw	high __pbssBANK3
  5246  01DC  0085               	movwf	5
  5247  01DD  3032               	movlw	50
  5248  01DE  00FE               	movwf	btemp
  5249  01DF  3000               	movlw	0
  5250  01E0  00FF               	movwf	btemp+1
  5251  01E1  3195  25D1  3181   	fcall	clear_ram0
  5252                           
  5253                           ; Clear objects allocated to BANK4
  5254  01E4  3020               	movlw	low __pbssBANK4
  5255  01E5  0084               	movwf	4
  5256  01E6  3002               	movlw	high __pbssBANK4
  5257  01E7  0085               	movwf	5
  5258  01E8  3040               	movlw	64
  5259  01E9  00FE               	movwf	btemp
  5260  01EA  3000               	movlw	0
  5261  01EB  00FF               	movwf	btemp+1
  5262  01EC  3195  25D1  3181   	fcall	clear_ram0
  5263                           
  5264                           ; Clear objects allocated to BANK5
  5265  01EF  30A0               	movlw	low __pbssBANK5
  5266  01F0  0084               	movwf	4
  5267  01F1  3002               	movlw	high __pbssBANK5
  5268  01F2  0085               	movwf	5
  5269  01F3  3040               	movlw	64
  5270  01F4  00FE               	movwf	btemp
  5271  01F5  3000               	movlw	0
  5272  01F6  00FF               	movwf	btemp+1
  5273  01F7  3195  25D1  3181   	fcall	clear_ram0
  5274  01FA                     end_of_initialization:	
  5275                           ;End of C runtime variable initialization code
  5276                           
  5277  01FA                     __end_of__initialization:
  5278  01FA  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5279  01FB  0020               	movlb	0
  5280  01FC  318B  2BC1         	ljmp	_main	;jump to C main() function
  5281                           
  5282                           	psect	bssCOMMON
  5283  007B                     __pbssCOMMON:
  5284  007B                     _eusart_rx_buff_load_cnt:
  5285  007B                     	ds	1
  5286  007C                     _eusart_tx_sys_active:
  5287  007C                     	ds	1
  5288  007D                     _eusart_tx_buff_full:
  5289  007D                     	ds	1
  5290                           
  5291                           	psect	bssBANK0
  5292  0066                     __pbssBANK0:
  5293  0066                     _flags:
  5294  0066                     	ds	2
  5295  0068                     _eusart_rx_buff_idx:
  5296  0068                     	ds	1
  5297  0069                     _eusart_tx_buff_head:
  5298  0069                     	ds	1
  5299  006A                     _eusart_tx_buff_tail:
  5300  006A                     	ds	1
  5301                           
  5302                           	psect	bssBANK1
  5303  00EA                     __pbssBANK1:
  5304  00EA                     _width:
  5305  00EA                     	ds	2
  5306  00EC                     _prec:
  5307  00EC                     	ds	2
  5308  00EE                     _eusart_rx_sys_active:
  5309  00EE                     	ds	1
  5310  00EF                     _eusart_rx_msg_present:
  5311  00EF                     	ds	1
  5312                           
  5313                           	psect	bssBANK2
  5314  0165                     __pbssBANK2:
  5315  0165                     _sys_time:
  5316  0165                     	ds	4
  5317  0169                     _nout:
  5318  0169                     	ds	2
  5319  016B                     _sys_stat:
  5320  016B                     	ds	1
  5321  016C                     _irdist_result:
  5322  016C                     	ds	1
  5323  016D                     _do_irdist_snsr_read:
  5324  016D                     	ds	1
  5325  016E                     _do_dht11_snsr_read:
  5326  016E                     	ds	1
  5327                           
  5328                           	psect	bssBANK3
  5329  01A0                     __pbssBANK3:
  5330  01A0                     _tmr4:
  5331  01A0                     	ds	13
  5332  01AD                     _dht11_dat_arr:
  5333  01AD                     	ds	5
  5334  01B2                     _dbuf:
  5335  01B2                     	ds	32
  5336                           
  5337                           	psect	bssBANK4
  5338  0220                     __pbssBANK4:
  5339  0220                     _eusart_rx_buff_isr:
  5340  0220                     	ds	64
  5341                           
  5342                           	psect	bssBANK5
  5343  02A0                     __pbssBANK5:
  5344  02A0                     _eusart_rx_buff_use:
  5345  02A0                     	ds	64
  5346                           
  5347                           	psect	clrtext
  5348  15D1                     clear_ram0:	
  5349                           ;	Called with FSR0 containing the base address, and
  5350                           ;	btemp/btemp+1 has the size to clear
  5351                           
  5352  15D1  0064               	clrwdt	;clear the watchdog before getting into this loop
  5353  15D2                     clrloop0:
  5354  15D2  0180               	clrf	0	;clear RAM location pointed to by FSR
  5355  15D3  3101               	addfsr 0,1
  5356  15D4  3001               	movlw	1
  5357  15D5  02FE               	subwf	btemp,f
  5358  15D6  3000               	movlw	0
  5359  15D7  3BFF               	subwfb	btemp+1,f
  5360  15D8  087F               	movf	btemp+1,w
  5361  15D9  047E               	iorwf	btemp,w
  5362  15DA  1D03               	skipz
  5363  15DB  2DD2               	goto	clrloop0	;have we reached the end yet?
  5364  15DC  3400               	retlw	0	;all done for this memory range, return
  5365                           
  5366                           	psect	cstackBANK2
  5367  0120                     __pcstackBANK2:
  5368  0120                     main@msg_buff:
  5369                           
  5370                           ; 64 bytes @ 0x0
  5371  0120                     	ds	65
  5372  0161                     main@sys_time_act:
  5373                           
  5374                           ; 4 bytes @ 0x41
  5375  0161                     	ds	4
  5376                           
  5377                           	psect	cstackBANK1
  5378  00A0                     __pcstackBANK1:
  5379  00A0                     ??_vfpfcnvrt:
  5380  00A0                     load_tx_msg_str_crlf@new_buff:	
  5381                           ; 1 bytes @ 0x0
  5382                           
  5383                           
  5384                           ; 64 bytes @ 0x0
  5385  00A0                     	ds	6
  5386  00A6                     vfpfcnvrt@ll:
  5387                           
  5388                           ; 8 bytes @ 0x6
  5389  00A6                     	ds	8
  5390  00AE                     vfpfcnvrt@llu:
  5391                           
  5392                           ; 8 bytes @ 0xE
  5393  00AE                     	ds	8
  5394  00B6                     vfpfcnvrt@c:
  5395                           
  5396                           ; 1 bytes @ 0x16
  5397  00B6                     	ds	1
  5398  00B7                     vfpfcnvrt@done:
  5399                           
  5400                           ; 2 bytes @ 0x17
  5401  00B7                     	ds	2
  5402  00B9                     _vfpfcnvrt$1438:
  5403                           
  5404                           ; 2 bytes @ 0x19
  5405  00B9                     	ds	2
  5406  00BB                     vfpfcnvrt@fp:
  5407                           
  5408                           ; 1 bytes @ 0x1B
  5409  00BB                     	ds	1
  5410  00BC                     ?_vfprintf:
  5411  00BC                     vfprintf@fmt:	
  5412                           ; 2 bytes @ 0x1C
  5413                           
  5414                           
  5415                           ; 2 bytes @ 0x1C
  5416  00BC                     	ds	2
  5417  00BE                     vfprintf@ap:
  5418                           
  5419                           ; 1 bytes @ 0x1E
  5420  00BE                     	ds	1
  5421  00BF                     ??_vfprintf:
  5422                           
  5423                           ; 1 bytes @ 0x1F
  5424  00BF                     	ds	2
  5425  00C1                     vfprintf@fp:
  5426                           
  5427                           ; 1 bytes @ 0x21
  5428  00C1                     	ds	1
  5429  00C2                     vfprintf@cfmt:
  5430                           
  5431                           ; 2 bytes @ 0x22
  5432  00C2                     	ds	2
  5433  00C4                     ?_sprintf:
  5434  00C4                     sprintf@fmt:	
  5435                           ; 2 bytes @ 0x24
  5436                           
  5437                           
  5438                           ; 2 bytes @ 0x24
  5439  00C4                     	ds	10
  5440  00CE                     ??_sprintf:
  5441                           
  5442                           ; 1 bytes @ 0x2E
  5443  00CE                     	ds	3
  5444  00D1                     sprintf@s:
  5445                           
  5446                           ; 1 bytes @ 0x31
  5447  00D1                     	ds	1
  5448  00D2                     sprintf@ap:
  5449                           
  5450                           ; 1 bytes @ 0x32
  5451  00D2                     	ds	1
  5452  00D3                     sprintf@f:
  5453                           
  5454                           ; 5 bytes @ 0x33
  5455  00D3                     	ds	14
  5456  00E1                     load_tx_msg_str_crlf@in_bytes:
  5457                           
  5458                           ; 1 bytes @ 0x41
  5459  00E1                     	ds	1
  5460  00E2                     ??_main:
  5461                           
  5462                           ; 1 bytes @ 0x42
  5463  00E2                     	ds	8
  5464                           
  5465                           	psect	cstackCOMMON
  5466  0070                     __pcstackCOMMON:
  5467  0070                     ?_SetupClk:
  5468  0070                     ?_SysInit:	
  5469                           ; 1 bytes @ 0x0
  5470                           
  5471  0070                     ?_make_all_digital:	
  5472                           ; 1 bytes @ 0x0
  5473                           
  5474  0070                     ?_putch:	
  5475                           ; 1 bytes @ 0x0
  5476                           
  5477  0070                     ?_load_tx_msg_str_crlf:	
  5478                           ; 1 bytes @ 0x0
  5479                           
  5480  0070                     ?_setup_dht11_snsr:	
  5481                           ; 1 bytes @ 0x0
  5482                           
  5483  0070                     ?_read_dht11_dat:	
  5484                           ; 1 bytes @ 0x0
  5485                           
  5486  0070                     ?_setup_irdist_snsr:	
  5487                           ; 1 bytes @ 0x0
  5488                           
  5489  0070                     ?_read_irdist_dat:	
  5490                           ; 1 bytes @ 0x0
  5491                           
  5492  0070                     ?_main:	
  5493                           ; 1 bytes @ 0x0
  5494                           
  5495  0070                     ?_Isr:	
  5496                           ; 1 bytes @ 0x0
  5497                           
  5498  0070                     ?___llmod:	
  5499                           ; 1 bytes @ 0x0
  5500                           
  5501  0070                     putch@c:	
  5502                           ; 4 bytes @ 0x0
  5503                           
  5504  0070                     ___llmod@divisor:	
  5505                           ; 1 bytes @ 0x0
  5506                           
  5507                           
  5508                           ; 4 bytes @ 0x0
  5509  0070                     	ds	4
  5510  0074                     ___llmod@dividend:
  5511                           
  5512                           ; 4 bytes @ 0x4
  5513  0074                     	ds	4
  5514  0078                     ??___llmod:
  5515                           
  5516                           ; 1 bytes @ 0x8
  5517  0078                     	ds	1
  5518  0079                     ___llmod@counter:
  5519                           
  5520                           ; 1 bytes @ 0x9
  5521  0079                     	ds	1
  5522  007A                     ??_Isr:
  5523                           
  5524                           ; 1 bytes @ 0xA
  5525  007A                     	ds	1
  5526                           
  5527                           	psect	cstackBANK0
  5528  0020                     __pcstackBANK0:
  5529  0020                     Isr@rx_frm_error:
  5530                           
  5531                           ; 1 bytes @ 0x0
  5532  0020                     	ds	1
  5533  0021                     Isr@rx_or_error:
  5534                           
  5535                           ; 1 bytes @ 0x1
  5536  0021                     	ds	1
  5537  0022                     Isr@rx_val:
  5538                           
  5539                           ; 1 bytes @ 0x2
  5540  0022                     	ds	1
  5541  0023                     Isr@i:
  5542                           
  5543                           ; 1 bytes @ 0x3
  5544  0023                     	ds	1
  5545  0024                     Isr@i_885:
  5546                           
  5547                           ; 1 bytes @ 0x4
  5548  0024                     	ds	1
  5549  0025                     ?_TmrDisable:
  5550  0025                     ??_SetupClk:	
  5551                           ; 1 bytes @ 0x5
  5552                           
  5553  0025                     ??_make_all_digital:	
  5554                           ; 1 bytes @ 0x5
  5555                           
  5556  0025                     ??_putch:	
  5557                           ; 1 bytes @ 0x5
  5558                           
  5559  0025                     ?_TmrEnable:	
  5560                           ; 1 bytes @ 0x5
  5561                           
  5562  0025                     ??_setup_dht11_snsr:	
  5563                           ; 1 bytes @ 0x5
  5564                           
  5565  0025                     ??_read_dht11_dat:	
  5566                           ; 1 bytes @ 0x5
  5567                           
  5568  0025                     ??_setup_irdist_snsr:	
  5569                           ; 1 bytes @ 0x5
  5570                           
  5571  0025                     ??_read_irdist_dat:	
  5572                           ; 1 bytes @ 0x5
  5573                           
  5574  0025                     ?_strlen:	
  5575                           ; 1 bytes @ 0x5
  5576                           
  5577  0025                     ?_fputc:	
  5578                           ; 2 bytes @ 0x5
  5579                           
  5580  0025                     ?_isupper:	
  5581                           ; 2 bytes @ 0x5
  5582                           
  5583  0025                     ?_isalpha:	
  5584                           ; 2 bytes @ 0x5
  5585                           
  5586  0025                     ?_isdigit:	
  5587                           ; 2 bytes @ 0x5
  5588                           
  5589  0025                     ?_isspace:	
  5590                           ; 2 bytes @ 0x5
  5591                           
  5592  0025                     ?_islower:	
  5593                           ; 2 bytes @ 0x5
  5594                           
  5595  0025                     ?___wmul:	
  5596                           ; 2 bytes @ 0x5
  5597                           
  5598  0025                     ?___lldiv:	
  5599                           ; 2 bytes @ 0x5
  5600                           
  5601  0025                     ?___aodiv:	
  5602                           ; 4 bytes @ 0x5
  5603                           
  5604  0025                     ?___aomod:	
  5605                           ; 8 bytes @ 0x5
  5606                           
  5607  0025                     setup_irdist_snsr@use_extint:	
  5608                           ; 8 bytes @ 0x5
  5609                           
  5610  0025                     ___wmul@multiplier:	
  5611                           ; 1 bytes @ 0x5
  5612                           
  5613  0025                     isalpha@c:	
  5614                           ; 2 bytes @ 0x5
  5615                           
  5616  0025                     isdigit@c:	
  5617                           ; 2 bytes @ 0x5
  5618                           
  5619  0025                     isspace@c:	
  5620                           ; 2 bytes @ 0x5
  5621                           
  5622  0025                     isupper@c:	
  5623                           ; 2 bytes @ 0x5
  5624                           
  5625  0025                     fputc@c:	
  5626                           ; 2 bytes @ 0x5
  5627                           
  5628  0025                     strlen@s:	
  5629                           ; 2 bytes @ 0x5
  5630                           
  5631  0025                     islower@c:	
  5632                           ; 2 bytes @ 0x5
  5633                           
  5634  0025                     ___lldiv@divisor:	
  5635                           ; 2 bytes @ 0x5
  5636                           
  5637  0025                     ___aodiv@divisor:	
  5638                           ; 4 bytes @ 0x5
  5639                           
  5640  0025                     ___aomod@divisor:	
  5641                           ; 8 bytes @ 0x5
  5642                           
  5643  0025                     TmrEnable@Mod:	
  5644                           ; 8 bytes @ 0x5
  5645                           
  5646  0025                     TmrDisable@Mod:	
  5647                           ; 13 bytes @ 0x5
  5648                           
  5649                           
  5650                           ; 13 bytes @ 0x5
  5651  0025                     	ds	2
  5652  0027                     ??_strlen:
  5653  0027                     ??_isupper:	
  5654                           ; 1 bytes @ 0x7
  5655                           
  5656  0027                     ??_isalpha:	
  5657                           ; 1 bytes @ 0x7
  5658                           
  5659  0027                     ??_isdigit:	
  5660                           ; 1 bytes @ 0x7
  5661                           
  5662  0027                     ??_isspace:	
  5663                           ; 1 bytes @ 0x7
  5664                           
  5665  0027                     ??_islower:	
  5666                           ; 1 bytes @ 0x7
  5667                           
  5668  0027                     fputc@fp:	
  5669                           ; 1 bytes @ 0x7
  5670                           
  5671  0027                     ___wmul@multiplicand:	
  5672                           ; 1 bytes @ 0x7
  5673                           
  5674  0027                     strlen@a:	
  5675                           ; 2 bytes @ 0x7
  5676                           
  5677                           
  5678                           ; 2 bytes @ 0x7
  5679  0027                     	ds	1
  5680  0028                     ??_fputc:
  5681                           
  5682                           ; 1 bytes @ 0x8
  5683  0028                     	ds	1
  5684  0029                     ?_strcpy:
  5685  0029                     ?_load_tx_msg_str:	
  5686                           ; 1 bytes @ 0x9
  5687                           
  5688  0029                     ??___wmul:	
  5689                           ; 1 bytes @ 0x9
  5690                           
  5691  0029                     _isspace$1486:	
  5692                           ; 1 bytes @ 0x9
  5693                           
  5694  0029                     load_tx_msg_str@in_bytes:	
  5695                           ; 1 bytes @ 0x9
  5696                           
  5697  0029                     ___wmul@product:	
  5698                           ; 2 bytes @ 0x9
  5699                           
  5700  0029                     strcpy@src:	
  5701                           ; 2 bytes @ 0x9
  5702                           
  5703  0029                     ___lldiv@dividend:	
  5704                           ; 2 bytes @ 0x9
  5705                           
  5706                           
  5707                           ; 4 bytes @ 0x9
  5708  0029                     	ds	2
  5709  002B                     ??_strcpy:
  5710  002B                     ??_load_tx_msg_str:	
  5711                           ; 1 bytes @ 0xB
  5712                           
  5713  002B                     ?_toupper:	
  5714                           ; 1 bytes @ 0xB
  5715                           
  5716  002B                     ?_atoi:	
  5717                           ; 2 bytes @ 0xB
  5718                           
  5719  002B                     atoi@s:	
  5720                           ; 2 bytes @ 0xB
  5721                           
  5722  002B                     toupper@c:	
  5723                           ; 2 bytes @ 0xB
  5724                           
  5725                           
  5726                           ; 2 bytes @ 0xB
  5727  002B                     	ds	2
  5728  002D                     ??_toupper:
  5729  002D                     ??_atoi:	
  5730                           ; 1 bytes @ 0xD
  5731                           
  5732  002D                     ??___lldiv:	
  5733                           ; 1 bytes @ 0xD
  5734                           
  5735  002D                     ?_fputs:	
  5736                           ; 1 bytes @ 0xD
  5737                           
  5738  002D                     fputs@fp:	
  5739                           ; 2 bytes @ 0xD
  5740                           
  5741  002D                     strcpy@s:	
  5742                           ; 1 bytes @ 0xD
  5743                           
  5744  002D                     ___aodiv@dividend:	
  5745                           ; 2 bytes @ 0xD
  5746                           
  5747  002D                     ___aomod@dividend:	
  5748                           ; 8 bytes @ 0xD
  5749                           
  5750                           
  5751                           ; 8 bytes @ 0xD
  5752  002D                     	ds	1
  5753  002E                     ??_fputs:
  5754  002E                     ___lldiv@quotient:	
  5755                           ; 1 bytes @ 0xE
  5756                           
  5757                           
  5758                           ; 4 bytes @ 0xE
  5759  002E                     	ds	1
  5760  002F                     strcpy@d:
  5761                           
  5762                           ; 1 bytes @ 0xF
  5763  002F                     	ds	1
  5764  0030                     load_tx_msg_str@i:
  5765  0030                     strcpy@dest:	
  5766                           ; 1 bytes @ 0x10
  5767                           
  5768                           
  5769                           ; 1 bytes @ 0x10
  5770  0030                     	ds	1
  5771  0031                     ?_strcat:
  5772  0031                     fputs@c:	
  5773                           ; 1 bytes @ 0x11
  5774                           
  5775  0031                     atoi@neg:	
  5776                           ; 1 bytes @ 0x11
  5777                           
  5778  0031                     strcat@src:	
  5779                           ; 2 bytes @ 0x11
  5780                           
  5781  0031                     _toupper$1555:	
  5782                           ; 2 bytes @ 0x11
  5783                           
  5784                           
  5785                           ; 2 bytes @ 0x11
  5786  0031                     	ds	1
  5787  0032                     ??_TmrDisable:
  5788  0032                     ??_TmrEnable:	
  5789                           ; 1 bytes @ 0x12
  5790                           
  5791  0032                     ___lldiv@counter:	
  5792                           ; 1 bytes @ 0x12
  5793                           
  5794  0032                     fputs@i:	
  5795                           ; 1 bytes @ 0x12
  5796                           
  5797                           
  5798                           ; 2 bytes @ 0x12
  5799  0032                     	ds	1
  5800  0033                     ??_strcat:
  5801  0033                     ?_TmrSetup:	
  5802                           ; 1 bytes @ 0x13
  5803                           
  5804  0033                     ?_EUSARTSetup:	
  5805                           ; 1 bytes @ 0x13
  5806                           
  5807  0033                     read_dht11_dat@laststate:	
  5808                           ; 1 bytes @ 0x13
  5809                           
  5810  0033                     _atoi$1459:	
  5811                           ; 1 bytes @ 0x13
  5812                           
  5813  0033                     EUSARTSetup@set_baud:	
  5814                           ; 2 bytes @ 0x13
  5815                           
  5816  0033                     TmrSetup@Mod:	
  5817                           ; 4 bytes @ 0x13
  5818                           
  5819                           
  5820                           ; 13 bytes @ 0x13
  5821  0033                     	ds	1
  5822  0034                     read_dht11_dat@run_stat:
  5823  0034                     fputs@s:	
  5824                           ; 1 bytes @ 0x14
  5825                           
  5826                           
  5827                           ; 1 bytes @ 0x14
  5828  0034                     	ds	1
  5829  0035                     ??___aodiv:
  5830  0035                     ??___aomod:	
  5831                           ; 1 bytes @ 0x15
  5832                           
  5833  0035                     ?_pad:	
  5834                           ; 1 bytes @ 0x15
  5835                           
  5836  0035                     read_dht11_dat@j:	
  5837                           ; 2 bytes @ 0x15
  5838                           
  5839  0035                     pad@buf:	
  5840                           ; 1 bytes @ 0x15
  5841                           
  5842  0035                     strcat@dest:	
  5843                           ; 1 bytes @ 0x15
  5844                           
  5845  0035                     _atoi$1461:	
  5846                           ; 1 bytes @ 0x15
  5847                           
  5848                           
  5849                           ; 2 bytes @ 0x15
  5850  0035                     	ds	1
  5851  0036                     ??_load_tx_msg_str_crlf:
  5852  0036                     read_dht11_dat@counter:	
  5853                           ; 1 bytes @ 0x16
  5854                           
  5855  0036                     ___aodiv@counter:	
  5856                           ; 1 bytes @ 0x16
  5857                           
  5858  0036                     ___aomod@counter:	
  5859                           ; 1 bytes @ 0x16
  5860                           
  5861  0036                     pad@p:	
  5862                           ; 1 bytes @ 0x16
  5863                           
  5864                           
  5865                           ; 2 bytes @ 0x16
  5866  0036                     	ds	1
  5867  0037                     EUSARTSetup@use_tx:
  5868  0037                     read_dht11_dat@i:	
  5869                           ; 1 bytes @ 0x17
  5870                           
  5871  0037                     ___aodiv@sign:	
  5872                           ; 1 bytes @ 0x17
  5873                           
  5874  0037                     ___aomod@sign:	
  5875                           ; 1 bytes @ 0x17
  5876                           
  5877  0037                     _atoi$1460:	
  5878                           ; 1 bytes @ 0x17
  5879                           
  5880                           
  5881                           ; 1 bytes @ 0x17
  5882  0037                     	ds	1
  5883  0038                     ??_pad:
  5884  0038                     ?_abs:	
  5885                           ; 1 bytes @ 0x18
  5886                           
  5887  0038                     EUSARTSetup@use_rx:	
  5888                           ; 2 bytes @ 0x18
  5889                           
  5890  0038                     abs@a:	
  5891                           ; 1 bytes @ 0x18
  5892                           
  5893  0038                     atoi@n:	
  5894                           ; 2 bytes @ 0x18
  5895                           
  5896  0038                     ___aodiv@quotient:	
  5897                           ; 2 bytes @ 0x18
  5898                           
  5899                           
  5900                           ; 8 bytes @ 0x18
  5901  0038                     	ds	1
  5902  0039                     ??_EUSARTSetup:
  5903  0039                     pad@i:	
  5904                           ; 1 bytes @ 0x19
  5905                           
  5906                           
  5907                           ; 2 bytes @ 0x19
  5908  0039                     	ds	1
  5909  003A                     ??_abs:
  5910                           
  5911                           ; 1 bytes @ 0x1A
  5912  003A                     	ds	1
  5913  003B                     pad@w:
  5914                           
  5915                           ; 2 bytes @ 0x1B
  5916  003B                     	ds	2
  5917  003D                     pad@fp:
  5918  003D                     EUSARTSetup@i:	
  5919                           ; 1 bytes @ 0x1D
  5920                           
  5921                           
  5922                           ; 2 bytes @ 0x1D
  5923  003D                     	ds	1
  5924  003E                     ?_xtoa:
  5925  003E                     xtoa@d:	
  5926                           ; 2 bytes @ 0x1E
  5927                           
  5928                           
  5929                           ; 8 bytes @ 0x1E
  5930  003E                     	ds	1
  5931  003F                     EUSARTSetup@i_239:
  5932                           
  5933                           ; 1 bytes @ 0x1F
  5934  003F                     	ds	1
  5935  0040                     ?_dtoa:
  5936  0040                     TmrSetup@tmr_freq:	
  5937                           ; 2 bytes @ 0x20
  5938                           
  5939  0040                     EUSARTSetup@regVal:	
  5940                           ; 2 bytes @ 0x20
  5941                           
  5942  0040                     dtoa@d:	
  5943                           ; 4 bytes @ 0x20
  5944                           
  5945                           
  5946                           ; 8 bytes @ 0x20
  5947  0040                     	ds	2
  5948  0042                     TmrSetup@use_int:
  5949                           
  5950                           ; 1 bytes @ 0x22
  5951  0042                     	ds	1
  5952  0043                     ??_TmrSetup:
  5953                           
  5954                           ; 1 bytes @ 0x23
  5955  0043                     	ds	3
  5956  0046                     xtoa@x:
  5957                           
  5958                           ; 1 bytes @ 0x26
  5959  0046                     	ds	1
  5960  0047                     ??_xtoa:
  5961  0047                     TmrSetup@prescalarVal:	
  5962                           ; 1 bytes @ 0x27
  5963                           
  5964                           
  5965                           ; 1 bytes @ 0x27
  5966  0047                     	ds	1
  5967  0048                     ??_dtoa:
  5968  0048                     TmrSetup@regVal:	
  5969                           ; 1 bytes @ 0x28
  5970                           
  5971                           
  5972                           ; 4 bytes @ 0x28
  5973  0048                     	ds	3
  5974  004B                     dtoa@fp:
  5975                           
  5976                           ; 1 bytes @ 0x2B
  5977  004B                     	ds	1
  5978  004C                     ??_SysInit:
  5979  004C                     _dtoa$1412:	
  5980                           ; 1 bytes @ 0x2C
  5981                           
  5982                           
  5983                           ; 2 bytes @ 0x2C
  5984  004C                     	ds	2
  5985  004E                     dtoa@p:
  5986                           
  5987                           ; 2 bytes @ 0x2E
  5988  004E                     	ds	1
  5989  004F                     xtoa@fp:
  5990                           
  5991                           ; 1 bytes @ 0x2F
  5992  004F                     	ds	1
  5993  0050                     dtoa@w:
  5994  0050                     _xtoa$1423:	
  5995                           ; 2 bytes @ 0x30
  5996                           
  5997                           
  5998                           ; 2 bytes @ 0x30
  5999  0050                     	ds	2
  6000  0052                     dtoa@s:
  6001  0052                     _xtoa$1424:	
  6002                           ; 2 bytes @ 0x32
  6003                           
  6004                           
  6005                           ; 2 bytes @ 0x32
  6006  0052                     	ds	2
  6007  0054                     xtoa@p:
  6008  0054                     dtoa@n:	
  6009                           ; 2 bytes @ 0x34
  6010                           
  6011                           
  6012                           ; 8 bytes @ 0x34
  6013  0054                     	ds	2
  6014  0056                     xtoa@w:
  6015                           
  6016                           ; 2 bytes @ 0x36
  6017  0056                     	ds	2
  6018  0058                     xtoa@n:
  6019                           
  6020                           ; 8 bytes @ 0x38
  6021  0058                     	ds	4
  6022  005C                     dtoa@i:
  6023                           
  6024                           ; 2 bytes @ 0x3C
  6025  005C                     	ds	4
  6026  0060                     xtoa@i:
  6027                           
  6028                           ; 2 bytes @ 0x40
  6029  0060                     	ds	2
  6030  0062                     xtoa@c:
  6031                           
  6032                           ; 2 bytes @ 0x42
  6033  0062                     	ds	2
  6034  0064                     ?_vfpfcnvrt:
  6035  0064                     vfpfcnvrt@fmt:	
  6036                           ; 2 bytes @ 0x44
  6037                           
  6038                           
  6039                           ; 1 bytes @ 0x44
  6040  0064                     	ds	1
  6041  0065                     vfpfcnvrt@ap:
  6042                           
  6043                           ; 1 bytes @ 0x45
  6044  0065                     	ds	1
  6045                           
  6046                           	psect	maintext
  6047  0BC1                     __pmaintext:	
  6048 ;;
  6049 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  6050 ;;
  6051 ;; *************** function _main *****************
  6052 ;; Defined at:
  6053 ;;		line 13 in file "main.c"
  6054 ;; Parameters:    Size  Location     Type
  6055 ;;		None
  6056 ;; Auto vars:     Size  Location     Type
  6057 ;;  msg_buff       64    0[BANK2 ] unsigned char [64]
  6058 ;;  sys_time_act    4   65[BANK2 ] unsigned long 
  6059 ;;  byte_acc        1    0        unsigned char 
  6060 ;; Return value:  Size  Location     Type
  6061 ;;                  1    wreg      void 
  6062 ;; Registers used:
  6063 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6064 ;; Tracked objects:
  6065 ;;		On entry : B1F/0
  6066 ;;		On exit  : 0/0
  6067 ;;		Unchanged: 0/0
  6068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6070 ;;      Locals:         0       0       0      69       0       0       0       0       0       0       0       0       
      +0       0
  6071 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6072 ;;      Totals:         0       0       8      69       0       0       0       0       0       0       0       0       
      +0       0
  6073 ;;Total ram usage:       77 bytes
  6074 ;; Hardware stack levels required when called:   10
  6075 ;; This function calls:
  6076 ;;		_SetupClk
  6077 ;;		_SysInit
  6078 ;;		___lldiv
  6079 ;;		_load_tx_msg_str_crlf
  6080 ;;		_read_dht11_dat
  6081 ;;		_read_irdist_dat
  6082 ;;		_sprintf
  6083 ;; This function is called by:
  6084 ;;		Startup code after reset
  6085 ;; This function uses a non-reentrant model
  6086 ;;
  6087                           
  6088                           
  6089                           ;psect for function _main
  6090  0BC1                     _main:
  6091  0BC1                     l4015:	
  6092                           ;incstack = 0
  6093                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6094                           
  6095                           
  6096                           ;main.c: 15:     SetupClk();
  6097  0BC1  3195  25DD  318B   	fcall	_SetupClk
  6098  0BC4                     l4017:
  6099                           
  6100                           ;main.c: 17:     if(STAT_SUCCESS != SysInit())
  6101  0BC4  3189  2157  318B   	fcall	_SysInit
  6102  0BC7  3A00               	xorlw	0
  6103  0BC8  1903               	skipnz
  6104  0BC9  2BCB               	goto	u5001
  6105  0BCA  2BCC               	goto	u5000
  6106  0BCB                     u5001:
  6107  0BCB  2BCD               	goto	l4021
  6108  0BCC                     u5000:
  6109  0BCC  2CA6               	goto	l224
  6110  0BCD                     l4021:
  6111  0BCD                     l4023:
  6112                           
  6113                           ;main.c: 29:     char msg_buff[64];;main.c: 30:     uint32_t sys_time_act;;main.c: 32:  
      +                             sprintf(msg_buff,"System Init Complete, System Status: 0x%02X, Beginning Loop",sys_st
      +                          at);
  6114  0BCD  3000               	movlw	low (STR_2| (0+32768))
  6115  0BCE  0021               	movlb	1	; select bank1
  6116  0BCF  00C4               	movwf	sprintf@fmt^(0+128)
  6117  0BD0  3098               	movlw	high (STR_2| (0+32768))
  6118  0BD1  00C5               	movwf	(sprintf@fmt^(0+128)+1)
  6119  0BD2  0022               	movlb	2	; select bank2
  6120  0BD3  086B               	movf	_sys_stat^(0+256),w	;volatile
  6121  0BD4  0021               	movlb	1	; select bank1
  6122  0BD5  00E2               	movwf	??_main^(0+128)
  6123  0BD6  01E3               	clrf	(??_main^(0+128)+1)
  6124  0BD7  0862               	movf	??_main^(0+128),w
  6125  0BD8  00C6               	movwf	(?_sprintf^(0+128)+2)
  6126  0BD9  0863               	movf	(??_main+1)^(0+128),w
  6127  0BDA  00C7               	movwf	((?_sprintf+1)^(0+128)+2)
  6128  0BDB  3020               	movlw	(low (main@msg_buff| (0+256)))& (0+255)
  6129  0BDC  3197  2718  318B   	fcall	_sprintf
  6130  0BDF                     l4025:
  6131                           
  6132                           ;main.c: 33:     load_tx_msg_str_crlf(msg_buff);
  6133  0BDF  3020               	movlw	(low (main@msg_buff| (0+256)))& (0+255)
  6134  0BE0  3197  27C0  318B   	fcall	_load_tx_msg_str_crlf
  6135  0BE3                     l225:	
  6136                           ;main.c: 37:     while(1){
  6137                           
  6138  0BE3  0064               	clrwdt	;# 
  6139  0BE4                     l4027:
  6140                           
  6141                           ;main.c: 46:         if(do_dht11_snsr_read){
  6142  0BE4  0022               	movlb	2	; select bank2
  6143  0BE5  086E               	movf	_do_dht11_snsr_read^(0+256),w
  6144  0BE6  1903               	btfsc	3,2
  6145  0BE7  2BE9               	goto	u5011
  6146  0BE8  2BEA               	goto	u5010
  6147  0BE9                     u5011:
  6148  0BE9  2C5D               	goto	l4039
  6149  0BEA                     u5010:
  6150  0BEA                     l4029:
  6151                           
  6152                           ;main.c: 47:             do_dht11_snsr_read = 0;
  6153  0BEA  01EE               	clrf	_do_dht11_snsr_read^(0+256)
  6154  0BEB                     l4031:
  6155                           
  6156                           ;main.c: 48:             sprintf(msg_buff,"%d: Starting Data Read",sys_time/1000);
  6157  0BEB  3053               	movlw	low (STR_3| (0+32768))
  6158  0BEC  0021               	movlb	1	; select bank1
  6159  0BED  00C4               	movwf	sprintf@fmt^(0+128)
  6160  0BEE  3098               	movlw	high (STR_3| (0+32768))
  6161  0BEF  00C5               	movwf	(sprintf@fmt^(0+128)+1)
  6162  0BF0  3000               	movlw	0
  6163  0BF1  0020               	movlb	0	; select bank0
  6164  0BF2  00A8               	movwf	___lldiv@divisor+3
  6165  0BF3  3000               	movlw	0
  6166  0BF4  00A7               	movwf	___lldiv@divisor+2
  6167  0BF5  3003               	movlw	3
  6168  0BF6  00A6               	movwf	___lldiv@divisor+1
  6169  0BF7  30E8               	movlw	232
  6170  0BF8  00A5               	movwf	___lldiv@divisor
  6171  0BF9  0022               	movlb	2	; select bank2
  6172  0BFA  0868               	movf	(_sys_time+3)^(0+256),w	;volatile
  6173  0BFB  0020               	movlb	0	; select bank0
  6174  0BFC  00AC               	movwf	___lldiv@dividend+3
  6175  0BFD  0022               	movlb	2	; select bank2
  6176  0BFE  0867               	movf	(_sys_time+2)^(0+256),w	;volatile
  6177  0BFF  0020               	movlb	0	; select bank0
  6178  0C00  00AB               	movwf	___lldiv@dividend+2
  6179  0C01  0022               	movlb	2	; select bank2
  6180  0C02  0866               	movf	(_sys_time+1)^(0+256),w	;volatile
  6181  0C03  0020               	movlb	0	; select bank0
  6182  0C04  00AA               	movwf	___lldiv@dividend+1
  6183  0C05  0022               	movlb	2	; select bank2
  6184  0C06  0865               	movf	_sys_time^(0+256),w	;volatile
  6185  0C07  0020               	movlb	0	; select bank0
  6186  0C08  00A9               	movwf	___lldiv@dividend
  6187  0C09  3188  20FC  318B   	fcall	___lldiv
  6188  0C0C  0020               	movlb	0	; select bank0
  6189  0C0D  0828               	movf	?___lldiv+3,w
  6190  0C0E  0021               	movlb	1	; select bank1
  6191  0C0F  00C9               	movwf	((?_sprintf+3)^(0+128)+2)
  6192  0C10  0020               	movlb	0	; select bank0
  6193  0C11  0827               	movf	?___lldiv+2,w
  6194  0C12  0021               	movlb	1	; select bank1
  6195  0C13  00C8               	movwf	((?_sprintf+2)^(0+128)+2)
  6196  0C14  0020               	movlb	0	; select bank0
  6197  0C15  0826               	movf	?___lldiv+1,w
  6198  0C16  0021               	movlb	1	; select bank1
  6199  0C17  00C7               	movwf	((?_sprintf+1)^(0+128)+2)
  6200  0C18  0020               	movlb	0	; select bank0
  6201  0C19  0825               	movf	?___lldiv,w
  6202  0C1A  0021               	movlb	1	; select bank1
  6203  0C1B  00C6               	movwf	(?_sprintf^(0+128)+2)
  6204  0C1C  3020               	movlw	(low (main@msg_buff| (0+256)))& (0+255)
  6205  0C1D  3197  2718  318B   	fcall	_sprintf
  6206  0C20                     l4033:
  6207                           
  6208                           ;main.c: 49:             load_tx_msg_str_crlf(msg_buff);
  6209  0C20  3020               	movlw	(low (main@msg_buff| (0+256)))& (0+255)
  6210  0C21  3197  27C0  318B   	fcall	_load_tx_msg_str_crlf
  6211  0C24                     l4035:
  6212                           
  6213                           ;main.c: 51:             if(read_dht11_dat() == STAT_SUCCESS){
  6214  0C24  3187  2735  318B   	fcall	_read_dht11_dat
  6215  0C27  3A00               	xorlw	0
  6216  0C28  1D03               	skipz
  6217  0C29  2C2B               	goto	u5021
  6218  0C2A  2C2C               	goto	u5020
  6219  0C2B                     u5021:
  6220  0C2B  2C5D               	goto	l4039
  6221  0C2C                     u5020:
  6222  0C2C                     l4037:
  6223                           
  6224                           ;main.c: 52:                 sprintf(msg_buff,"H = %d.%d%% T = %d.%dC",dht11_dat_arr[0],
      +                          dht11_dat_arr[1],dht11_dat_arr[2],dht11_dat_arr[3]);
  6225  0C2C  303C               	movlw	low (STR_4| (0+32768))
  6226  0C2D  0021               	movlb	1	; select bank1
  6227  0C2E  00C4               	movwf	sprintf@fmt^(0+128)
  6228  0C2F  3098               	movlw	high (STR_4| (0+32768))
  6229  0C30  00C5               	movwf	(sprintf@fmt^(0+128)+1)
  6230  0C31  0023               	movlb	3	; select bank3
  6231  0C32  082D               	movf	_dht11_dat_arr^(0+384),w
  6232  0C33  0021               	movlb	1	; select bank1
  6233  0C34  00E2               	movwf	??_main^(0+128)
  6234  0C35  01E3               	clrf	(??_main^(0+128)+1)
  6235  0C36  0862               	movf	??_main^(0+128),w
  6236  0C37  00C6               	movwf	(?_sprintf^(0+128)+2)
  6237  0C38  0863               	movf	(??_main+1)^(0+128),w
  6238  0C39  00C7               	movwf	((?_sprintf+1)^(0+128)+2)
  6239  0C3A  0023               	movlb	3	; select bank3
  6240  0C3B  082E               	movf	(_dht11_dat_arr^(0+384)+1),w
  6241  0C3C  0021               	movlb	1	; select bank1
  6242  0C3D  00E4               	movwf	(??_main+2)^(0+128)
  6243  0C3E  01E5               	clrf	((??_main+2)^(0+128)+1)
  6244  0C3F  0864               	movf	(??_main+2)^(0+128),w
  6245  0C40  00C8               	movwf	(?_sprintf^(0+128)+4)
  6246  0C41  0865               	movf	(??_main+3)^(0+128),w
  6247  0C42  00C9               	movwf	((?_sprintf+1)^(0+128)+4)
  6248  0C43  0023               	movlb	3	; select bank3
  6249  0C44  082F               	movf	(_dht11_dat_arr^(0+384)+2),w
  6250  0C45  0021               	movlb	1	; select bank1
  6251  0C46  00E6               	movwf	(??_main+4)^(0+128)
  6252  0C47  01E7               	clrf	((??_main+4)^(0+128)+1)
  6253  0C48  0866               	movf	(??_main+4)^(0+128),w
  6254  0C49  00CA               	movwf	(?_sprintf^(0+128)+6)
  6255  0C4A  0867               	movf	(??_main+5)^(0+128),w
  6256  0C4B  00CB               	movwf	((?_sprintf+1)^(0+128)+6)
  6257  0C4C  0023               	movlb	3	; select bank3
  6258  0C4D  0830               	movf	(_dht11_dat_arr^(0+384)+3),w
  6259  0C4E  0021               	movlb	1	; select bank1
  6260  0C4F  00E8               	movwf	(??_main+6)^(0+128)
  6261  0C50  01E9               	clrf	((??_main+6)^(0+128)+1)
  6262  0C51  0868               	movf	(??_main+6)^(0+128),w
  6263  0C52  00CC               	movwf	(?_sprintf^(0+128)+8)
  6264  0C53  0869               	movf	(??_main+7)^(0+128),w
  6265  0C54  00CD               	movwf	((?_sprintf+1)^(0+128)+8)
  6266  0C55  3020               	movlw	(low (main@msg_buff| (0+256)))& (0+255)
  6267  0C56  3197  2718  318B   	fcall	_sprintf
  6268                           
  6269                           ;main.c: 53:                 load_tx_msg_str_crlf(msg_buff);
  6270  0C59  3020               	movlw	(low (main@msg_buff| (0+256)))& (0+255)
  6271  0C5A  3197  27C0  318B   	fcall	_load_tx_msg_str_crlf
  6272  0C5D                     l4039:
  6273                           
  6274                           ;main.c: 57:         if(do_irdist_snsr_read){
  6275  0C5D  0022               	movlb	2	; select bank2
  6276  0C5E  086D               	movf	_do_irdist_snsr_read^(0+256),w
  6277  0C5F  1903               	btfsc	3,2
  6278  0C60  2C62               	goto	u5031
  6279  0C61  2C63               	goto	u5030
  6280  0C62                     u5031:
  6281  0C62  2C84               	goto	l4051
  6282  0C63                     u5030:
  6283  0C63                     l4041:
  6284                           
  6285                           ;main.c: 58:             do_irdist_snsr_read = 0;
  6286  0C63  01ED               	clrf	_do_irdist_snsr_read^(0+256)
  6287  0C64                     l4043:
  6288                           
  6289                           ;main.c: 59:             if(read_irdist_dat() == STAT_SUCCESS){
  6290  0C64  3195  25BA  318B   	fcall	_read_irdist_dat
  6291  0C67  3A00               	xorlw	0
  6292  0C68  1D03               	skipz
  6293  0C69  2C6B               	goto	u5041
  6294  0C6A  2C6C               	goto	u5040
  6295  0C6B                     u5041:
  6296  0C6B  2C77               	goto	l4049
  6297  0C6C                     u5040:
  6298  0C6C                     l4045:
  6299                           
  6300                           ;main.c: 60:                 if(irdist_result){
  6301  0C6C  0022               	movlb	2	; select bank2
  6302  0C6D  086C               	movf	_irdist_result^(0+256),w
  6303  0C6E  1903               	btfsc	3,2
  6304  0C6F  2C71               	goto	u5051
  6305  0C70  2C72               	goto	u5050
  6306  0C71                     u5051:
  6307  0C71  2C75               	goto	l230
  6308  0C72                     u5050:
  6309  0C72                     l4047:
  6310                           
  6311                           ;main.c: 61:                     LATBbits.LATB5 = 1;
  6312  0C72  0020               	movlb	0	; select bank0
  6313  0C73  1697               	bsf	23,5	;volatile
  6314                           
  6315                           ;main.c: 62:                 } else {
  6316  0C74  2C77               	goto	l4049
  6317  0C75                     l230:
  6318                           
  6319                           ;main.c: 63:                     LATBbits.LATB5 = 0;
  6320  0C75  0020               	movlb	0	; select bank0
  6321  0C76  1297               	bcf	23,5	;volatile
  6322  0C77                     l4049:
  6323                           
  6324                           ;main.c: 66:             sys_time_act = sys_time + 1000;
  6325  0C77  30E8               	movlw	232
  6326  0C78  0022               	movlb	2	; select bank2
  6327  0C79  0765               	addwf	_sys_time^(0+256),w	;volatile
  6328  0C7A  00E1               	movwf	main@sys_time_act^(0+256)
  6329  0C7B  3003               	movlw	3
  6330  0C7C  3D66               	addwfc	(_sys_time+1)^(0+256),w	;volatile
  6331  0C7D  00E2               	movwf	(main@sys_time_act+1)^(0+256)
  6332  0C7E  3000               	movlw	0
  6333  0C7F  3D67               	addwfc	(_sys_time+2)^(0+256),w	;volatile
  6334  0C80  00E3               	movwf	(main@sys_time_act+2)^(0+256)
  6335  0C81  3000               	movlw	0
  6336  0C82  3D68               	addwfc	(_sys_time+3)^(0+256),w	;volatile
  6337  0C83  00E4               	movwf	(main@sys_time_act+3)^(0+256)
  6338  0C84                     l4051:
  6339                           
  6340                           ;main.c: 69:         if(sys_time == sys_time_act){
  6341  0C84  0864               	movf	(main@sys_time_act+3)^(0+256),w
  6342  0C85  0668               	xorwf	(_sys_time+3)^(0+256),w	;volatile
  6343  0C86  1D03               	skipz
  6344  0C87  2C92               	goto	u5065
  6345  0C88  0863               	movf	(main@sys_time_act+2)^(0+256),w
  6346  0C89  0667               	xorwf	(_sys_time+2)^(0+256),w	;volatile
  6347  0C8A  1D03               	skipz
  6348  0C8B  2C92               	goto	u5065
  6349  0C8C  0862               	movf	(main@sys_time_act+1)^(0+256),w
  6350  0C8D  0666               	xorwf	(_sys_time+1)^(0+256),w	;volatile
  6351  0C8E  1D03               	skipz
  6352  0C8F  2C92               	goto	u5065
  6353  0C90  0861               	movf	main@sys_time_act^(0+256),w
  6354  0C91  0665               	xorwf	_sys_time^(0+256),w	;volatile
  6355  0C92                     u5065:
  6356  0C92  1D03               	skipz
  6357  0C93  2C95               	goto	u5061
  6358  0C94  2C96               	goto	u5060
  6359  0C95                     u5061:
  6360  0C95  2BE3               	goto	l225
  6361  0C96                     u5060:
  6362  0C96                     l4053:
  6363                           
  6364                           ;main.c: 70:             LATBbits.LATB5 = 0;
  6365  0C96  0020               	movlb	0	; select bank0
  6366  0C97  1297               	bcf	23,5	;volatile
  6367  0C98                     l4055:
  6368                           
  6369                           ;main.c: 71:             sys_time_act = sys_time - 1;
  6370  0C98  30FF               	movlw	255
  6371  0C99  0022               	movlb	2	; select bank2
  6372  0C9A  0765               	addwf	_sys_time^(0+256),w	;volatile
  6373  0C9B  00E1               	movwf	main@sys_time_act^(0+256)
  6374  0C9C  30FF               	movlw	255
  6375  0C9D  3D66               	addwfc	(_sys_time+1)^(0+256),w	;volatile
  6376  0C9E  00E2               	movwf	(main@sys_time_act+1)^(0+256)
  6377  0C9F  30FF               	movlw	255
  6378  0CA0  3D67               	addwfc	(_sys_time+2)^(0+256),w	;volatile
  6379  0CA1  00E3               	movwf	(main@sys_time_act+2)^(0+256)
  6380  0CA2  30FF               	movlw	255
  6381  0CA3  3D68               	addwfc	(_sys_time+3)^(0+256),w	;volatile
  6382  0CA4  00E4               	movwf	(main@sys_time_act+3)^(0+256)
  6383  0CA5  2BE3               	goto	l225
  6384  0CA6                     l224:
  6385  0CA6  3181  29B1         	ljmp	start
  6386  0CA8                     __end_of_main:
  6387                           
  6388                           	psect	text1
  6389  1718                     __ptext1:	
  6390 ;; *************** function _sprintf *****************
  6391 ;; Defined at:
  6392 ;;		line 9 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/nf_sprintf.c"
  6393 ;; Parameters:    Size  Location     Type
  6394 ;;  s               1    wreg     PTR unsigned char 
  6395 ;;		 -> main@msg_buff(64), 
  6396 ;;  fmt             2   36[BANK1 ] PTR const unsigned char 
  6397 ;;		 -> STR_4(23), STR_3(23), STR_2(60), 
  6398 ;; Auto vars:     Size  Location     Type
  6399 ;;  s               1   49[BANK1 ] PTR unsigned char 
  6400 ;;		 -> main@msg_buff(64), 
  6401 ;;  f               5   51[BANK1 ] struct _IO_FILE
  6402 ;;  ret             2    0        int 
  6403 ;;  ap              1   50[BANK1 ] PTR void [1]
  6404 ;;		 -> ?_sprintf(2), 
  6405 ;; Return value:  Size  Location     Type
  6406 ;;                  2   36[BANK1 ] int 
  6407 ;; Registers used:
  6408 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6409 ;; Tracked objects:
  6410 ;;		On entry : 0/0
  6411 ;;		On exit  : 0/0
  6412 ;;		Unchanged: 0/0
  6413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6414 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  6415 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  6416 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6417 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  6418 ;;Total ram usage:       20 bytes
  6419 ;; Hardware stack levels used:    1
  6420 ;; Hardware stack levels required when called:    9
  6421 ;; This function calls:
  6422 ;;		_vfprintf
  6423 ;; This function is called by:
  6424 ;;		_main
  6425 ;; This function uses a non-reentrant model
  6426 ;;
  6427                           
  6428                           
  6429                           ;psect for function _sprintf
  6430  1718                     _sprintf:
  6431                           
  6432                           ;incstack = 0
  6433                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6434                           ;sprintf@s stored from wreg
  6435  1718  0021               	movlb	1	; select bank1
  6436  1719  00D1               	movwf	sprintf@s^(0+128)
  6437  171A                     l4003:
  6438  171A  30C6               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  6439  171B  00CE               	movwf	??_sprintf^(0+128)
  6440  171C  084E               	movf	??_sprintf^(0+128),w
  6441  171D  00D2               	movwf	sprintf@ap^(0+128)
  6442  171E  0851               	movf	sprintf@s^(0+128),w
  6443  171F  00CE               	movwf	??_sprintf^(0+128)
  6444  1720  084E               	movf	??_sprintf^(0+128),w
  6445  1721  00D3               	movwf	sprintf@f^(0+128)
  6446  1722                     l4005:
  6447  1722  01D4               	clrf	(sprintf@f^(0+128)+1)
  6448  1723  01D5               	clrf	((sprintf@f+1)^(0+128)+1)
  6449  1724                     l4007:
  6450  1724  01D6               	clrf	(sprintf@f^(0+128)+3)
  6451  1725  01D7               	clrf	((sprintf@f+1)^(0+128)+3)
  6452  1726                     l4009:
  6453  1726  0845               	movf	(sprintf@fmt+1)^(0+128),w
  6454  1727  00BD               	movwf	(vfprintf@fmt+1)^(0+128)
  6455  1728  0844               	movf	sprintf@fmt^(0+128),w
  6456  1729  00BC               	movwf	vfprintf@fmt^(0+128)
  6457  172A  30D2               	movlw	(low (sprintf@ap| 0))& (0+255)
  6458  172B  00CE               	movwf	??_sprintf^(0+128)
  6459  172C  084E               	movf	??_sprintf^(0+128),w
  6460  172D  00BE               	movwf	vfprintf@ap^(0+128)
  6461  172E  30D3               	movlw	(low (sprintf@f| 0))& (0+255)
  6462  172F  3197  278B  3197   	fcall	_vfprintf
  6463  1732                     l4011:
  6464  1732  0021               	movlb	1	; select bank1
  6465  1733  0854               	movf	(sprintf@f^(0+128)+1),w
  6466  1734  0751               	addwf	sprintf@s^(0+128),w
  6467  1735  00CE               	movwf	??_sprintf^(0+128)
  6468  1736  084E               	movf	??_sprintf^(0+128),w
  6469  1737  0086               	movwf	6
  6470  1738  3001               	movlw	1	; select bank2/3
  6471  1739  0087               	movwf	7
  6472  173A  0181               	clrf	1
  6473  173B                     l1047:
  6474  173B  0008               	return
  6475  173C                     __end_of_sprintf:
  6476                           
  6477                           	psect	text2
  6478  178B                     __ptext2:	
  6479 ;; *************** function _vfprintf *****************
  6480 ;; Defined at:
  6481 ;;		line 1390 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c"
  6482 ;; Parameters:    Size  Location     Type
  6483 ;;  fp              1    wreg     PTR struct _IO_FILE
  6484 ;;		 -> sprintf@f(5), 
  6485 ;;  fmt             2   28[BANK1 ] PTR const unsigned char 
  6486 ;;		 -> STR_4(23), STR_3(23), STR_2(60), 
  6487 ;;  ap              1   30[BANK1 ] PTR PTR void 
  6488 ;;		 -> sprintf@ap(1), 
  6489 ;; Auto vars:     Size  Location     Type
  6490 ;;  fp              1   33[BANK1 ] PTR struct _IO_FILE
  6491 ;;		 -> sprintf@f(5), 
  6492 ;;  cfmt            2   34[BANK1 ] PTR unsigned char 
  6493 ;;		 -> STR_4(23), STR_3(23), STR_2(60), 
  6494 ;; Return value:  Size  Location     Type
  6495 ;;                  2   28[BANK1 ] int 
  6496 ;; Registers used:
  6497 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6498 ;; Tracked objects:
  6499 ;;		On entry : 0/0
  6500 ;;		On exit  : 0/0
  6501 ;;		Unchanged: 0/0
  6502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6503 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6504 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6505 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6506 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6507 ;;Total ram usage:        8 bytes
  6508 ;; Hardware stack levels used:    1
  6509 ;; Hardware stack levels required when called:    8
  6510 ;; This function calls:
  6511 ;;		_vfpfcnvrt
  6512 ;; This function is called by:
  6513 ;;		_sprintf
  6514 ;; This function uses a non-reentrant model
  6515 ;;
  6516                           
  6517                           
  6518                           ;psect for function _vfprintf
  6519  178B                     _vfprintf:
  6520                           
  6521                           ;incstack = 0
  6522                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6523                           ;vfprintf@fp stored from wreg
  6524  178B  0021               	movlb	1	; select bank1
  6525  178C  00C1               	movwf	vfprintf@fp^(0+128)
  6526  178D                     l3977:
  6527                           
  6528                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1
      +                          391: {;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1393:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1395:     cfmt = (char *)fmt;
  6529  178D  083D               	movf	(vfprintf@fmt+1)^(0+128),w
  6530  178E  00C3               	movwf	(vfprintf@cfmt+1)^(0+128)
  6531  178F  083C               	movf	vfprintf@fmt^(0+128),w
  6532  1790  00C2               	movwf	vfprintf@cfmt^(0+128)
  6533  1791                     l3979:
  6534                           
  6535                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
  6536  1791  0022               	movlb	2	; select bank2
  6537  1792  01E9               	clrf	_nout^(0+256)
  6538  1793  01EA               	clrf	(_nout+1)^(0+256)
  6539                           
  6540                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  6541  1794  2FAD               	goto	l3983
  6542  1795                     l3981:
  6543                           
  6544                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1398:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  6545  1795  30C2               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  6546  1796  00BF               	movwf	??_vfprintf^(0+128)
  6547  1797  083F               	movf	??_vfprintf^(0+128),w
  6548  1798  0020               	movlb	0	; select bank0
  6549  1799  00E4               	movwf	vfpfcnvrt@fmt
  6550  179A  0021               	movlb	1	; select bank1
  6551  179B  083E               	movf	vfprintf@ap^(0+128),w
  6552  179C  00C0               	movwf	(??_vfprintf+1)^(0+128)
  6553  179D  0840               	movf	(??_vfprintf+1)^(0+128),w
  6554  179E  0020               	movlb	0	; select bank0
  6555  179F  00E5               	movwf	vfpfcnvrt@ap
  6556  17A0  0021               	movlb	1	; select bank1
  6557  17A1  0841               	movf	vfprintf@fp^(0+128),w
  6558  17A2  3181  21FE  3197   	fcall	_vfpfcnvrt
  6559  17A5  0020               	movlb	0	; select bank0
  6560  17A6  0864               	movf	?_vfpfcnvrt,w
  6561  17A7  0022               	movlb	2	; select bank2
  6562  17A8  07E9               	addwf	_nout^(0+256),f
  6563  17A9  0020               	movlb	0	; select bank0
  6564  17AA  0865               	movf	?_vfpfcnvrt+1,w
  6565  17AB  0022               	movlb	2	; select bank2
  6566  17AC  3DEA               	addwfc	(_nout+1)^(0+256),f
  6567  17AD                     l3983:
  6568                           
  6569                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  6570  17AD  0021               	movlb	1	; select bank1
  6571  17AE  0842               	movf	vfprintf@cfmt^(0+128),w
  6572  17AF  0084               	movwf	4
  6573  17B0  0843               	movf	(vfprintf@cfmt+1)^(0+128),w
  6574  17B1  0085               	movwf	5
  6575  17B2  0012               	moviw fsr0++
  6576  17B3  1D03               	btfss	3,2
  6577  17B4  2FB6               	goto	u4981
  6578  17B5  2FB7               	goto	u4980
  6579  17B6                     u4981:
  6580  17B6  2F95               	goto	l3981
  6581  17B7                     u4980:
  6582  17B7                     l3985:
  6583                           
  6584                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1400:     return nout;
  6585  17B7  0022               	movlb	2	; select bank2
  6586  17B8  086A               	movf	(_nout+1)^(0+256),w
  6587  17B9  0021               	movlb	1	; select bank1
  6588  17BA  00BD               	movwf	(?_vfprintf+1)^(0+128)
  6589  17BB  0022               	movlb	2	; select bank2
  6590  17BC  0869               	movf	_nout^(0+256),w
  6591  17BD  0021               	movlb	1	; select bank1
  6592  17BE  00BC               	movwf	?_vfprintf^(0+128)
  6593  17BF                     l1184:
  6594  17BF  0008               	return
  6595  17C0                     __end_of_vfprintf:
  6596                           
  6597                           	psect	text3
  6598  01FE                     __ptext3:	
  6599 ;; *************** function _vfpfcnvrt *****************
  6600 ;; Defined at:
  6601 ;;		line 692 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c"
  6602 ;; Parameters:    Size  Location     Type
  6603 ;;  fp              1    wreg     PTR struct _IO_FILE
  6604 ;;		 -> sprintf@f(5), 
  6605 ;;  fmt             1   68[BANK0 ] PTR PTR unsigned char 
  6606 ;;		 -> vfprintf@cfmt(2), 
  6607 ;;  ap              1   69[BANK0 ] PTR PTR void 
  6608 ;;		 -> sprintf@ap(1), 
  6609 ;; Auto vars:     Size  Location     Type
  6610 ;;  fp              1   27[BANK1 ] PTR struct _IO_FILE
  6611 ;;		 -> sprintf@f(5), 
  6612 ;;  llu             8   14[BANK1 ] unsigned long long 
  6613 ;;  ll              8    6[BANK1 ] long long 
  6614 ;;  f               4    0        long long 
  6615 ;;  ct              3    0        unsigned char [3]
  6616 ;;  done            2   23[BANK1 ] int 
  6617 ;;  vp              2    0        PTR void 
  6618 ;;  i               2    0        int 
  6619 ;;  cp              2    0        PTR unsigned char 
  6620 ;;  c               1   22[BANK1 ] unsigned char 
  6621 ;; Return value:  Size  Location     Type
  6622 ;;                  2   68[BANK0 ] int 
  6623 ;; Registers used:
  6624 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6625 ;; Tracked objects:
  6626 ;;		On entry : 0/0
  6627 ;;		On exit  : 0/0
  6628 ;;		Unchanged: 0/0
  6629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6630 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6631 ;;      Locals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0
  6632 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  6633 ;;      Totals:         0       2      28       0       0       0       0       0       0       0       0       0       
      +0       0
  6634 ;;Total ram usage:       30 bytes
  6635 ;; Hardware stack levels used:    1
  6636 ;; Hardware stack levels required when called:    7
  6637 ;; This function calls:
  6638 ;;		_atoi
  6639 ;;		_dtoa
  6640 ;;		_fputc
  6641 ;;		_isdigit
  6642 ;;		_xtoa
  6643 ;; This function is called by:
  6644 ;;		_vfprintf
  6645 ;; This function uses a non-reentrant model
  6646 ;;
  6647                           
  6648                           
  6649                           ;psect for function _vfpfcnvrt
  6650  01FE                     _vfpfcnvrt:
  6651                           
  6652                           ;incstack = 0
  6653                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6654                           ;vfpfcnvrt@fp stored from wreg
  6655  01FE  0021               	movlb	1	; select bank1
  6656  01FF  00BB               	movwf	vfpfcnvrt@fp^(0+128)
  6657  0200                     l3829:
  6658                           
  6659                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 692: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c
      +                          : 693: {;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 694:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 695:     int done, i;;
      +                          /opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 696:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 697:     unsigned long long llu;
  6660  0200  0020               	movlb	0	; select bank0
  6661  0201  0864               	movf	vfpfcnvrt@fmt,w
  6662  0202  0086               	movwf	6
  6663  0203  0187               	clrf	7
  6664  0204  3F40               	moviw [0]fsr1
  6665  0205  0021               	movlb	1	; select bank1
  6666  0206  00A0               	movwf	??_vfpfcnvrt^(0+128)
  6667  0207  3F41               	moviw [1]fsr1
  6668  0208  00A1               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6669  0209  0820               	movf	??_vfpfcnvrt^(0+128),w
  6670  020A  0084               	movwf	4
  6671  020B  0821               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6672  020C  0085               	movwf	5
  6673  020D  0012               	moviw fsr0++
  6674  020E  3A25               	xorlw	37
  6675  020F  1D03               	btfss	3,2
  6676  0210  2A12               	goto	u4761
  6677  0211  2A13               	goto	u4760
  6678  0212                     u4761:
  6679  0212  2C2A               	goto	l3923
  6680  0213                     u4760:
  6681  0213                     l3831:
  6682                           
  6683                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
  6684  0213  0020               	movlb	0	; select bank0
  6685  0214  0864               	movf	vfpfcnvrt@fmt,w
  6686  0215  0086               	movwf	6
  6687  0216  0187               	clrf	7
  6688  0217  3001               	movlw	1
  6689  0218  0781               	addwf	1,f
  6690  0219  3141               	addfsr 1,1
  6691  021A  1803               	skipnc
  6692  021B  0A81               	incf	1,f
  6693  021C                     l3833:
  6694                           
  6695                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 705:         flags = width = 
      +                          0;
  6696  021C  0021               	movlb	1	; select bank1
  6697  021D  01EA               	clrf	_width^(0+128)
  6698  021E  01EB               	clrf	(_width+1)^(0+128)
  6699  021F  0020               	movlb	0	; select bank0
  6700  0220  01E6               	clrf	_flags
  6701  0221  01E7               	clrf	_flags+1
  6702  0222                     l3835:
  6703                           
  6704                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 706:         prec = -1;
  6705  0222  30FF               	movlw	255
  6706  0223  0021               	movlb	1	; select bank1
  6707  0224  00EC               	movwf	_prec^(0+128)
  6708  0225  30FF               	movlw	255
  6709  0226  00ED               	movwf	(_prec^(0+128)+1)
  6710  0227                     l3837:
  6711                           
  6712                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 710:         done = 0;
  6713  0227  01B7               	clrf	vfpfcnvrt@done^(0+128)
  6714  0228  01B8               	clrf	(vfpfcnvrt@done+1)^(0+128)
  6715                           
  6716                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 711:         while (!done) {
  6717  0229  2A6C               	goto	l3855
  6718  022A                     l1152:	
  6719                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 713:                 case '-'
      +                           :
  6720                           
  6721                           
  6722                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 714:                     flag
      +                          s |= (1 << 0);
  6723  022A  0020               	movlb	0	; select bank0
  6724  022B  1466               	bsf	_flags,0
  6725  022C                     l3839:
  6726                           
  6727                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 715:                     ++*f
      +                          mt;
  6728  022C  0864               	movf	vfpfcnvrt@fmt,w
  6729  022D  0086               	movwf	6
  6730  022E  0187               	clrf	7
  6731  022F  3001               	movlw	1
  6732  0230  0781               	addwf	1,f
  6733  0231  3141               	addfsr 1,1
  6734  0232  1803               	skipnc
  6735  0233  0A81               	incf	1,f
  6736                           
  6737                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 716:                     brea
      +                          k;
  6738  0234  2A6C               	goto	l3855
  6739  0235                     l1154:	
  6740                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 717:                 case '0'
      +                           :
  6741                           
  6742                           
  6743                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 718:                     flag
      +                          s |= (1 << 1);
  6744  0235  0020               	movlb	0	; select bank0
  6745  0236  14E6               	bsf	_flags,1
  6746  0237  2A2C               	goto	l3839
  6747  0238                     l1155:	
  6748                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 721:                 case '+'
      +                           :
  6749                           
  6750                           
  6751                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 722:                     flag
      +                          s |= (1 << 2);
  6752  0238  0020               	movlb	0	; select bank0
  6753  0239  1566               	bsf	_flags,2
  6754  023A  2A2C               	goto	l3839
  6755  023B                     l1156:	
  6756                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 725:                 case ' '
      +                           :
  6757                           
  6758                           
  6759                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 726:                     flag
      +                          s |= (1 << 3);
  6760  023B  0020               	movlb	0	; select bank0
  6761  023C  15E6               	bsf	_flags,3
  6762  023D  2A2C               	goto	l3839
  6763  023E                     l1157:	
  6764                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 729:                 case '#'
      +                           :
  6765                           
  6766                           
  6767                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 730:                     flag
      +                          s |= (1 << 4);
  6768  023E  0020               	movlb	0	; select bank0
  6769  023F  1666               	bsf	_flags,4
  6770  0240  2A2C               	goto	l3839
  6771  0241                     l3849:
  6772                           
  6773                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 734:                     done
      +                           = 1;
  6774  0241  3001               	movlw	1
  6775  0242  00B7               	movwf	vfpfcnvrt@done^(0+128)
  6776  0243  3000               	movlw	0
  6777  0244  00B8               	movwf	(vfpfcnvrt@done^(0+128)+1)
  6778                           
  6779                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 735:                     brea
      +                          k;
  6780  0245  2A6C               	goto	l3855
  6781  0246                     l3853:
  6782  0246  0020               	movlb	0	; select bank0
  6783  0247  0864               	movf	vfpfcnvrt@fmt,w
  6784  0248  0086               	movwf	6
  6785  0249  0187               	clrf	7
  6786  024A  3F40               	moviw [0]fsr1
  6787  024B  0021               	movlb	1	; select bank1
  6788  024C  00A0               	movwf	??_vfpfcnvrt^(0+128)
  6789  024D  3F41               	moviw [1]fsr1
  6790  024E  00A1               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6791  024F  0820               	movf	??_vfpfcnvrt^(0+128),w
  6792  0250  0084               	movwf	4
  6793  0251  0821               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6794  0252  0085               	movwf	5
  6795  0253  0800               	movf	0,w	;code access
  6796  0254  00A2               	movwf	(??_vfpfcnvrt+2)^(0+128)
  6797  0255  01A3               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  6798                           
  6799                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6800                           ; Switch size 1, requested type "simple"
  6801                           ; Number of cases is 1, Range of values is 0 to 0
  6802                           ; switch strategies available:
  6803                           ; Name         Instructions Cycles
  6804                           ; simple_byte            4     3 (average)
  6805                           ; direct_byte            8     6 (fixed)
  6806                           ; jumptable            260     6 (fixed)
  6807                           ;	Chosen strategy is simple_byte
  6808  0256  0823               	movf	(??_vfpfcnvrt+3)^(0+128),w
  6809  0257  3A00               	xorlw	0	; case 0
  6810  0258  1903               	skipnz
  6811  0259  2A5B               	goto	l4097
  6812  025A  2A41               	goto	l3849
  6813  025B                     l4097:
  6814                           
  6815                           ; Switch size 1, requested type "simple"
  6816                           ; Number of cases is 5, Range of values is 32 to 48
  6817                           ; switch strategies available:
  6818                           ; Name         Instructions Cycles
  6819                           ; simple_byte           16     9 (average)
  6820                           ; direct_byte           43     9 (fixed)
  6821                           ; jumptable            263     9 (fixed)
  6822                           ;	Chosen strategy is simple_byte
  6823  025B  0822               	movf	(??_vfpfcnvrt+2)^(0+128),w
  6824  025C  3A20               	xorlw	32	; case 32
  6825  025D  1903               	skipnz
  6826  025E  2A3B               	goto	l1156
  6827  025F  3A03               	xorlw	3	; case 35
  6828  0260  1903               	skipnz
  6829  0261  2A3E               	goto	l1157
  6830  0262  3A08               	xorlw	8	; case 43
  6831  0263  1903               	skipnz
  6832  0264  2A38               	goto	l1155
  6833  0265  3A06               	xorlw	6	; case 45
  6834  0266  1903               	skipnz
  6835  0267  2A2A               	goto	l1152
  6836  0268  3A1D               	xorlw	29	; case 48
  6837  0269  1903               	skipnz
  6838  026A  2A35               	goto	l1154
  6839  026B  2A41               	goto	l3849
  6840  026C                     l3855:
  6841                           
  6842                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 711:         while (!done) {
  6843  026C  0021               	movlb	1	; select bank1
  6844  026D  0837               	movf	vfpfcnvrt@done^(0+128),w
  6845  026E  0438               	iorwf	(vfpfcnvrt@done+1)^(0+128),w
  6846  026F  1903               	btfsc	3,2
  6847  0270  2A72               	goto	u4771
  6848  0271  2A73               	goto	u4770
  6849  0272                     u4771:
  6850  0272  2A46               	goto	l3853
  6851  0273                     u4770:
  6852  0273                     l1159:
  6853                           
  6854                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 738:         if (flags & (1 <
      +                          < 0)) {
  6855  0273  0020               	movlb	0	; select bank0
  6856  0274  1C66               	btfss	_flags,0
  6857  0275  2A77               	goto	u4781
  6858  0276  2A78               	goto	u4780
  6859  0277                     u4781:
  6860  0277  2A7C               	goto	l3859
  6861  0278                     u4780:
  6862  0278                     l3857:
  6863                           
  6864                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 739:             flags &= ~(1
      +                           << 1);
  6865  0278  30FD               	movlw	253
  6866  0279  05E6               	andwf	_flags,f
  6867  027A  30FF               	movlw	255
  6868  027B  05E7               	andwf	_flags+1,f
  6869  027C                     l3859:
  6870                           
  6871                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 745:         if ((*fmt)[0] ==
      +                           '*') {
  6872  027C  0864               	movf	vfpfcnvrt@fmt,w
  6873  027D  0086               	movwf	6
  6874  027E  0187               	clrf	7
  6875  027F  3F40               	moviw [0]fsr1
  6876  0280  0021               	movlb	1	; select bank1
  6877  0281  00A0               	movwf	??_vfpfcnvrt^(0+128)
  6878  0282  3F41               	moviw [1]fsr1
  6879  0283  00A1               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6880  0284  0820               	movf	??_vfpfcnvrt^(0+128),w
  6881  0285  0084               	movwf	4
  6882  0286  0821               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6883  0287  0085               	movwf	5
  6884  0288  0012               	moviw fsr0++
  6885  0289  3A2A               	xorlw	42
  6886  028A  1D03               	btfss	3,2
  6887  028B  2A8D               	goto	u4791
  6888  028C  2A8E               	goto	u4790
  6889  028D                     u4791:
  6890  028D  2AB1               	goto	l3871
  6891  028E                     u4790:
  6892  028E                     l3861:
  6893                           
  6894                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 746:             ++*fmt;
  6895  028E  0020               	movlb	0	; select bank0
  6896  028F  0864               	movf	vfpfcnvrt@fmt,w
  6897  0290  0086               	movwf	6
  6898  0291  0187               	clrf	7
  6899  0292  3001               	movlw	1
  6900  0293  0781               	addwf	1,f
  6901  0294  3141               	addfsr 1,1
  6902  0295  1803               	skipnc
  6903  0296  0A81               	incf	1,f
  6904  0297                     l3863:
  6905                           
  6906                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 747:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  6907  0297  0865               	movf	vfpfcnvrt@ap,w
  6908  0298  0086               	movwf	6
  6909  0299  0187               	clrf	7
  6910  029A  0801               	movf	1,w
  6911  029B  0084               	movwf	4
  6912  029C  0185               	clrf	5
  6913  029D  3002               	movlw	2
  6914  029E  0781               	addwf	1,f
  6915  029F  3F00               	moviw [0]fsr0
  6916  02A0  0021               	movlb	1	; select bank1
  6917  02A1  00EA               	movwf	_width^(0+128)
  6918  02A2  3F01               	moviw [1]fsr0
  6919  02A3  00EB               	movwf	(_width+1)^(0+128)
  6920  02A4                     l3865:
  6921                           
  6922                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 748:             if (width < 
      +                          0) {
  6923  02A4  1FEB               	btfss	(_width+1)^(0+128),7
  6924  02A5  2AA7               	goto	u4801
  6925  02A6  2AA8               	goto	u4800
  6926  02A7                     u4801:
  6927  02A7  2AF9               	goto	l3881
  6928  02A8                     u4800:
  6929  02A8                     l3867:
  6930                           
  6931                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 749:                 flags |=
      +                           (1 << 0);
  6932  02A8  0020               	movlb	0	; select bank0
  6933  02A9  1466               	bsf	_flags,0
  6934  02AA                     l3869:
  6935                           
  6936                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 750:                 width = 
      +                          -width;
  6937  02AA  0021               	movlb	1	; select bank1
  6938  02AB  09EA               	comf	_width^(0+128),f
  6939  02AC  09EB               	comf	(_width+1)^(0+128),f
  6940  02AD  0AEA               	incf	_width^(0+128),f
  6941  02AE  1903               	skipnz
  6942  02AF  0AEB               	incf	(_width+1)^(0+128),f
  6943  02B0  2AF9               	goto	l3881
  6944  02B1                     l3871:
  6945                           
  6946                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 753:             width = atoi
      +                          (*fmt);
  6947  02B1  0020               	movlb	0	; select bank0
  6948  02B2  0864               	movf	vfpfcnvrt@fmt,w
  6949  02B3  0086               	movwf	6
  6950  02B4  0187               	clrf	7
  6951  02B5  3F40               	moviw [0]fsr1
  6952  02B6  00AB               	movwf	atoi@s
  6953  02B7  3F41               	moviw [1]fsr1
  6954  02B8  00AC               	movwf	atoi@s+1
  6955  02B9  318B  2312  3181   	fcall	_atoi
  6956  02BC  0020               	movlb	0	; select bank0
  6957  02BD  082C               	movf	?_atoi+1,w
  6958  02BE  0021               	movlb	1	; select bank1
  6959  02BF  00EB               	movwf	(_width+1)^(0+128)
  6960  02C0  0020               	movlb	0	; select bank0
  6961  02C1  082B               	movf	?_atoi,w
  6962  02C2  0021               	movlb	1	; select bank1
  6963  02C3  00EA               	movwf	_width^(0+128)
  6964                           
  6965                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 754:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6966  02C4  2ACE               	goto	l3875
  6967  02C5                     l3873:
  6968                           
  6969                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 755:                 ++*fmt;
  6970  02C5  0020               	movlb	0	; select bank0
  6971  02C6  0864               	movf	vfpfcnvrt@fmt,w
  6972  02C7  0086               	movwf	6
  6973  02C8  0187               	clrf	7
  6974  02C9  3001               	movlw	1
  6975  02CA  0781               	addwf	1,f
  6976  02CB  3141               	addfsr 1,1
  6977  02CC  1803               	skipnc
  6978  02CD  0A81               	incf	1,f
  6979  02CE                     l3875:
  6980  02CE  0020               	movlb	0	; select bank0
  6981  02CF  0864               	movf	vfpfcnvrt@fmt,w
  6982  02D0  0086               	movwf	6
  6983  02D1  0187               	clrf	7
  6984  02D2  3F40               	moviw [0]fsr1
  6985  02D3  0021               	movlb	1	; select bank1
  6986  02D4  00A0               	movwf	??_vfpfcnvrt^(0+128)
  6987  02D5  3F41               	moviw [1]fsr1
  6988  02D6  00A1               	movwf	(??_vfpfcnvrt^(0+128)+1)
  6989  02D7  0820               	movf	??_vfpfcnvrt^(0+128),w
  6990  02D8  0084               	movwf	4
  6991  02D9  0821               	movf	(??_vfpfcnvrt+1)^(0+128),w
  6992  02DA  0085               	movwf	5
  6993  02DB  0800               	movf	0,w	;code access
  6994  02DC  3ED0               	addlw	208
  6995  02DD  00A2               	movwf	(??_vfpfcnvrt+2)^(0+128)
  6996  02DE  30FF               	movlw	255
  6997  02DF  1803               	skipnc
  6998  02E0  3000               	movlw	0
  6999  02E1  00A3               	movwf	((??_vfpfcnvrt+2)^(0+128)+1)
  7000  02E2  3000               	movlw	0
  7001  02E3  0223               	subwf	(??_vfpfcnvrt+3)^(0+128),w
  7002  02E4  300A               	movlw	10
  7003  02E5  1903               	skipnz
  7004  02E6  0222               	subwf	(??_vfpfcnvrt+2)^(0+128),w
  7005  02E7  1C03               	skipc
  7006  02E8  2AEA               	goto	u4811
  7007  02E9  2AEC               	goto	u4810
  7008  02EA                     u4811:
  7009  02EA  3001               	movlw	1
  7010  02EB  2AED               	goto	u4820
  7011  02EC                     u4810:
  7012  02EC  3000               	movlw	0
  7013  02ED                     u4820:
  7014  02ED  00A4               	movwf	(??_vfpfcnvrt+4)^(0+128)
  7015  02EE  01A5               	clrf	((??_vfpfcnvrt+4)^(0+128)+1)
  7016  02EF  0824               	movf	(??_vfpfcnvrt+4)^(0+128),w
  7017  02F0  00B9               	movwf	_vfpfcnvrt$1438^(0+128)
  7018  02F1  0825               	movf	(??_vfpfcnvrt+5)^(0+128),w
  7019  02F2  00BA               	movwf	(_vfpfcnvrt$1438+1)^(0+128)
  7020  02F3                     l3879:
  7021  02F3  0839               	movf	_vfpfcnvrt$1438^(0+128),w
  7022  02F4  043A               	iorwf	(_vfpfcnvrt$1438+1)^(0+128),w
  7023  02F5  1D03               	btfss	3,2
  7024  02F6  2AF8               	goto	u4831
  7025  02F7  2AF9               	goto	u4830
  7026  02F8                     u4831:
  7027  02F8  2AC5               	goto	l3873
  7028  02F9                     u4830:
  7029  02F9                     l3881:
  7030                           
  7031                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 847:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  7032  02F9  0020               	movlb	0	; select bank0
  7033  02FA  0864               	movf	vfpfcnvrt@fmt,w
  7034  02FB  0086               	movwf	6
  7035  02FC  0187               	clrf	7
  7036  02FD  3F40               	moviw [0]fsr1
  7037  02FE  0021               	movlb	1	; select bank1
  7038  02FF  00A0               	movwf	??_vfpfcnvrt^(0+128)
  7039  0300  3F41               	moviw [1]fsr1
  7040  0301  00A1               	movwf	(??_vfpfcnvrt^(0+128)+1)
  7041  0302  0820               	movf	??_vfpfcnvrt^(0+128),w
  7042  0303  0084               	movwf	4
  7043  0304  0821               	movf	(??_vfpfcnvrt+1)^(0+128),w
  7044  0305  0085               	movwf	5
  7045  0306  0012               	moviw fsr0++
  7046  0307  3A64               	xorlw	100
  7047  0308  1903               	btfsc	3,2
  7048  0309  2B0B               	goto	u4841
  7049  030A  2B0C               	goto	u4840
  7050  030B                     u4841:
  7051  030B  2B1F               	goto	l3885
  7052  030C                     u4840:
  7053  030C                     l3883:
  7054  030C  0020               	movlb	0	; select bank0
  7055  030D  0864               	movf	vfpfcnvrt@fmt,w
  7056  030E  0086               	movwf	6
  7057  030F  0187               	clrf	7
  7058  0310  3F40               	moviw [0]fsr1
  7059  0311  0021               	movlb	1	; select bank1
  7060  0312  00A0               	movwf	??_vfpfcnvrt^(0+128)
  7061  0313  3F41               	moviw [1]fsr1
  7062  0314  00A1               	movwf	(??_vfpfcnvrt^(0+128)+1)
  7063  0315  0820               	movf	??_vfpfcnvrt^(0+128),w
  7064  0316  0084               	movwf	4
  7065  0317  0821               	movf	(??_vfpfcnvrt+1)^(0+128),w
  7066  0318  0085               	movwf	5
  7067  0319  0012               	moviw fsr0++
  7068  031A  3A69               	xorlw	105
  7069  031B  1D03               	btfss	3,2
  7070  031C  2B1E               	goto	u4851
  7071  031D  2B1F               	goto	u4850
  7072  031E                     u4851:
  7073  031E  2B6C               	goto	l3893
  7074  031F                     u4850:
  7075  031F                     l3885:
  7076                           
  7077                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 849:             ++*fmt;
  7078  031F  0020               	movlb	0	; select bank0
  7079  0320  0864               	movf	vfpfcnvrt@fmt,w
  7080  0321  0086               	movwf	6
  7081  0322  0187               	clrf	7
  7082  0323  3001               	movlw	1
  7083  0324  0781               	addwf	1,f
  7084  0325  3141               	addfsr 1,1
  7085  0326  1803               	skipnc
  7086  0327  0A81               	incf	1,f
  7087  0328                     l3887:
  7088                           
  7089                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 850:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  7090  0328  0865               	movf	vfpfcnvrt@ap,w
  7091  0329  0086               	movwf	6
  7092  032A  0187               	clrf	7
  7093  032B  0801               	movf	1,w
  7094  032C  0084               	movwf	4
  7095  032D  0185               	clrf	5
  7096  032E  3002               	movlw	2
  7097  032F  0781               	addwf	1,f
  7098  0330  3F00               	moviw [0]fsr0
  7099  0331  0021               	movlb	1	; select bank1
  7100  0332  00A0               	movwf	??_vfpfcnvrt^(0+128)
  7101  0333  3F01               	moviw [1]fsr0
  7102  0334  00A1               	movwf	(??_vfpfcnvrt^(0+128)+1)
  7103  0335  0820               	movf	??_vfpfcnvrt^(0+128),w
  7104  0336  00A6               	movwf	vfpfcnvrt@ll^(0+128)
  7105  0337  0821               	movf	(??_vfpfcnvrt+1)^(0+128),w
  7106  0338  00A7               	movwf	(vfpfcnvrt@ll+1)^(0+128)
  7107  0339  0D89               	rlf	9,f
  7108  033A  3B89               	subwfb	9,f
  7109  033B  0989               	comf	9,f
  7110  033C  00A8               	movwf	(vfpfcnvrt@ll+2)^(0+128)
  7111  033D  00A9               	movwf	(vfpfcnvrt@ll+3)^(0+128)
  7112  033E  00AA               	movwf	(vfpfcnvrt@ll+4)^(0+128)
  7113  033F  00AB               	movwf	(vfpfcnvrt@ll+5)^(0+128)
  7114  0340  00AC               	movwf	(vfpfcnvrt@ll+6)^(0+128)
  7115  0341  00AD               	movwf	(vfpfcnvrt@ll+7)^(0+128)
  7116  0342                     l3889:
  7117                           
  7118                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 852:             return dtoa(
      +                          fp, ll);
  7119  0342  0826               	movf	vfpfcnvrt@ll^(0+128),w
  7120  0343  0020               	movlb	0	; select bank0
  7121  0344  00C0               	movwf	dtoa@d
  7122  0345  0021               	movlb	1	; select bank1
  7123  0346  0827               	movf	(vfpfcnvrt@ll+1)^(0+128),w
  7124  0347  0020               	movlb	0	; select bank0
  7125  0348  00C1               	movwf	dtoa@d+1
  7126  0349  0021               	movlb	1	; select bank1
  7127  034A  0828               	movf	(vfpfcnvrt@ll+2)^(0+128),w
  7128  034B  0020               	movlb	0	; select bank0
  7129  034C  00C2               	movwf	dtoa@d+2
  7130  034D  0021               	movlb	1	; select bank1
  7131  034E  0829               	movf	(vfpfcnvrt@ll+3)^(0+128),w
  7132  034F  0020               	movlb	0	; select bank0
  7133  0350  00C3               	movwf	dtoa@d+3
  7134  0351  0021               	movlb	1	; select bank1
  7135  0352  082A               	movf	(vfpfcnvrt@ll+4)^(0+128),w
  7136  0353  0020               	movlb	0	; select bank0
  7137  0354  00C4               	movwf	dtoa@d+4
  7138  0355  0021               	movlb	1	; select bank1
  7139  0356  082B               	movf	(vfpfcnvrt@ll+5)^(0+128),w
  7140  0357  0020               	movlb	0	; select bank0
  7141  0358  00C5               	movwf	dtoa@d+5
  7142  0359  0021               	movlb	1	; select bank1
  7143  035A  082C               	movf	(vfpfcnvrt@ll+6)^(0+128),w
  7144  035B  0020               	movlb	0	; select bank0
  7145  035C  00C6               	movwf	dtoa@d+6
  7146  035D  0021               	movlb	1	; select bank1
  7147  035E  082D               	movf	(vfpfcnvrt@ll+7)^(0+128),w
  7148  035F  0020               	movlb	0	; select bank0
  7149  0360  00C7               	movwf	dtoa@d+7
  7150  0361  0021               	movlb	1	; select bank1
  7151  0362  083B               	movf	vfpfcnvrt@fp^(0+128),w
  7152  0363  3185  25C9  3181   	fcall	_dtoa
  7153  0366  0020               	movlb	0	; select bank0
  7154  0367  0841               	movf	?_dtoa+1,w
  7155  0368  00E5               	movwf	?_vfpfcnvrt+1
  7156  0369  0840               	movf	?_dtoa,w
  7157  036A  00E4               	movwf	?_vfpfcnvrt
  7158  036B  2C54               	goto	l1174
  7159  036C                     l3893:
  7160                           
  7161                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1296:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  7162  036C  0020               	movlb	0	; select bank0
  7163  036D  0864               	movf	vfpfcnvrt@fmt,w
  7164  036E  0086               	movwf	6
  7165  036F  0187               	clrf	7
  7166  0370  3F40               	moviw [0]fsr1
  7167  0371  0021               	movlb	1	; select bank1
  7168  0372  00A0               	movwf	??_vfpfcnvrt^(0+128)
  7169  0373  3F41               	moviw [1]fsr1
  7170  0374  00A1               	movwf	(??_vfpfcnvrt^(0+128)+1)
  7171  0375  0820               	movf	??_vfpfcnvrt^(0+128),w
  7172  0376  0084               	movwf	4
  7173  0377  0821               	movf	(??_vfpfcnvrt+1)^(0+128),w
  7174  0378  0085               	movwf	5
  7175  0379  0012               	moviw fsr0++
  7176  037A  3A78               	xorlw	120
  7177  037B  1903               	btfsc	3,2
  7178  037C  2B7E               	goto	u4861
  7179  037D  2B7F               	goto	u4860
  7180  037E                     u4861:
  7181  037E  2B92               	goto	l3897
  7182  037F                     u4860:
  7183  037F                     l3895:
  7184  037F  0020               	movlb	0	; select bank0
  7185  0380  0864               	movf	vfpfcnvrt@fmt,w
  7186  0381  0086               	movwf	6
  7187  0382  0187               	clrf	7
  7188  0383  3F40               	moviw [0]fsr1
  7189  0384  0021               	movlb	1	; select bank1
  7190  0385  00A0               	movwf	??_vfpfcnvrt^(0+128)
  7191  0386  3F41               	moviw [1]fsr1
  7192  0387  00A1               	movwf	(??_vfpfcnvrt^(0+128)+1)
  7193  0388  0820               	movf	??_vfpfcnvrt^(0+128),w
  7194  0389  0084               	movwf	4
  7195  038A  0821               	movf	(??_vfpfcnvrt+1)^(0+128),w
  7196  038B  0085               	movwf	5
  7197  038C  0012               	moviw fsr0++
  7198  038D  3A58               	xorlw	88
  7199  038E  1D03               	btfss	3,2
  7200  038F  2B91               	goto	u4871
  7201  0390  2B92               	goto	u4870
  7202  0391                     u4871:
  7203  0391  2BEF               	goto	l3907
  7204  0392                     u4870:
  7205  0392                     l3897:
  7206                           
  7207                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1298:             c = (*fmt)[
      +                          0];
  7208  0392  0020               	movlb	0	; select bank0
  7209  0393  0864               	movf	vfpfcnvrt@fmt,w
  7210  0394  0086               	movwf	6
  7211  0395  0187               	clrf	7
  7212  0396  3F40               	moviw [0]fsr1
  7213  0397  0021               	movlb	1	; select bank1
  7214  0398  00A0               	movwf	??_vfpfcnvrt^(0+128)
  7215  0399  3F41               	moviw [1]fsr1
  7216  039A  00A1               	movwf	(??_vfpfcnvrt^(0+128)+1)
  7217  039B  0820               	movf	??_vfpfcnvrt^(0+128),w
  7218  039C  0084               	movwf	4
  7219  039D  0821               	movf	(??_vfpfcnvrt+1)^(0+128),w
  7220  039E  0085               	movwf	5
  7221  039F  0800               	movf	0,w	;code access
  7222  03A0  00A2               	movwf	(??_vfpfcnvrt+2)^(0+128)
  7223  03A1  0822               	movf	(??_vfpfcnvrt+2)^(0+128),w
  7224  03A2  00B6               	movwf	vfpfcnvrt@c^(0+128)
  7225  03A3                     l3899:
  7226                           
  7227                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1299:             ++*fmt;
  7228  03A3  0020               	movlb	0	; select bank0
  7229  03A4  0864               	movf	vfpfcnvrt@fmt,w
  7230  03A5  0086               	movwf	6
  7231  03A6  0187               	clrf	7
  7232  03A7  3001               	movlw	1
  7233  03A8  0781               	addwf	1,f
  7234  03A9  3141               	addfsr 1,1
  7235  03AA  1803               	skipnc
  7236  03AB  0A81               	incf	1,f
  7237  03AC                     l3901:
  7238                           
  7239                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1300:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  7240  03AC  0865               	movf	vfpfcnvrt@ap,w
  7241  03AD  0086               	movwf	6
  7242  03AE  0187               	clrf	7
  7243  03AF  0801               	movf	1,w
  7244  03B0  0084               	movwf	4
  7245  03B1  0185               	clrf	5
  7246  03B2  3002               	movlw	2
  7247  03B3  0781               	addwf	1,f
  7248  03B4  3F00               	moviw [0]fsr0
  7249  03B5  0021               	movlb	1	; select bank1
  7250  03B6  00AE               	movwf	vfpfcnvrt@llu^(0+128)
  7251  03B7  3F01               	moviw [1]fsr0
  7252  03B8  00AF               	movwf	(vfpfcnvrt@llu+1)^(0+128)
  7253  03B9  01B0               	clrf	(vfpfcnvrt@llu+2)^(0+128)
  7254  03BA  01B1               	clrf	(vfpfcnvrt@llu+3)^(0+128)
  7255  03BB  01B2               	clrf	(vfpfcnvrt@llu+4)^(0+128)
  7256  03BC  01B3               	clrf	(vfpfcnvrt@llu+5)^(0+128)
  7257  03BD  01B4               	clrf	(vfpfcnvrt@llu+6)^(0+128)
  7258  03BE  01B5               	clrf	(vfpfcnvrt@llu+7)^(0+128)
  7259  03BF                     l3903:
  7260                           
  7261                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1302:             return xtoa
      +                          (fp, llu, c);
  7262  03BF  082E               	movf	vfpfcnvrt@llu^(0+128),w
  7263  03C0  0020               	movlb	0	; select bank0
  7264  03C1  00BE               	movwf	xtoa@d
  7265  03C2  0021               	movlb	1	; select bank1
  7266  03C3  082F               	movf	(vfpfcnvrt@llu+1)^(0+128),w
  7267  03C4  0020               	movlb	0	; select bank0
  7268  03C5  00BF               	movwf	xtoa@d+1
  7269  03C6  0021               	movlb	1	; select bank1
  7270  03C7  0830               	movf	(vfpfcnvrt@llu+2)^(0+128),w
  7271  03C8  0020               	movlb	0	; select bank0
  7272  03C9  00C0               	movwf	xtoa@d+2
  7273  03CA  0021               	movlb	1	; select bank1
  7274  03CB  0831               	movf	(vfpfcnvrt@llu+3)^(0+128),w
  7275  03CC  0020               	movlb	0	; select bank0
  7276  03CD  00C1               	movwf	xtoa@d+3
  7277  03CE  0021               	movlb	1	; select bank1
  7278  03CF  0832               	movf	(vfpfcnvrt@llu+4)^(0+128),w
  7279  03D0  0020               	movlb	0	; select bank0
  7280  03D1  00C2               	movwf	xtoa@d+4
  7281  03D2  0021               	movlb	1	; select bank1
  7282  03D3  0833               	movf	(vfpfcnvrt@llu+5)^(0+128),w
  7283  03D4  0020               	movlb	0	; select bank0
  7284  03D5  00C3               	movwf	xtoa@d+5
  7285  03D6  0021               	movlb	1	; select bank1
  7286  03D7  0834               	movf	(vfpfcnvrt@llu+6)^(0+128),w
  7287  03D8  0020               	movlb	0	; select bank0
  7288  03D9  00C4               	movwf	xtoa@d+6
  7289  03DA  0021               	movlb	1	; select bank1
  7290  03DB  0835               	movf	(vfpfcnvrt@llu+7)^(0+128),w
  7291  03DC  0020               	movlb	0	; select bank0
  7292  03DD  00C5               	movwf	xtoa@d+7
  7293  03DE  0021               	movlb	1	; select bank1
  7294  03DF  0836               	movf	vfpfcnvrt@c^(0+128),w
  7295  03E0  00A0               	movwf	??_vfpfcnvrt^(0+128)
  7296  03E1  0820               	movf	??_vfpfcnvrt^(0+128),w
  7297  03E2  0020               	movlb	0	; select bank0
  7298  03E3  00C6               	movwf	xtoa@x
  7299  03E4  0021               	movlb	1	; select bank1
  7300  03E5  083B               	movf	vfpfcnvrt@fp^(0+128),w
  7301  03E6  3184  2455  3181   	fcall	_xtoa
  7302  03E9  0020               	movlb	0	; select bank0
  7303  03EA  083F               	movf	?_xtoa+1,w
  7304  03EB  00E5               	movwf	?_vfpfcnvrt+1
  7305  03EC  083E               	movf	?_xtoa,w
  7306  03ED  00E4               	movwf	?_vfpfcnvrt
  7307  03EE  2C54               	goto	l1174
  7308  03EF                     l3907:
  7309                           
  7310                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1372:         if ((*fmt)[0] =
      +                          = '%') {
  7311  03EF  0020               	movlb	0	; select bank0
  7312  03F0  0864               	movf	vfpfcnvrt@fmt,w
  7313  03F1  0086               	movwf	6
  7314  03F2  0187               	clrf	7
  7315  03F3  3F40               	moviw [0]fsr1
  7316  03F4  0021               	movlb	1	; select bank1
  7317  03F5  00A0               	movwf	??_vfpfcnvrt^(0+128)
  7318  03F6  3F41               	moviw [1]fsr1
  7319  03F7  00A1               	movwf	(??_vfpfcnvrt^(0+128)+1)
  7320  03F8  0820               	movf	??_vfpfcnvrt^(0+128),w
  7321  03F9  0084               	movwf	4
  7322  03FA  0821               	movf	(??_vfpfcnvrt+1)^(0+128),w
  7323  03FB  0085               	movwf	5
  7324  03FC  0012               	moviw fsr0++
  7325  03FD  3A25               	xorlw	37
  7326  03FE  1D03               	btfss	3,2
  7327  03FF  2C01               	goto	u4881
  7328  0400  2C02               	goto	u4880
  7329  0401                     u4881:
  7330  0401  2C1E               	goto	l3917
  7331  0402                     u4880:
  7332  0402                     l3909:
  7333                           
  7334                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1373:             ++*fmt;
  7335  0402  0020               	movlb	0	; select bank0
  7336  0403  0864               	movf	vfpfcnvrt@fmt,w
  7337  0404  0086               	movwf	6
  7338  0405  0187               	clrf	7
  7339  0406  3001               	movlw	1
  7340  0407  0781               	addwf	1,f
  7341  0408  3141               	addfsr 1,1
  7342  0409  1803               	skipnc
  7343  040A  0A81               	incf	1,f
  7344  040B                     l3911:
  7345                           
  7346                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1374:             fputc((int)
      +                          '%', fp);
  7347  040B  3025               	movlw	37
  7348  040C  00A5               	movwf	fputc@c
  7349  040D  3000               	movlw	0
  7350  040E  00A6               	movwf	fputc@c+1
  7351  040F  0021               	movlb	1	; select bank1
  7352  0410  083B               	movf	vfpfcnvrt@fp^(0+128),w
  7353  0411  00A0               	movwf	??_vfpfcnvrt^(0+128)
  7354  0412  0820               	movf	??_vfpfcnvrt^(0+128),w
  7355  0413  0020               	movlb	0	; select bank0
  7356  0414  00A7               	movwf	fputc@fp
  7357  0415  3188  2051  3181   	fcall	_fputc
  7358  0418                     l3913:
  7359                           
  7360                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1375:             return 1;
  7361  0418  3001               	movlw	1
  7362  0419  0020               	movlb	0	; select bank0
  7363  041A  00E4               	movwf	?_vfpfcnvrt
  7364  041B  3000               	movlw	0
  7365  041C  00E5               	movwf	?_vfpfcnvrt+1
  7366  041D  2C54               	goto	l1174
  7367  041E                     l3917:
  7368                           
  7369                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt;
  7370  041E  0020               	movlb	0	; select bank0
  7371  041F  0864               	movf	vfpfcnvrt@fmt,w
  7372  0420  0086               	movwf	6
  7373  0421  0187               	clrf	7
  7374  0422  3001               	movlw	1
  7375  0423  0781               	addwf	1,f
  7376  0424  3141               	addfsr 1,1
  7377  0425  1803               	skipnc
  7378  0426  0A81               	incf	1,f
  7379  0427                     l3919:
  7380                           
  7381                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1380:         return 0;
  7382  0427  01E4               	clrf	?_vfpfcnvrt
  7383  0428  01E5               	clrf	?_vfpfcnvrt+1
  7384  0429  2C54               	goto	l1174
  7385  042A                     l3923:
  7386                           
  7387                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1384:     fputc((int)(*fmt)[0
      +                          ], fp);
  7388  042A  0020               	movlb	0	; select bank0
  7389  042B  0864               	movf	vfpfcnvrt@fmt,w
  7390  042C  0086               	movwf	6
  7391  042D  0187               	clrf	7
  7392  042E  3F40               	moviw [0]fsr1
  7393  042F  0021               	movlb	1	; select bank1
  7394  0430  00A0               	movwf	??_vfpfcnvrt^(0+128)
  7395  0431  3F41               	moviw [1]fsr1
  7396  0432  00A1               	movwf	(??_vfpfcnvrt^(0+128)+1)
  7397  0433  0820               	movf	??_vfpfcnvrt^(0+128),w
  7398  0434  0084               	movwf	4
  7399  0435  0821               	movf	(??_vfpfcnvrt+1)^(0+128),w
  7400  0436  0085               	movwf	5
  7401  0437  0800               	movf	0,w	;code access
  7402  0438  00A2               	movwf	(??_vfpfcnvrt+2)^(0+128)
  7403  0439  01A3               	clrf	((??_vfpfcnvrt+2)^(0+128)+1)
  7404  043A  0822               	movf	(??_vfpfcnvrt+2)^(0+128),w
  7405  043B  0020               	movlb	0	; select bank0
  7406  043C  00A5               	movwf	fputc@c
  7407  043D  0021               	movlb	1	; select bank1
  7408  043E  0823               	movf	(??_vfpfcnvrt+3)^(0+128),w
  7409  043F  0020               	movlb	0	; select bank0
  7410  0440  00A6               	movwf	fputc@c+1
  7411  0441  0021               	movlb	1	; select bank1
  7412  0442  083B               	movf	vfpfcnvrt@fp^(0+128),w
  7413  0443  00A4               	movwf	(??_vfpfcnvrt+4)^(0+128)
  7414  0444  0824               	movf	(??_vfpfcnvrt+4)^(0+128),w
  7415  0445  0020               	movlb	0	; select bank0
  7416  0446  00A7               	movwf	fputc@fp
  7417  0447  3188  2051  3181   	fcall	_fputc
  7418  044A                     l3925:
  7419                           
  7420                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
  7421  044A  0020               	movlb	0	; select bank0
  7422  044B  0864               	movf	vfpfcnvrt@fmt,w
  7423  044C  0086               	movwf	6
  7424  044D  0187               	clrf	7
  7425  044E  3001               	movlw	1
  7426  044F  0781               	addwf	1,f
  7427  0450  3141               	addfsr 1,1
  7428  0451  1803               	skipnc
  7429  0452  0A81               	incf	1,f
  7430  0453  2C18               	goto	l3913
  7431  0454                     l1174:
  7432  0454  0008               	return
  7433  0455                     __end_of_vfpfcnvrt:
  7434                           
  7435                           	psect	text4
  7436  0455                     __ptext4:	
  7437 ;; *************** function _xtoa *****************
  7438 ;; Defined at:
  7439 ;;		line 645 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c"
  7440 ;; Parameters:    Size  Location     Type
  7441 ;;  fp              1    wreg     PTR struct _IO_FILE
  7442 ;;		 -> sprintf@f(5), 
  7443 ;;  d               8   30[BANK0 ] unsigned long long 
  7444 ;;  x               1   38[BANK0 ] unsigned char 
  7445 ;; Auto vars:     Size  Location     Type
  7446 ;;  fp              1   47[BANK0 ] PTR struct _IO_FILE
  7447 ;;		 -> sprintf@f(5), 
  7448 ;;  n               8   56[BANK0 ] unsigned long long 
  7449 ;;  c               2   66[BANK0 ] int 
  7450 ;;  i               2   64[BANK0 ] int 
  7451 ;;  w               2   54[BANK0 ] int 
  7452 ;;  p               2   52[BANK0 ] int 
  7453 ;; Return value:  Size  Location     Type
  7454 ;;                  2   30[BANK0 ] int 
  7455 ;; Registers used:
  7456 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7457 ;; Tracked objects:
  7458 ;;		On entry : 0/0
  7459 ;;		On exit  : 0/0
  7460 ;;		Unchanged: 0/0
  7461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7462 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7463 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7464 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7465 ;;      Totals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7466 ;;Total ram usage:       38 bytes
  7467 ;; Hardware stack levels used:    1
  7468 ;; Hardware stack levels required when called:    6
  7469 ;; This function calls:
  7470 ;;		_isalpha
  7471 ;;		_isupper
  7472 ;;		_pad
  7473 ;;		_toupper
  7474 ;; This function is called by:
  7475 ;;		_vfpfcnvrt
  7476 ;; This function uses a non-reentrant model
  7477 ;;
  7478                           
  7479                           
  7480                           ;psect for function _xtoa
  7481  0455                     _xtoa:
  7482                           
  7483                           ;incstack = 0
  7484                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7485                           ;xtoa@fp stored from wreg
  7486  0455  0020               	movlb	0	; select bank0
  7487  0456  00CF               	movwf	xtoa@fp
  7488  0457                     l3721:
  7489                           
  7490                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 645: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c
      +                          : 646: {;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 647:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 648:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 651:     if (!(prec < 0))
      +                           {
  7491  0457  0021               	movlb	1	; select bank1
  7492  0458  1BED               	btfsc	(_prec+1)^(0+128),7
  7493  0459  2C5B               	goto	u4521
  7494  045A  2C5C               	goto	u4520
  7495  045B                     u4521:
  7496  045B  2C61               	goto	l1118
  7497  045C                     u4520:
  7498  045C                     l3723:
  7499                           
  7500                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 652:         flags &= ~(1 << 
      +                          1);
  7501  045C  30FD               	movlw	253
  7502  045D  0020               	movlb	0	; select bank0
  7503  045E  05E6               	andwf	_flags,f
  7504  045F  30FF               	movlw	255
  7505  0460  05E7               	andwf	_flags+1,f
  7506  0461                     l1118:	
  7507                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 653:     }
  7508                           
  7509                           
  7510                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 654:     p = (0 < prec) ? pre
      +                          c : 1;
  7511  0461  0021               	movlb	1	; select bank1
  7512  0462  086D               	movf	(_prec+1)^(0+128),w
  7513  0463  3A80               	xorlw	128
  7514  0464  0020               	movlb	0	; select bank0
  7515  0465  00C7               	movwf	??_xtoa
  7516  0466  3080               	movlw	128
  7517  0467  0247               	subwf	??_xtoa,w
  7518  0468  1D03               	skipz
  7519  0469  2C6D               	goto	u4535
  7520  046A  3001               	movlw	1
  7521  046B  0021               	movlb	1	; select bank1
  7522  046C  026C               	subwf	_prec^(0+128),w
  7523  046D                     u4535:
  7524  046D  1803               	skipnc
  7525  046E  2C70               	goto	u4531
  7526  046F  2C71               	goto	u4530
  7527  0470                     u4531:
  7528  0470  2C77               	goto	l3727
  7529  0471                     u4530:
  7530  0471                     l3725:
  7531  0471  3001               	movlw	1
  7532  0472  0020               	movlb	0	; select bank0
  7533  0473  00D4               	movwf	xtoa@p
  7534  0474  3000               	movlw	0
  7535  0475  00D5               	movwf	xtoa@p+1
  7536  0476  2C7F               	goto	l1122
  7537  0477                     l3727:
  7538  0477  0021               	movlb	1	; select bank1
  7539  0478  086D               	movf	(_prec+1)^(0+128),w
  7540  0479  0020               	movlb	0	; select bank0
  7541  047A  00D5               	movwf	xtoa@p+1
  7542  047B  0021               	movlb	1	; select bank1
  7543  047C  086C               	movf	_prec^(0+128),w
  7544  047D  0020               	movlb	0	; select bank0
  7545  047E  00D4               	movwf	xtoa@p
  7546  047F                     l1122:
  7547                           
  7548                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 655:     w = width;
  7549  047F  0021               	movlb	1	; select bank1
  7550  0480  086B               	movf	(_width+1)^(0+128),w
  7551  0481  0020               	movlb	0	; select bank0
  7552  0482  00D7               	movwf	xtoa@w+1
  7553  0483  0021               	movlb	1	; select bank1
  7554  0484  086A               	movf	_width^(0+128),w
  7555  0485  0020               	movlb	0	; select bank0
  7556  0486  00D6               	movwf	xtoa@w
  7557  0487                     l3729:
  7558                           
  7559                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  7560  0487  1E66               	btfss	_flags,4
  7561  0488  2C8A               	goto	u4541
  7562  0489  2C8B               	goto	u4540
  7563  048A                     u4541:
  7564  048A  2C8F               	goto	l3733
  7565  048B                     u4540:
  7566  048B                     l3731:
  7567                           
  7568                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 657:         w -= 2;
  7569  048B  30FE               	movlw	254
  7570  048C  07D6               	addwf	xtoa@w,f
  7571  048D  30FF               	movlw	255
  7572  048E  3DD7               	addwfc	xtoa@w+1,f
  7573  048F                     l3733:
  7574                           
  7575                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 661:     n = d;
  7576  048F  083E               	movf	xtoa@d,w
  7577  0490  00D8               	movwf	xtoa@n
  7578  0491  083F               	movf	xtoa@d+1,w
  7579  0492  00D9               	movwf	xtoa@n+1
  7580  0493  0840               	movf	xtoa@d+2,w
  7581  0494  00DA               	movwf	xtoa@n+2
  7582  0495  0841               	movf	xtoa@d+3,w
  7583  0496  00DB               	movwf	xtoa@n+3
  7584  0497  0842               	movf	xtoa@d+4,w
  7585  0498  00DC               	movwf	xtoa@n+4
  7586  0499  0843               	movf	xtoa@d+5,w
  7587  049A  00DD               	movwf	xtoa@n+5
  7588  049B  0844               	movf	xtoa@d+6,w
  7589  049C  00DE               	movwf	xtoa@n+6
  7590  049D  0845               	movf	xtoa@d+7,w
  7591  049E  00DF               	movwf	xtoa@n+7
  7592                           
  7593                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 662:     i = sizeof(dbuf) - 1
      +                          ;
  7594  049F  301F               	movlw	31
  7595  04A0  00E0               	movwf	xtoa@i
  7596  04A1  3000               	movlw	0
  7597  04A2  00E1               	movwf	xtoa@i+1
  7598  04A3                     l3735:
  7599                           
  7600                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 663:     dbuf[i] = '\0';
  7601  04A3  0023               	movlb	3	; select bank3
  7602  04A4  01D1               	clrf	(_dbuf^(0+384)+31)
  7603                           
  7604                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 664:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7605  04A5  2D5C               	goto	l3765
  7606  04A6                     l3737:
  7607                           
  7608                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 665:         --i;
  7609  04A6  30FF               	movlw	255
  7610  04A7  0020               	movlb	0	; select bank0
  7611  04A8  07E0               	addwf	xtoa@i,f
  7612  04A9  30FF               	movlw	255
  7613  04AA  3DE1               	addwfc	xtoa@i+1,f
  7614                           
  7615                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 666:         c = n & 0x0f;
  7616  04AB  300F               	movlw	15
  7617  04AC  0558               	andwf	xtoa@n,w
  7618  04AD  00E2               	movwf	xtoa@c
  7619  04AE  3000               	movlw	0
  7620  04AF  0559               	andwf	xtoa@n+1,w
  7621  04B0  00E3               	movwf	xtoa@c+1
  7622                           
  7623                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 667:         c = (c < 10) ? (
      +                          int)'0' + c : (int)'a' + (c - 10);
  7624  04B1  0863               	movf	xtoa@c+1,w
  7625  04B2  3A80               	xorlw	128
  7626  04B3  00C7               	movwf	??_xtoa
  7627  04B4  3080               	movlw	128
  7628  04B5  0247               	subwf	??_xtoa,w
  7629  04B6  1D03               	skipz
  7630  04B7  2CBA               	goto	u4555
  7631  04B8  300A               	movlw	10
  7632  04B9  0262               	subwf	xtoa@c,w
  7633  04BA                     u4555:
  7634  04BA  1C03               	skipc
  7635  04BB  2CBD               	goto	u4551
  7636  04BC  2CBE               	goto	u4550
  7637  04BD                     u4551:
  7638  04BD  2CC6               	goto	l3741
  7639  04BE                     u4550:
  7640  04BE                     l3739:
  7641  04BE  0020               	movlb	0	; select bank0
  7642  04BF  0862               	movf	xtoa@c,w
  7643  04C0  3E57               	addlw	87
  7644  04C1  00E2               	movwf	xtoa@c
  7645  04C2  3000               	movlw	0
  7646  04C3  3D63               	addwfc	xtoa@c+1,w
  7647  04C4  00E3               	movwf	xtoa@c+1
  7648  04C5  2CCD               	goto	l3743
  7649  04C6                     l3741:
  7650  04C6  0020               	movlb	0	; select bank0
  7651  04C7  0862               	movf	xtoa@c,w
  7652  04C8  3E30               	addlw	48
  7653  04C9  00E2               	movwf	xtoa@c
  7654  04CA  3000               	movlw	0
  7655  04CB  3D63               	addwfc	xtoa@c+1,w
  7656  04CC  00E3               	movwf	xtoa@c+1
  7657  04CD                     l3743:
  7658  04CD  0846               	movf	xtoa@x,w
  7659  04CE  3EBF               	addlw	191
  7660  04CF  00C7               	movwf	??_xtoa
  7661  04D0  30FF               	movlw	255
  7662  04D1  1803               	skipnc
  7663  04D2  3000               	movlw	0
  7664  04D3  00C8               	movwf	??_xtoa+1
  7665  04D4  3000               	movlw	0
  7666  04D5  0248               	subwf	??_xtoa+1,w
  7667  04D6  301A               	movlw	26
  7668  04D7  1903               	skipnz
  7669  04D8  0247               	subwf	??_xtoa,w
  7670  04D9  1C03               	skipc
  7671  04DA  2CDC               	goto	u4561
  7672  04DB  2CDE               	goto	u4560
  7673  04DC                     u4561:
  7674  04DC  3001               	movlw	1
  7675  04DD  2CDF               	goto	u4570
  7676  04DE                     u4560:
  7677  04DE  3000               	movlw	0
  7678  04DF                     u4570:
  7679  04DF  00C9               	movwf	??_xtoa+2
  7680  04E0  01CA               	clrf	??_xtoa+3
  7681  04E1  0849               	movf	??_xtoa+2,w
  7682  04E2  00D0               	movwf	_xtoa$1423
  7683  04E3  084A               	movf	??_xtoa+3,w
  7684  04E4  00D1               	movwf	_xtoa$1423+1
  7685  04E5                     l3747:
  7686  04E5  0850               	movf	_xtoa$1423,w
  7687  04E6  0451               	iorwf	_xtoa$1423+1,w
  7688  04E7  1903               	btfsc	3,2
  7689  04E8  2CEA               	goto	u4581
  7690  04E9  2CEB               	goto	u4580
  7691  04EA                     u4581:
  7692  04EA  2D1A               	goto	l3757
  7693  04EB                     u4580:
  7694  04EB                     l3749:
  7695  04EB  3020               	movlw	32
  7696  04EC  0462               	iorwf	xtoa@c,w
  7697  04ED  00C7               	movwf	??_xtoa
  7698  04EE  3000               	movlw	0
  7699  04EF  0463               	iorwf	xtoa@c+1,w
  7700  04F0  00C8               	movwf	??_xtoa+1
  7701  04F1  0847               	movf	??_xtoa,w
  7702  04F2  3E9F               	addlw	159
  7703  04F3  00C9               	movwf	??_xtoa+2
  7704  04F4  30FF               	movlw	255
  7705  04F5  3D48               	addwfc	??_xtoa+1,w
  7706  04F6  00CA               	movwf	??_xtoa+3
  7707  04F7  3000               	movlw	0
  7708  04F8  024A               	subwf	??_xtoa+3,w
  7709  04F9  301A               	movlw	26
  7710  04FA  1903               	skipnz
  7711  04FB  0249               	subwf	??_xtoa+2,w
  7712  04FC  1C03               	skipc
  7713  04FD  2CFF               	goto	u4591
  7714  04FE  2D01               	goto	u4590
  7715  04FF                     u4591:
  7716  04FF  3001               	movlw	1
  7717  0500  2D02               	goto	u4600
  7718  0501                     u4590:
  7719  0501  3000               	movlw	0
  7720  0502                     u4600:
  7721  0502  00CB               	movwf	??_xtoa+4
  7722  0503  01CC               	clrf	??_xtoa+5
  7723  0504  084B               	movf	??_xtoa+4,w
  7724  0505  00D2               	movwf	_xtoa$1424
  7725  0506  084C               	movf	??_xtoa+5,w
  7726  0507  00D3               	movwf	_xtoa$1424+1
  7727  0508                     l3753:
  7728  0508  0852               	movf	_xtoa$1424,w
  7729  0509  0453               	iorwf	_xtoa$1424+1,w
  7730  050A  1903               	btfsc	3,2
  7731  050B  2D0D               	goto	u4611
  7732  050C  2D0E               	goto	u4610
  7733  050D                     u4611:
  7734  050D  2D1A               	goto	l3757
  7735  050E                     u4610:
  7736  050E                     l3755:
  7737                           
  7738                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 669:             c = toupper(
      +                          c);
  7739  050E  0863               	movf	xtoa@c+1,w
  7740  050F  00AC               	movwf	toupper@c+1
  7741  0510  0862               	movf	xtoa@c,w
  7742  0511  00AB               	movwf	toupper@c
  7743  0512  3197  273C  3184   	fcall	_toupper
  7744  0515  0020               	movlb	0	; select bank0
  7745  0516  082C               	movf	?_toupper+1,w
  7746  0517  00E3               	movwf	xtoa@c+1
  7747  0518  082B               	movf	?_toupper,w
  7748  0519  00E2               	movwf	xtoa@c
  7749  051A                     l3757:
  7750                           
  7751                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 671:         dbuf[i] = (char)
      +                          c;
  7752  051A  0862               	movf	xtoa@c,w
  7753  051B  00C7               	movwf	??_xtoa
  7754  051C  0860               	movf	xtoa@i,w
  7755  051D  3EB2               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7756  051E  0086               	movwf	6
  7757  051F  3001               	movlw	1	; select bank3/4
  7758  0520  0087               	movwf	7
  7759  0521  0847               	movf	??_xtoa,w
  7760  0522  0081               	movwf	1
  7761  0523                     l3759:
  7762                           
  7763                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 672:         --p;
  7764  0523  30FF               	movlw	255
  7765  0524  07D4               	addwf	xtoa@p,f
  7766  0525  30FF               	movlw	255
  7767  0526  3DD5               	addwfc	xtoa@p+1,f
  7768  0527                     l3761:
  7769                           
  7770                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 673:         --w;
  7771  0527  30FF               	movlw	255
  7772  0528  07D6               	addwf	xtoa@w,f
  7773  0529  30FF               	movlw	255
  7774  052A  3DD7               	addwfc	xtoa@w+1,f
  7775  052B                     l3763:
  7776                           
  7777                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 674:         n = n >> 4;
  7778  052B  3058               	movlw	low xtoa@n
  7779  052C  0086               	movwf	6
  7780  052D  3000               	movlw	high xtoa@n
  7781  052E  0087               	movwf	7
  7782  052F  3F40               	moviw [0]fsr1
  7783  0530  00C7               	movwf	??_xtoa
  7784  0531  3F41               	moviw [1]fsr1
  7785  0532  00C8               	movwf	??_xtoa+1
  7786  0533  3F42               	moviw [2]fsr1
  7787  0534  00C9               	movwf	??_xtoa+2
  7788  0535  3F43               	moviw [3]fsr1
  7789  0536  00CA               	movwf	??_xtoa+3
  7790  0537  3F44               	moviw [4]fsr1
  7791  0538  00CB               	movwf	??_xtoa+4
  7792  0539  3F45               	moviw [5]fsr1
  7793  053A  00CC               	movwf	??_xtoa+5
  7794  053B  3F46               	moviw [6]fsr1
  7795  053C  00CD               	movwf	??_xtoa+6
  7796  053D  3F47               	moviw [7]fsr1
  7797  053E  00CE               	movwf	??_xtoa+7
  7798  053F  3004               	movlw	4
  7799  0540                     u4625:
  7800  0540  0020               	movlb	0	; select bank0
  7801  0541  36CE               	lsrf	??_xtoa+7,f
  7802  0542  0CCD               	rrf	??_xtoa+6,f
  7803  0543  0CCC               	rrf	??_xtoa+5,f
  7804  0544  0CCB               	rrf	??_xtoa+4,f
  7805  0545  0CCA               	rrf	??_xtoa+3,f
  7806  0546  0CC9               	rrf	??_xtoa+2,f
  7807  0547  0CC8               	rrf	??_xtoa+1,f
  7808  0548  0CC7               	rrf	??_xtoa,f
  7809  0549                     u4620:
  7810  0549  0B89               	decfsz	9,f
  7811  054A  2D40               	goto	u4625
  7812  054B  0020               	movlb	0	; select bank0
  7813  054C  084E               	movf	??_xtoa+7,w
  7814  054D  00DF               	movwf	xtoa@n+7
  7815  054E  084D               	movf	??_xtoa+6,w
  7816  054F  00DE               	movwf	xtoa@n+6
  7817  0550  084C               	movf	??_xtoa+5,w
  7818  0551  00DD               	movwf	xtoa@n+5
  7819  0552  084B               	movf	??_xtoa+4,w
  7820  0553  00DC               	movwf	xtoa@n+4
  7821  0554  084A               	movf	??_xtoa+3,w
  7822  0555  00DB               	movwf	xtoa@n+3
  7823  0556  0849               	movf	??_xtoa+2,w
  7824  0557  00DA               	movwf	xtoa@n+2
  7825  0558  0848               	movf	??_xtoa+1,w
  7826  0559  00D9               	movwf	xtoa@n+1
  7827  055A  0847               	movf	??_xtoa,w
  7828  055B  00D8               	movwf	xtoa@n
  7829  055C                     l3765:
  7830                           
  7831                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 664:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7832  055C  0020               	movlb	0	; select bank0
  7833  055D  0861               	movf	xtoa@i+1,w
  7834  055E  3A80               	xorlw	128
  7835  055F  00C7               	movwf	??_xtoa
  7836  0560  3080               	movlw	128
  7837  0561  0247               	subwf	??_xtoa,w
  7838  0562  1D03               	skipz
  7839  0563  2D66               	goto	u4635
  7840  0564  3002               	movlw	2
  7841  0565  0260               	subwf	xtoa@i,w
  7842  0566                     u4635:
  7843  0566  1C03               	skipc
  7844  0567  2D69               	goto	u4631
  7845  0568  2D6A               	goto	u4630
  7846  0569                     u4631:
  7847  0569  2D97               	goto	l1143
  7848  056A                     u4630:
  7849  056A                     l3767:
  7850  056A  0020               	movlb	0	; select bank0
  7851  056B  0858               	movf	xtoa@n,w
  7852  056C  0459               	iorwf	xtoa@n+1,w
  7853  056D  045A               	iorwf	xtoa@n+2,w
  7854  056E  045B               	iorwf	xtoa@n+3,w
  7855  056F  045C               	iorwf	xtoa@n+4,w
  7856  0570  045D               	iorwf	xtoa@n+5,w
  7857  0571  045E               	iorwf	xtoa@n+6,w
  7858  0572  045F               	iorwf	xtoa@n+7,w
  7859  0573  1D03               	skipz
  7860  0574  2D76               	goto	u4641
  7861  0575  2D77               	goto	u4640
  7862  0576                     u4641:
  7863  0576  2CA6               	goto	l3737
  7864  0577                     u4640:
  7865  0577                     l3769:
  7866  0577  0855               	movf	xtoa@p+1,w
  7867  0578  3A80               	xorlw	128
  7868  0579  00C7               	movwf	??_xtoa
  7869  057A  3080               	movlw	128
  7870  057B  0247               	subwf	??_xtoa,w
  7871  057C  1D03               	skipz
  7872  057D  2D80               	goto	u4655
  7873  057E  3001               	movlw	1
  7874  057F  0254               	subwf	xtoa@p,w
  7875  0580                     u4655:
  7876  0580  1803               	skipnc
  7877  0581  2D83               	goto	u4651
  7878  0582  2D84               	goto	u4650
  7879  0583                     u4651:
  7880  0583  2CA6               	goto	l3737
  7881  0584                     u4650:
  7882  0584                     l3771:
  7883  0584  0020               	movlb	0	; select bank0
  7884  0585  0857               	movf	xtoa@w+1,w
  7885  0586  3A80               	xorlw	128
  7886  0587  00C7               	movwf	??_xtoa
  7887  0588  3080               	movlw	128
  7888  0589  0247               	subwf	??_xtoa,w
  7889  058A  1D03               	skipz
  7890  058B  2D8E               	goto	u4665
  7891  058C  3001               	movlw	1
  7892  058D  0256               	subwf	xtoa@w,w
  7893  058E                     u4665:
  7894  058E  1C03               	skipc
  7895  058F  2D91               	goto	u4661
  7896  0590  2D92               	goto	u4660
  7897  0591                     u4661:
  7898  0591  2D97               	goto	l1143
  7899  0592                     u4660:
  7900  0592                     l3773:
  7901  0592  0020               	movlb	0	; select bank0
  7902  0593  18E6               	btfsc	_flags,1
  7903  0594  2D96               	goto	u4671
  7904  0595  2D97               	goto	u4670
  7905  0596                     u4671:
  7906  0596  2CA6               	goto	l3737
  7907  0597                     u4670:
  7908  0597                     l1143:
  7909                           
  7910                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 678:     if (flags & (1 << 4)
      +                          ) {
  7911  0597  0020               	movlb	0	; select bank0
  7912  0598  1E66               	btfss	_flags,4
  7913  0599  2D9B               	goto	u4681
  7914  059A  2D9C               	goto	u4680
  7915  059B                     u4681:
  7916  059B  2DB6               	goto	l3781
  7917  059C                     u4680:
  7918  059C                     l3775:
  7919                           
  7920                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 679:         --i;
  7921  059C  30FF               	movlw	255
  7922  059D  07E0               	addwf	xtoa@i,f
  7923  059E  30FF               	movlw	255
  7924  059F  3DE1               	addwfc	xtoa@i+1,f
  7925  05A0                     l3777:
  7926                           
  7927                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 680:         dbuf[i] = x;
  7928  05A0  0846               	movf	xtoa@x,w
  7929  05A1  00C7               	movwf	??_xtoa
  7930  05A2  0860               	movf	xtoa@i,w
  7931  05A3  3EB2               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7932  05A4  0086               	movwf	6
  7933  05A5  3001               	movlw	1	; select bank3/4
  7934  05A6  0087               	movwf	7
  7935  05A7  0847               	movf	??_xtoa,w
  7936  05A8  0081               	movwf	1
  7937  05A9                     l3779:
  7938                           
  7939                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 681:         --i;
  7940  05A9  30FF               	movlw	255
  7941  05AA  07E0               	addwf	xtoa@i,f
  7942  05AB  30FF               	movlw	255
  7943  05AC  3DE1               	addwfc	xtoa@i+1,f
  7944                           
  7945                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 682:         dbuf[i] = '0';
  7946  05AD  3030               	movlw	48
  7947  05AE  00C7               	movwf	??_xtoa
  7948  05AF  0860               	movf	xtoa@i,w
  7949  05B0  3EB2               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7950  05B1  0086               	movwf	6
  7951  05B2  3001               	movlw	1	; select bank3/4
  7952  05B3  0087               	movwf	7
  7953  05B4  0847               	movf	??_xtoa,w
  7954  05B5  0081               	movwf	1
  7955  05B6                     l3781:
  7956                           
  7957                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 686:     return pad(fp, &dbuf
      +                          [i], w);
  7958  05B6  0860               	movf	xtoa@i,w
  7959  05B7  3EB2               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7960  05B8  00C7               	movwf	??_xtoa
  7961  05B9  0847               	movf	??_xtoa,w
  7962  05BA  00B5               	movwf	pad@buf
  7963  05BB  0857               	movf	xtoa@w+1,w
  7964  05BC  00B7               	movwf	pad@p+1
  7965  05BD  0856               	movf	xtoa@w,w
  7966  05BE  00B6               	movwf	pad@p
  7967  05BF  084F               	movf	xtoa@fp,w
  7968  05C0  3188  20A3  3184   	fcall	_pad
  7969  05C3  0020               	movlb	0	; select bank0
  7970  05C4  0836               	movf	?_pad+1,w
  7971  05C5  00BF               	movwf	?_xtoa+1
  7972  05C6  0835               	movf	?_pad,w
  7973  05C7  00BE               	movwf	?_xtoa
  7974  05C8                     l1145:
  7975  05C8  0008               	return
  7976  05C9                     __end_of_xtoa:
  7977                           
  7978                           	psect	text5
  7979  173C                     __ptext5:	
  7980 ;; *************** function _toupper *****************
  7981 ;; Defined at:
  7982 ;;		line 4 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/toupper.c"
  7983 ;; Parameters:    Size  Location     Type
  7984 ;;  c               2   11[BANK0 ] int 
  7985 ;; Auto vars:     Size  Location     Type
  7986 ;;		None
  7987 ;; Return value:  Size  Location     Type
  7988 ;;                  2   11[BANK0 ] int 
  7989 ;; Registers used:
  7990 ;;		wreg, status,2, status,0
  7991 ;; Tracked objects:
  7992 ;;		On entry : 0/0
  7993 ;;		On exit  : 0/0
  7994 ;;		Unchanged: 0/0
  7995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7996 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7997 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7998 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7999 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8000 ;;Total ram usage:        8 bytes
  8001 ;; Hardware stack levels used:    1
  8002 ;; Hardware stack levels required when called:    3
  8003 ;; This function calls:
  8004 ;;		_islower
  8005 ;; This function is called by:
  8006 ;;		_xtoa
  8007 ;; This function uses a non-reentrant model
  8008 ;;
  8009                           
  8010                           
  8011                           ;psect for function _toupper
  8012  173C                     _toupper:
  8013  173C                     l3637:	
  8014                           ;incstack = 0
  8015                           ; Regs used in _toupper: [wreg+status,2+status,0]
  8016                           
  8017  173C  0020               	movlb	0	; select bank0
  8018  173D  082B               	movf	toupper@c,w
  8019  173E  3E9F               	addlw	159
  8020  173F  00AD               	movwf	??_toupper
  8021  1740  30FF               	movlw	255
  8022  1741  3D2C               	addwfc	toupper@c+1,w
  8023  1742  00AE               	movwf	??_toupper+1
  8024  1743  3000               	movlw	0
  8025  1744  022E               	subwf	??_toupper+1,w
  8026  1745  301A               	movlw	26
  8027  1746  1903               	skipnz
  8028  1747  022D               	subwf	??_toupper,w
  8029  1748  1C03               	skipc
  8030  1749  2F4B               	goto	u4291
  8031  174A  2F4D               	goto	u4290
  8032  174B                     u4291:
  8033  174B  3001               	movlw	1
  8034  174C  2F4E               	goto	u4300
  8035  174D                     u4290:
  8036  174D  3000               	movlw	0
  8037  174E                     u4300:
  8038  174E  00AF               	movwf	??_toupper+2
  8039  174F  01B0               	clrf	??_toupper+3
  8040  1750  082F               	movf	??_toupper+2,w
  8041  1751  00B1               	movwf	_toupper$1555
  8042  1752  0830               	movf	??_toupper+3,w
  8043  1753  00B2               	movwf	_toupper$1555+1
  8044  1754                     l3641:
  8045  1754  0831               	movf	_toupper$1555,w
  8046  1755  0432               	iorwf	_toupper$1555+1,w
  8047  1756  1903               	btfsc	3,2
  8048  1757  2F59               	goto	u4311
  8049  1758  2F5A               	goto	u4310
  8050  1759                     u4311:
  8051  1759  2F61               	goto	l1295
  8052  175A                     u4310:
  8053  175A                     l3643:
  8054  175A  305F               	movlw	95
  8055  175B  052B               	andwf	toupper@c,w
  8056  175C  00AB               	movwf	?_toupper
  8057  175D  3000               	movlw	0
  8058  175E  052C               	andwf	toupper@c+1,w
  8059  175F  00AC               	movwf	?_toupper+1
  8060  1760  2F61               	goto	l1300
  8061  1761                     l1295:
  8062  1761                     l1300:
  8063  1761  0008               	return
  8064  1762                     __end_of_toupper:
  8065                           
  8066                           	psect	text6
  8067  1647                     __ptext6:	
  8068 ;; *************** function _islower *****************
  8069 ;; Defined at:
  8070 ;;		line 5 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/islower.c"
  8071 ;; Parameters:    Size  Location     Type
  8072 ;;  c               2    5[BANK0 ] int 
  8073 ;; Auto vars:     Size  Location     Type
  8074 ;;		None
  8075 ;; Return value:  Size  Location     Type
  8076 ;;                  2    5[BANK0 ] int 
  8077 ;; Registers used:
  8078 ;;		wreg, status,2, status,0
  8079 ;; Tracked objects:
  8080 ;;		On entry : 0/0
  8081 ;;		On exit  : 0/0
  8082 ;;		Unchanged: 0/0
  8083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8084 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8086 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8087 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8088 ;;Total ram usage:        6 bytes
  8089 ;; Hardware stack levels used:    1
  8090 ;; Hardware stack levels required when called:    2
  8091 ;; This function calls:
  8092 ;;		Nothing
  8093 ;; This function is called by:
  8094 ;;		_toupper
  8095 ;; This function uses a non-reentrant model
  8096 ;;
  8097                           
  8098                           
  8099                           ;psect for function _islower
  8100  1647                     _islower:
  8101  1647                     l3517:	
  8102                           ;incstack = 0
  8103                           ; Regs used in _islower: [wreg+status,2+status,0]
  8104                           
  8105  1647  0020               	movlb	0	; select bank0
  8106  1648  0825               	movf	islower@c,w
  8107  1649  3E9F               	addlw	159
  8108  164A  00A7               	movwf	??_islower
  8109  164B  30FF               	movlw	255
  8110  164C  3D26               	addwfc	islower@c+1,w
  8111  164D  00A8               	movwf	??_islower+1
  8112  164E  3000               	movlw	0
  8113  164F  0228               	subwf	??_islower+1,w
  8114  1650  301A               	movlw	26
  8115  1651  1903               	skipnz
  8116  1652  0227               	subwf	??_islower,w
  8117  1653  1C03               	skipc
  8118  1654  2E56               	goto	u3931
  8119  1655  2E58               	goto	u3930
  8120  1656                     u3931:
  8121  1656  3001               	movlw	1
  8122  1657  2E59               	goto	u3940
  8123  1658                     u3930:
  8124  1658  3000               	movlw	0
  8125  1659                     u3940:
  8126  1659  00A9               	movwf	??_islower+2
  8127  165A  01AA               	clrf	??_islower+3
  8128  165B  0829               	movf	??_islower+2,w
  8129  165C  00A5               	movwf	?_islower
  8130  165D  082A               	movf	??_islower+3,w
  8131  165E  00A6               	movwf	?_islower+1
  8132  165F                     l1306:
  8133  165F  0008               	return
  8134  1660                     __end_of_islower:
  8135                           
  8136                           	psect	text7
  8137  162E                     __ptext7:	
  8138 ;; *************** function _isupper *****************
  8139 ;; Defined at:
  8140 ;;		line 5 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/isupper.c"
  8141 ;; Parameters:    Size  Location     Type
  8142 ;;  c               2    5[BANK0 ] int 
  8143 ;; Auto vars:     Size  Location     Type
  8144 ;;		None
  8145 ;; Return value:  Size  Location     Type
  8146 ;;                  2    5[BANK0 ] int 
  8147 ;; Registers used:
  8148 ;;		wreg, status,2, status,0
  8149 ;; Tracked objects:
  8150 ;;		On entry : 0/0
  8151 ;;		On exit  : 0/0
  8152 ;;		Unchanged: 0/0
  8153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8154 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8156 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8157 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8158 ;;Total ram usage:        6 bytes
  8159 ;; Hardware stack levels used:    1
  8160 ;; Hardware stack levels required when called:    2
  8161 ;; This function calls:
  8162 ;;		Nothing
  8163 ;; This function is called by:
  8164 ;;		_xtoa
  8165 ;; This function uses a non-reentrant model
  8166 ;;
  8167                           
  8168                           
  8169                           ;psect for function _isupper
  8170  162E                     _isupper:
  8171  162E                     l3629:	
  8172                           ;incstack = 0
  8173                           ; Regs used in _isupper: [wreg+status,2+status,0]
  8174                           
  8175  162E  0020               	movlb	0	; select bank0
  8176  162F  0825               	movf	isupper@c,w
  8177  1630  3EBF               	addlw	191
  8178  1631  00A7               	movwf	??_isupper
  8179  1632  30FF               	movlw	255
  8180  1633  3D26               	addwfc	isupper@c+1,w
  8181  1634  00A8               	movwf	??_isupper+1
  8182  1635  3000               	movlw	0
  8183  1636  0228               	subwf	??_isupper+1,w
  8184  1637  301A               	movlw	26
  8185  1638  1903               	skipnz
  8186  1639  0227               	subwf	??_isupper,w
  8187  163A  1C03               	skipc
  8188  163B  2E3D               	goto	u4251
  8189  163C  2E3F               	goto	u4250
  8190  163D                     u4251:
  8191  163D  3001               	movlw	1
  8192  163E  2E40               	goto	u4260
  8193  163F                     u4250:
  8194  163F  3000               	movlw	0
  8195  1640                     u4260:
  8196  1640  00A9               	movwf	??_isupper+2
  8197  1641  01AA               	clrf	??_isupper+3
  8198  1642  0829               	movf	??_isupper+2,w
  8199  1643  00A5               	movwf	?_isupper
  8200  1644  082A               	movf	??_isupper+3,w
  8201  1645  00A6               	movwf	?_isupper+1
  8202  1646                     l1245:
  8203  1646  0008               	return
  8204  1647                     __end_of_isupper:
  8205                           
  8206                           	psect	text8
  8207  1696                     __ptext8:	
  8208 ;; *************** function _isalpha *****************
  8209 ;; Defined at:
  8210 ;;		line 5 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/isalpha.c"
  8211 ;; Parameters:    Size  Location     Type
  8212 ;;  c               2    5[BANK0 ] int 
  8213 ;; Auto vars:     Size  Location     Type
  8214 ;;		None
  8215 ;; Return value:  Size  Location     Type
  8216 ;;                  2    5[BANK0 ] int 
  8217 ;; Registers used:
  8218 ;;		wreg, status,2, status,0
  8219 ;; Tracked objects:
  8220 ;;		On entry : 0/0
  8221 ;;		On exit  : 0/0
  8222 ;;		Unchanged: 0/0
  8223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8224 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8226 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8227 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8228 ;;Total ram usage:        8 bytes
  8229 ;; Hardware stack levels used:    1
  8230 ;; Hardware stack levels required when called:    2
  8231 ;; This function calls:
  8232 ;;		Nothing
  8233 ;; This function is called by:
  8234 ;;		_xtoa
  8235 ;; This function uses a non-reentrant model
  8236 ;;
  8237                           
  8238                           
  8239                           ;psect for function _isalpha
  8240  1696                     _isalpha:
  8241  1696                     l3633:	
  8242                           ;incstack = 0
  8243                           ; Regs used in _isalpha: [wreg+status,2+status,0]
  8244                           
  8245  1696  3020               	movlw	32
  8246  1697  0020               	movlb	0	; select bank0
  8247  1698  0425               	iorwf	isalpha@c,w
  8248  1699  00A7               	movwf	??_isalpha
  8249  169A  3000               	movlw	0
  8250  169B  0426               	iorwf	isalpha@c+1,w
  8251  169C  00A8               	movwf	??_isalpha+1
  8252  169D  0827               	movf	??_isalpha,w
  8253  169E  3E9F               	addlw	159
  8254  169F  00A9               	movwf	??_isalpha+2
  8255  16A0  30FF               	movlw	255
  8256  16A1  3D28               	addwfc	??_isalpha+1,w
  8257  16A2  00AA               	movwf	??_isalpha+3
  8258  16A3  3000               	movlw	0
  8259  16A4  022A               	subwf	??_isalpha+3,w
  8260  16A5  301A               	movlw	26
  8261  16A6  1903               	skipnz
  8262  16A7  0229               	subwf	??_isalpha+2,w
  8263  16A8  1C03               	skipc
  8264  16A9  2EAB               	goto	u4271
  8265  16AA  2EAD               	goto	u4270
  8266  16AB                     u4271:
  8267  16AB  3001               	movlw	1
  8268  16AC  2EAE               	goto	u4280
  8269  16AD                     u4270:
  8270  16AD  3000               	movlw	0
  8271  16AE                     u4280:
  8272  16AE  00AB               	movwf	??_isalpha+4
  8273  16AF  01AC               	clrf	??_isalpha+5
  8274  16B0  082B               	movf	??_isalpha+4,w
  8275  16B1  00A5               	movwf	?_isalpha
  8276  16B2  082C               	movf	??_isalpha+5,w
  8277  16B3  00A6               	movwf	?_isalpha+1
  8278  16B4                     l1225:
  8279  16B4  0008               	return
  8280  16B5                     __end_of_isalpha:
  8281                           
  8282                           	psect	text9
  8283  05C9                     __ptext9:	
  8284 ;; *************** function _dtoa *****************
  8285 ;; Defined at:
  8286 ;;		line 287 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c"
  8287 ;; Parameters:    Size  Location     Type
  8288 ;;  fp              1    wreg     PTR struct _IO_FILE
  8289 ;;		 -> sprintf@f(5), 
  8290 ;;  d               8   32[BANK0 ] long long 
  8291 ;; Auto vars:     Size  Location     Type
  8292 ;;  fp              1   43[BANK0 ] PTR struct _IO_FILE
  8293 ;;		 -> sprintf@f(5), 
  8294 ;;  n               8   52[BANK0 ] long long 
  8295 ;;  i               2   60[BANK0 ] int 
  8296 ;;  s               2   50[BANK0 ] int 
  8297 ;;  w               2   48[BANK0 ] int 
  8298 ;;  p               2   46[BANK0 ] int 
  8299 ;; Return value:  Size  Location     Type
  8300 ;;                  2   32[BANK0 ] int 
  8301 ;; Registers used:
  8302 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8303 ;; Tracked objects:
  8304 ;;		On entry : 0/0
  8305 ;;		On exit  : 0/0
  8306 ;;		Unchanged: 0/0
  8307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8308 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8309 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8310 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8311 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8312 ;;Total ram usage:       30 bytes
  8313 ;; Hardware stack levels used:    1
  8314 ;; Hardware stack levels required when called:    6
  8315 ;; This function calls:
  8316 ;;		___aodiv
  8317 ;;		___aomod
  8318 ;;		_abs
  8319 ;;		_pad
  8320 ;; This function is called by:
  8321 ;;		_vfpfcnvrt
  8322 ;; This function uses a non-reentrant model
  8323 ;;
  8324                           
  8325                           
  8326                           ;psect for function _dtoa
  8327  05C9                     _dtoa:
  8328                           
  8329                           ;incstack = 0
  8330                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8331                           ;dtoa@fp stored from wreg
  8332  05C9  0020               	movlb	0	; select bank0
  8333  05CA  00CB               	movwf	dtoa@fp
  8334  05CB                     l3663:
  8335                           
  8336                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 287: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 288: {;/opt/mic
      +                          rochip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 289:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.30/pic/sources/c99/common/doprnt.c: 290:     long long n;;/opt/microchip/xc8/v2
      +                          .30/pic/sources/c99/common/doprnt.c: 293:     n = d;
  8337  05CB  0840               	movf	dtoa@d,w
  8338  05CC  00D4               	movwf	dtoa@n
  8339  05CD  0841               	movf	dtoa@d+1,w
  8340  05CE  00D5               	movwf	dtoa@n+1
  8341  05CF  0842               	movf	dtoa@d+2,w
  8342  05D0  00D6               	movwf	dtoa@n+2
  8343  05D1  0843               	movf	dtoa@d+3,w
  8344  05D2  00D7               	movwf	dtoa@n+3
  8345  05D3  0844               	movf	dtoa@d+4,w
  8346  05D4  00D8               	movwf	dtoa@n+4
  8347  05D5  0845               	movf	dtoa@d+5,w
  8348  05D6  00D9               	movwf	dtoa@n+5
  8349  05D7  0846               	movf	dtoa@d+6,w
  8350  05D8  00DA               	movwf	dtoa@n+6
  8351  05D9  0847               	movf	dtoa@d+7,w
  8352  05DA  00DB               	movwf	dtoa@n+7
  8353  05DB                     l3665:
  8354                           
  8355                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 294:     s = n < 0 ? 1 : 0;
  8356  05DB  3054               	movlw	low dtoa@n
  8357  05DC  0086               	movwf	6
  8358  05DD  3000               	movlw	high dtoa@n
  8359  05DE  0087               	movwf	7
  8360  05DF  3F47               	moviw [7]fsr1
  8361  05E0  00C8               	movwf	??_dtoa
  8362  05E1  1BC8               	btfsc	??_dtoa,7
  8363  05E2  2DE4               	goto	u4361
  8364  05E3  2DE6               	goto	u4360
  8365  05E4                     u4361:
  8366  05E4  3001               	movlw	1
  8367  05E5  2DE7               	goto	u4370
  8368  05E6                     u4360:
  8369  05E6  3000               	movlw	0
  8370  05E7                     u4370:
  8371  05E7  0020               	movlb	0	; select bank0
  8372  05E8  00C9               	movwf	??_dtoa+1
  8373  05E9  01CA               	clrf	??_dtoa+2
  8374  05EA  0849               	movf	??_dtoa+1,w
  8375  05EB  00D2               	movwf	dtoa@s
  8376  05EC  084A               	movf	??_dtoa+2,w
  8377  05ED  00D3               	movwf	dtoa@s+1
  8378  05EE                     l3667:
  8379                           
  8380                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 295:     if (s) {
  8381  05EE  0852               	movf	dtoa@s,w
  8382  05EF  0453               	iorwf	dtoa@s+1,w
  8383  05F0  1903               	btfsc	3,2
  8384  05F1  2DF3               	goto	u4381
  8385  05F2  2DF4               	goto	u4380
  8386  05F3                     u4381:
  8387  05F3  2E12               	goto	l1092
  8388  05F4                     u4380:
  8389  05F4                     l3669:
  8390                           
  8391                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 296:         n = -n;
  8392  05F4  09D4               	comf	dtoa@n,f
  8393  05F5  09D5               	comf	dtoa@n+1,f
  8394  05F6  09D6               	comf	dtoa@n+2,f
  8395  05F7  09D7               	comf	dtoa@n+3,f
  8396  05F8  09D8               	comf	dtoa@n+4,f
  8397  05F9  09D9               	comf	dtoa@n+5,f
  8398  05FA  09DA               	comf	dtoa@n+6,f
  8399  05FB  09DB               	comf	dtoa@n+7,f
  8400  05FC  0AD4               	incf	dtoa@n,f
  8401  05FD  1D03               	skipz
  8402  05FE  2E12               	goto	u439lld
  8403  05FF  0AD5               	incf	dtoa@n+1,f
  8404  0600  1D03               	skipz
  8405  0601  2E12               	goto	u439lld
  8406  0602  0AD6               	incf	dtoa@n+2,f
  8407  0603  1D03               	skipz
  8408  0604  2E12               	goto	u439lld
  8409  0605  0AD7               	incf	dtoa@n+3,f
  8410  0606  1D03               	skipz
  8411  0607  2E12               	goto	u439lld
  8412  0608  0AD8               	incf	dtoa@n+4,f
  8413  0609  1D03               	skipz
  8414  060A  2E12               	goto	u439lld
  8415  060B  0AD9               	incf	dtoa@n+5,f
  8416  060C  1D03               	skipz
  8417  060D  2E12               	goto	u439lld
  8418  060E  0ADA               	incf	dtoa@n+6,f
  8419  060F  1D03               	skipz
  8420  0610  2E12               	goto	u439lld
  8421  0611  0ADB               	incf	dtoa@n+7,f
  8422  0612                     u439lld:
  8423  0612                     l1092:	
  8424                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 297:     }
  8425                           
  8426                           
  8427                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 300:     if (!(prec < 0)) {
  8428  0612  0021               	movlb	1	; select bank1
  8429  0613  1BED               	btfsc	(_prec+1)^(0+128),7
  8430  0614  2E16               	goto	u4401
  8431  0615  2E17               	goto	u4400
  8432  0616                     u4401:
  8433  0616  2E1C               	goto	l1093
  8434  0617                     u4400:
  8435  0617                     l3671:
  8436                           
  8437                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 301:         flags &= ~(1 << 
      +                          1);
  8438  0617  30FD               	movlw	253
  8439  0618  0020               	movlb	0	; select bank0
  8440  0619  05E6               	andwf	_flags,f
  8441  061A  30FF               	movlw	255
  8442  061B  05E7               	andwf	_flags+1,f
  8443  061C                     l1093:	
  8444                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 302:     }
  8445                           
  8446                           
  8447                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 303:     p = (0 < prec) ? pre
      +                          c : 1;
  8448  061C  0021               	movlb	1	; select bank1
  8449  061D  086D               	movf	(_prec+1)^(0+128),w
  8450  061E  3A80               	xorlw	128
  8451  061F  0020               	movlb	0	; select bank0
  8452  0620  00C8               	movwf	??_dtoa
  8453  0621  3080               	movlw	128
  8454  0622  0248               	subwf	??_dtoa,w
  8455  0623  1D03               	skipz
  8456  0624  2E28               	goto	u4415
  8457  0625  3001               	movlw	1
  8458  0626  0021               	movlb	1	; select bank1
  8459  0627  026C               	subwf	_prec^(0+128),w
  8460  0628                     u4415:
  8461  0628  1803               	skipnc
  8462  0629  2E2B               	goto	u4411
  8463  062A  2E2C               	goto	u4410
  8464  062B                     u4411:
  8465  062B  2E32               	goto	l3675
  8466  062C                     u4410:
  8467  062C                     l3673:
  8468  062C  3001               	movlw	1
  8469  062D  0020               	movlb	0	; select bank0
  8470  062E  00CE               	movwf	dtoa@p
  8471  062F  3000               	movlw	0
  8472  0630  00CF               	movwf	dtoa@p+1
  8473  0631  2E3A               	goto	l1097
  8474  0632                     l3675:
  8475  0632  0021               	movlb	1	; select bank1
  8476  0633  086D               	movf	(_prec+1)^(0+128),w
  8477  0634  0020               	movlb	0	; select bank0
  8478  0635  00CF               	movwf	dtoa@p+1
  8479  0636  0021               	movlb	1	; select bank1
  8480  0637  086C               	movf	_prec^(0+128),w
  8481  0638  0020               	movlb	0	; select bank0
  8482  0639  00CE               	movwf	dtoa@p
  8483  063A                     l1097:
  8484                           
  8485                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 304:     w = width;
  8486  063A  0021               	movlb	1	; select bank1
  8487  063B  086B               	movf	(_width+1)^(0+128),w
  8488  063C  0020               	movlb	0	; select bank0
  8489  063D  00D1               	movwf	dtoa@w+1
  8490  063E  0021               	movlb	1	; select bank1
  8491  063F  086A               	movf	_width^(0+128),w
  8492  0640  0020               	movlb	0	; select bank0
  8493  0641  00D0               	movwf	dtoa@w
  8494  0642                     l3677:
  8495                           
  8496                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 305:     if (s || (flags & (1
      +                           << 2))) {
  8497  0642  0852               	movf	dtoa@s,w
  8498  0643  0453               	iorwf	dtoa@s+1,w
  8499  0644  1D03               	btfss	3,2
  8500  0645  2E47               	goto	u4421
  8501  0646  2E48               	goto	u4420
  8502  0647                     u4421:
  8503  0647  2E4C               	goto	l3681
  8504  0648                     u4420:
  8505  0648                     l3679:
  8506  0648  1D66               	btfss	_flags,2
  8507  0649  2E4B               	goto	u4431
  8508  064A  2E4C               	goto	u4430
  8509  064B                     u4431:
  8510  064B  2E50               	goto	l1098
  8511  064C                     u4430:
  8512  064C                     l3681:
  8513                           
  8514                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 306:         --w;
  8515  064C  30FF               	movlw	255
  8516  064D  07D0               	addwf	dtoa@w,f
  8517  064E  30FF               	movlw	255
  8518  064F  3DD1               	addwfc	dtoa@w+1,f
  8519  0650                     l1098:	
  8520                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 307:     }
  8521                           
  8522                           
  8523                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 310:     i = sizeof(dbuf) - 1
      +                          ;
  8524  0650  301F               	movlw	31
  8525  0651  00DC               	movwf	dtoa@i
  8526  0652  3000               	movlw	0
  8527  0653  00DD               	movwf	dtoa@i+1
  8528  0654                     l3683:
  8529                           
  8530                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 311:     dbuf[i] = '\0';
  8531  0654  0023               	movlb	3	; select bank3
  8532  0655  01D1               	clrf	(_dbuf^(0+384)+31)
  8533                           
  8534                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 312:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8535  0656  2EC0               	goto	l1101
  8536  0657                     l3685:
  8537                           
  8538                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 313:         --i;
  8539  0657  30FF               	movlw	255
  8540  0658  0020               	movlb	0	; select bank0
  8541  0659  07DC               	addwf	dtoa@i,f
  8542  065A  30FF               	movlw	255
  8543  065B  3DDD               	addwfc	dtoa@i+1,f
  8544  065C                     l3687:
  8545                           
  8546                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 314:         dbuf[i] = (char)
      +                          ((int)'0' + abs(n % 10));
  8547  065C  300A               	movlw	10
  8548  065D  00A5               	movwf	___aomod@divisor
  8549  065E  01A6               	clrf	___aomod@divisor+1
  8550  065F  01A7               	clrf	___aomod@divisor+2
  8551  0660  01A8               	clrf	___aomod@divisor+3
  8552  0661  01A9               	clrf	___aomod@divisor+4
  8553  0662  01AA               	clrf	___aomod@divisor+5
  8554  0663  01AB               	clrf	___aomod@divisor+6
  8555  0664  01AC               	clrf	___aomod@divisor+7
  8556  0665  0854               	movf	dtoa@n,w
  8557  0666  00AD               	movwf	___aomod@dividend
  8558  0667  0855               	movf	dtoa@n+1,w
  8559  0668  00AE               	movwf	___aomod@dividend+1
  8560  0669  0856               	movf	dtoa@n+2,w
  8561  066A  00AF               	movwf	___aomod@dividend+2
  8562  066B  0857               	movf	dtoa@n+3,w
  8563  066C  00B0               	movwf	___aomod@dividend+3
  8564  066D  0858               	movf	dtoa@n+4,w
  8565  066E  00B1               	movwf	___aomod@dividend+4
  8566  066F  0859               	movf	dtoa@n+5,w
  8567  0670  00B2               	movwf	___aomod@dividend+5
  8568  0671  085A               	movf	dtoa@n+6,w
  8569  0672  00B3               	movwf	___aomod@dividend+6
  8570  0673  085B               	movf	dtoa@n+7,w
  8571  0674  00B4               	movwf	___aomod@dividend+7
  8572  0675  318C  24A8  3185   	fcall	___aomod
  8573  0678  0020               	movlb	0	; select bank0
  8574  0679  0826               	movf	?___aomod+1,w
  8575  067A  00B9               	movwf	abs@a+1
  8576  067B  0825               	movf	?___aomod,w
  8577  067C  00B8               	movwf	abs@a
  8578  067D  3196  267A  3185   	fcall	_abs
  8579  0680  0020               	movlb	0	; select bank0
  8580  0681  0838               	movf	?_abs,w
  8581  0682  3E30               	addlw	48
  8582  0683  00C8               	movwf	??_dtoa
  8583  0684  085C               	movf	dtoa@i,w
  8584  0685  3EB2               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8585  0686  0086               	movwf	6
  8586  0687  3001               	movlw	1	; select bank3/4
  8587  0688  0087               	movwf	7
  8588  0689  0848               	movf	??_dtoa,w
  8589  068A  0081               	movwf	1
  8590  068B                     l3689:
  8591                           
  8592                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 315:         --p;
  8593  068B  30FF               	movlw	255
  8594  068C  07CE               	addwf	dtoa@p,f
  8595  068D  30FF               	movlw	255
  8596  068E  3DCF               	addwfc	dtoa@p+1,f
  8597  068F                     l3691:
  8598                           
  8599                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 316:         --w;
  8600  068F  30FF               	movlw	255
  8601  0690  07D0               	addwf	dtoa@w,f
  8602  0691  30FF               	movlw	255
  8603  0692  3DD1               	addwfc	dtoa@w+1,f
  8604  0693                     l3693:
  8605                           
  8606                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 317:         n = n / 10;
  8607  0693  300A               	movlw	10
  8608  0694  00A5               	movwf	___aodiv@divisor
  8609  0695  01A6               	clrf	___aodiv@divisor+1
  8610  0696  01A7               	clrf	___aodiv@divisor+2
  8611  0697  01A8               	clrf	___aodiv@divisor+3
  8612  0698  01A9               	clrf	___aodiv@divisor+4
  8613  0699  01AA               	clrf	___aodiv@divisor+5
  8614  069A  01AB               	clrf	___aodiv@divisor+6
  8615  069B  01AC               	clrf	___aodiv@divisor+7
  8616  069C  0854               	movf	dtoa@n,w
  8617  069D  00AD               	movwf	___aodiv@dividend
  8618  069E  0855               	movf	dtoa@n+1,w
  8619  069F  00AE               	movwf	___aodiv@dividend+1
  8620  06A0  0856               	movf	dtoa@n+2,w
  8621  06A1  00AF               	movwf	___aodiv@dividend+2
  8622  06A2  0857               	movf	dtoa@n+3,w
  8623  06A3  00B0               	movwf	___aodiv@dividend+3
  8624  06A4  0858               	movf	dtoa@n+4,w
  8625  06A5  00B1               	movwf	___aodiv@dividend+4
  8626  06A6  0859               	movf	dtoa@n+5,w
  8627  06A7  00B2               	movwf	___aodiv@dividend+5
  8628  06A8  085A               	movf	dtoa@n+6,w
  8629  06A9  00B3               	movwf	___aodiv@dividend+6
  8630  06AA  085B               	movf	dtoa@n+7,w
  8631  06AB  00B4               	movwf	___aodiv@dividend+7
  8632  06AC  318D  2595  3185   	fcall	___aodiv
  8633  06AF  0020               	movlb	0	; select bank0
  8634  06B0  0825               	movf	?___aodiv,w
  8635  06B1  00D4               	movwf	dtoa@n
  8636  06B2  0826               	movf	?___aodiv+1,w
  8637  06B3  00D5               	movwf	dtoa@n+1
  8638  06B4  0827               	movf	?___aodiv+2,w
  8639  06B5  00D6               	movwf	dtoa@n+2
  8640  06B6  0828               	movf	?___aodiv+3,w
  8641  06B7  00D7               	movwf	dtoa@n+3
  8642  06B8  0829               	movf	?___aodiv+4,w
  8643  06B9  00D8               	movwf	dtoa@n+4
  8644  06BA  082A               	movf	?___aodiv+5,w
  8645  06BB  00D9               	movwf	dtoa@n+5
  8646  06BC  082B               	movf	?___aodiv+6,w
  8647  06BD  00DA               	movwf	dtoa@n+6
  8648  06BE  082C               	movf	?___aodiv+7,w
  8649  06BF  00DB               	movwf	dtoa@n+7
  8650  06C0                     l1101:	
  8651                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 318:     }
  8652                           
  8653                           
  8654                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 312:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8655  06C0  0020               	movlb	0	; select bank0
  8656  06C1  085D               	movf	dtoa@i+1,w
  8657  06C2  3A80               	xorlw	128
  8658  06C3  00C8               	movwf	??_dtoa
  8659  06C4  3080               	movlw	128
  8660  06C5  0248               	subwf	??_dtoa,w
  8661  06C6  1D03               	skipz
  8662  06C7  2ECA               	goto	u4445
  8663  06C8  3001               	movlw	1
  8664  06C9  025C               	subwf	dtoa@i,w
  8665  06CA                     u4445:
  8666  06CA  1C03               	skipc
  8667  06CB  2ECD               	goto	u4441
  8668  06CC  2ECE               	goto	u4440
  8669  06CD                     u4441:
  8670  06CD  2EFB               	goto	l3703
  8671  06CE                     u4440:
  8672  06CE                     l3695:
  8673  06CE  0020               	movlb	0	; select bank0
  8674  06CF  0854               	movf	dtoa@n,w
  8675  06D0  0455               	iorwf	dtoa@n+1,w
  8676  06D1  0456               	iorwf	dtoa@n+2,w
  8677  06D2  0457               	iorwf	dtoa@n+3,w
  8678  06D3  0458               	iorwf	dtoa@n+4,w
  8679  06D4  0459               	iorwf	dtoa@n+5,w
  8680  06D5  045A               	iorwf	dtoa@n+6,w
  8681  06D6  045B               	iorwf	dtoa@n+7,w
  8682  06D7  1D03               	skipz
  8683  06D8  2EDA               	goto	u4451
  8684  06D9  2EDB               	goto	u4450
  8685  06DA                     u4451:
  8686  06DA  2E57               	goto	l3685
  8687  06DB                     u4450:
  8688  06DB                     l3697:
  8689  06DB  084F               	movf	dtoa@p+1,w
  8690  06DC  3A80               	xorlw	128
  8691  06DD  00C8               	movwf	??_dtoa
  8692  06DE  3080               	movlw	128
  8693  06DF  0248               	subwf	??_dtoa,w
  8694  06E0  1D03               	skipz
  8695  06E1  2EE4               	goto	u4465
  8696  06E2  3001               	movlw	1
  8697  06E3  024E               	subwf	dtoa@p,w
  8698  06E4                     u4465:
  8699  06E4  1803               	skipnc
  8700  06E5  2EE7               	goto	u4461
  8701  06E6  2EE8               	goto	u4460
  8702  06E7                     u4461:
  8703  06E7  2E57               	goto	l3685
  8704  06E8                     u4460:
  8705  06E8                     l3699:
  8706  06E8  0020               	movlb	0	; select bank0
  8707  06E9  0851               	movf	dtoa@w+1,w
  8708  06EA  3A80               	xorlw	128
  8709  06EB  00C8               	movwf	??_dtoa
  8710  06EC  3080               	movlw	128
  8711  06ED  0248               	subwf	??_dtoa,w
  8712  06EE  1D03               	skipz
  8713  06EF  2EF2               	goto	u4475
  8714  06F0  3001               	movlw	1
  8715  06F1  0250               	subwf	dtoa@w,w
  8716  06F2                     u4475:
  8717  06F2  1C03               	skipc
  8718  06F3  2EF5               	goto	u4471
  8719  06F4  2EF6               	goto	u4470
  8720  06F5                     u4471:
  8721  06F5  2EFB               	goto	l3703
  8722  06F6                     u4470:
  8723  06F6                     l3701:
  8724  06F6  0020               	movlb	0	; select bank0
  8725  06F7  18E6               	btfsc	_flags,1
  8726  06F8  2EFA               	goto	u4481
  8727  06F9  2EFB               	goto	u4480
  8728  06FA                     u4481:
  8729  06FA  2E57               	goto	l3685
  8730  06FB                     u4480:
  8731  06FB                     l3703:
  8732                           
  8733                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 321:     if (s || (flags & (1
      +                           << 2))) {
  8734  06FB  0020               	movlb	0	; select bank0
  8735  06FC  0852               	movf	dtoa@s,w
  8736  06FD  0453               	iorwf	dtoa@s+1,w
  8737  06FE  1D03               	btfss	3,2
  8738  06FF  2F01               	goto	u4491
  8739  0700  2F02               	goto	u4490
  8740  0701                     u4491:
  8741  0701  2F06               	goto	l3707
  8742  0702                     u4490:
  8743  0702                     l3705:
  8744  0702  1D66               	btfss	_flags,2
  8745  0703  2F05               	goto	u4501
  8746  0704  2F06               	goto	u4500
  8747  0705                     u4501:
  8748  0705  2F22               	goto	l3717
  8749  0706                     u4500:
  8750  0706                     l3707:
  8751                           
  8752                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 322:         --i;
  8753  0706  30FF               	movlw	255
  8754  0707  07DC               	addwf	dtoa@i,f
  8755  0708  30FF               	movlw	255
  8756  0709  3DDD               	addwfc	dtoa@i+1,f
  8757  070A                     l3709:
  8758                           
  8759                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 323:         dbuf[i] = s ? '-
      +                          ' : '+';
  8760  070A  0852               	movf	dtoa@s,w
  8761  070B  0453               	iorwf	dtoa@s+1,w
  8762  070C  1D03               	btfss	3,2
  8763  070D  2F0F               	goto	u4511
  8764  070E  2F10               	goto	u4510
  8765  070F                     u4511:
  8766  070F  2F15               	goto	l3713
  8767  0710                     u4510:
  8768  0710                     l3711:
  8769  0710  302B               	movlw	43
  8770  0711  00CC               	movwf	_dtoa$1412
  8771  0712  3000               	movlw	0
  8772  0713  00CD               	movwf	_dtoa$1412+1
  8773  0714  2F19               	goto	l3715
  8774  0715                     l3713:
  8775  0715  302D               	movlw	45
  8776  0716  00CC               	movwf	_dtoa$1412
  8777  0717  3000               	movlw	0
  8778  0718  00CD               	movwf	_dtoa$1412+1
  8779  0719                     l3715:
  8780  0719  084C               	movf	_dtoa$1412,w
  8781  071A  00C8               	movwf	??_dtoa
  8782  071B  085C               	movf	dtoa@i,w
  8783  071C  3EB2               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8784  071D  0086               	movwf	6
  8785  071E  3001               	movlw	1	; select bank3/4
  8786  071F  0087               	movwf	7
  8787  0720  0848               	movf	??_dtoa,w
  8788  0721  0081               	movwf	1
  8789  0722                     l3717:
  8790                           
  8791                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 327:     return pad(fp, &dbuf
      +                          [i], w);
  8792  0722  085C               	movf	dtoa@i,w
  8793  0723  3EB2               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8794  0724  00C8               	movwf	??_dtoa
  8795  0725  0848               	movf	??_dtoa,w
  8796  0726  00B5               	movwf	pad@buf
  8797  0727  0851               	movf	dtoa@w+1,w
  8798  0728  00B7               	movwf	pad@p+1
  8799  0729  0850               	movf	dtoa@w,w
  8800  072A  00B6               	movwf	pad@p
  8801  072B  084B               	movf	dtoa@fp,w
  8802  072C  3188  20A3  3185   	fcall	_pad
  8803  072F  0020               	movlb	0	; select bank0
  8804  0730  0836               	movf	?_pad+1,w
  8805  0731  00C1               	movwf	?_dtoa+1
  8806  0732  0835               	movf	?_pad,w
  8807  0733  00C0               	movwf	?_dtoa
  8808  0734                     l1115:
  8809  0734  0008               	return
  8810  0735                     __end_of_dtoa:
  8811                           
  8812                           	psect	text10
  8813  08A3                     __ptext10:	
  8814 ;; *************** function _pad *****************
  8815 ;; Defined at:
  8816 ;;		line 72 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c"
  8817 ;; Parameters:    Size  Location     Type
  8818 ;;  fp              1    wreg     PTR struct _IO_FILE
  8819 ;;		 -> sprintf@f(5), 
  8820 ;;  buf             1   21[BANK0 ] PTR unsigned char 
  8821 ;;		 -> dbuf(32), 
  8822 ;;  p               2   22[BANK0 ] int 
  8823 ;; Auto vars:     Size  Location     Type
  8824 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  8825 ;;		 -> sprintf@f(5), 
  8826 ;;  w               2   27[BANK0 ] int 
  8827 ;;  i               2   25[BANK0 ] int 
  8828 ;; Return value:  Size  Location     Type
  8829 ;;                  2   21[BANK0 ] int 
  8830 ;; Registers used:
  8831 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8832 ;; Tracked objects:
  8833 ;;		On entry : 0/0
  8834 ;;		On exit  : 0/0
  8835 ;;		Unchanged: 0/0
  8836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8837 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8838 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8839 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8840 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8841 ;;Total ram usage:        9 bytes
  8842 ;; Hardware stack levels used:    1
  8843 ;; Hardware stack levels required when called:    5
  8844 ;; This function calls:
  8845 ;;		_fputc
  8846 ;;		_fputs
  8847 ;;		_strlen
  8848 ;; This function is called by:
  8849 ;;		_dtoa
  8850 ;;		_xtoa
  8851 ;; This function uses a non-reentrant model
  8852 ;;
  8853                           
  8854                           
  8855                           ;psect for function _pad
  8856  08A3                     _pad:
  8857                           
  8858                           ;incstack = 0
  8859                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8860                           ;pad@fp stored from wreg
  8861  08A3  0020               	movlb	0	; select bank0
  8862  08A4  00BD               	movwf	pad@fp
  8863  08A5                     l3603:
  8864                           
  8865                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.30/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  8866  08A5  1C66               	btfss	_flags,0
  8867  08A6  28A8               	goto	u4201
  8868  08A7  28A9               	goto	u4200
  8869  08A8                     u4201:
  8870  08A8  28B1               	goto	l3607
  8871  08A9                     u4200:
  8872  08A9                     l3605:
  8873                           
  8874                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  8875  08A9  083D               	movf	pad@fp,w
  8876  08AA  00B8               	movwf	??_pad
  8877  08AB  0838               	movf	??_pad,w
  8878  08AC  00AD               	movwf	fputs@fp
  8879  08AD  0835               	movf	pad@buf,w
  8880  08AE  3197  2762  3188   	fcall	_fputs
  8881  08B1                     l3607:
  8882                           
  8883                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  8884  08B1  0020               	movlb	0	; select bank0
  8885  08B2  1BB7               	btfsc	pad@p+1,7
  8886  08B3  28B5               	goto	u4211
  8887  08B4  28B6               	goto	u4210
  8888  08B5                     u4211:
  8889  08B5  28BB               	goto	l3611
  8890  08B6                     u4210:
  8891  08B6                     l3609:
  8892  08B6  0837               	movf	pad@p+1,w
  8893  08B7  00BC               	movwf	pad@w+1
  8894  08B8  0836               	movf	pad@p,w
  8895  08B9  00BB               	movwf	pad@w
  8896  08BA  28BD               	goto	l1084
  8897  08BB                     l3611:
  8898  08BB  01BB               	clrf	pad@w
  8899  08BC  01BC               	clrf	pad@w+1
  8900  08BD                     l1084:
  8901                           
  8902                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  8903  08BD  01B9               	clrf	pad@i
  8904  08BE  01BA               	clrf	pad@i+1
  8905                           
  8906                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  8907  08BF  28D1               	goto	l3617
  8908  08C0                     l3613:
  8909                           
  8910                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  8911  08C0  3020               	movlw	32
  8912  08C1  0020               	movlb	0	; select bank0
  8913  08C2  00A5               	movwf	fputc@c
  8914  08C3  3000               	movlw	0
  8915  08C4  00A6               	movwf	fputc@c+1
  8916  08C5  083D               	movf	pad@fp,w
  8917  08C6  00B8               	movwf	??_pad
  8918  08C7  0838               	movf	??_pad,w
  8919  08C8  00A7               	movwf	fputc@fp
  8920  08C9  3188  2051  3188   	fcall	_fputc
  8921  08CC                     l3615:
  8922                           
  8923                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 86:         ++i;
  8924  08CC  3001               	movlw	1
  8925  08CD  0020               	movlb	0	; select bank0
  8926  08CE  07B9               	addwf	pad@i,f
  8927  08CF  3000               	movlw	0
  8928  08D0  3DBA               	addwfc	pad@i+1,f
  8929  08D1                     l3617:
  8930                           
  8931                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  8932  08D1  083A               	movf	pad@i+1,w
  8933  08D2  3A80               	xorlw	128
  8934  08D3  00B8               	movwf	??_pad
  8935  08D4  083C               	movf	pad@w+1,w
  8936  08D5  3A80               	xorlw	128
  8937  08D6  0238               	subwf	??_pad,w
  8938  08D7  1D03               	skipz
  8939  08D8  28DB               	goto	u4225
  8940  08D9  083B               	movf	pad@w,w
  8941  08DA  0239               	subwf	pad@i,w
  8942  08DB                     u4225:
  8943  08DB  1C03               	skipc
  8944  08DC  28DE               	goto	u4221
  8945  08DD  28DF               	goto	u4220
  8946  08DE                     u4221:
  8947  08DE  28C0               	goto	l3613
  8948  08DF                     u4220:
  8949  08DF                     l1087:
  8950                           
  8951                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  8952  08DF  0020               	movlb	0	; select bank0
  8953  08E0  1866               	btfsc	_flags,0
  8954  08E1  28E3               	goto	u4231
  8955  08E2  28E4               	goto	u4230
  8956  08E3                     u4231:
  8957  08E3  28EC               	goto	l3621
  8958  08E4                     u4230:
  8959  08E4                     l3619:
  8960                           
  8961                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  8962  08E4  083D               	movf	pad@fp,w
  8963  08E5  00B8               	movwf	??_pad
  8964  08E6  0838               	movf	??_pad,w
  8965  08E7  00AD               	movwf	fputs@fp
  8966  08E8  0835               	movf	pad@buf,w
  8967  08E9  3197  2762  3188   	fcall	_fputs
  8968  08EC                     l3621:
  8969                           
  8970                           ;/opt/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 94:     return (int)(strlen(b
      +                          uf) + (size_t)w);
  8971  08EC  0020               	movlb	0	; select bank0
  8972  08ED  0835               	movf	pad@buf,w
  8973  08EE  00A5               	movwf	strlen@s
  8974  08EF  3001               	movlw	1
  8975  08F0  00A6               	movwf	strlen@s+1
  8976  08F1  3196  2660  3188   	fcall	_strlen
  8977  08F4  0020               	movlb	0	; select bank0
  8978  08F5  083B               	movf	pad@w,w
  8979  08F6  0725               	addwf	?_strlen,w
  8980  08F7  00B5               	movwf	?_pad
  8981  08F8  083C               	movf	pad@w+1,w
  8982  08F9  3D26               	addwfc	?_strlen+1,w
  8983  08FA  00B6               	movwf	?_pad+1
  8984  08FB                     l1089:
  8985  08FB  0008               	return
  8986  08FC                     __end_of_pad:
  8987                           
  8988                           	psect	text11
  8989  1762                     __ptext11:	
  8990 ;; *************** function _fputs *****************
  8991 ;; Defined at:
  8992 ;;		line 8 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/nf_fputs.c"
  8993 ;; Parameters:    Size  Location     Type
  8994 ;;  s               1    wreg     PTR const unsigned char 
  8995 ;;		 -> dbuf(32), 
  8996 ;;  fp              1   13[BANK0 ] PTR struct _IO_FILE
  8997 ;;		 -> sprintf@f(5), 
  8998 ;; Auto vars:     Size  Location     Type
  8999 ;;  s               1   20[BANK0 ] PTR const unsigned char 
  9000 ;;		 -> dbuf(32), 
  9001 ;;  i               2   18[BANK0 ] int 
  9002 ;;  c               1   17[BANK0 ] unsigned char 
  9003 ;; Return value:  Size  Location     Type
  9004 ;;                  2   13[BANK0 ] int 
  9005 ;; Registers used:
  9006 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9007 ;; Tracked objects:
  9008 ;;		On entry : 0/0
  9009 ;;		On exit  : 0/0
  9010 ;;		Unchanged: 0/0
  9011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9012 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9013 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9014 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9015 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9016 ;;Total ram usage:        8 bytes
  9017 ;; Hardware stack levels used:    1
  9018 ;; Hardware stack levels required when called:    4
  9019 ;; This function calls:
  9020 ;;		_fputc
  9021 ;; This function is called by:
  9022 ;;		_pad
  9023 ;; This function uses a non-reentrant model
  9024 ;;
  9025                           
  9026                           
  9027                           ;psect for function _fputs
  9028  1762                     _fputs:
  9029                           
  9030                           ;incstack = 0
  9031                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9032                           ;fputs@s stored from wreg
  9033  1762  0020               	movlb	0	; select bank0
  9034  1763  00B4               	movwf	fputs@s
  9035  1764                     l3509:
  9036  1764  01B2               	clrf	fputs@i
  9037  1765  01B3               	clrf	fputs@i+1
  9038  1766  2F7A               	goto	l3515
  9039  1767                     l3511:
  9040  1767  0831               	movf	fputs@c,w
  9041  1768  00AE               	movwf	??_fputs
  9042  1769  01AF               	clrf	??_fputs+1
  9043  176A  082E               	movf	??_fputs,w
  9044  176B  00A5               	movwf	fputc@c
  9045  176C  082F               	movf	??_fputs+1,w
  9046  176D  00A6               	movwf	fputc@c+1
  9047  176E  082D               	movf	fputs@fp,w
  9048  176F  00B0               	movwf	??_fputs+2
  9049  1770  0830               	movf	??_fputs+2,w
  9050  1771  00A7               	movwf	fputc@fp
  9051  1772  3188  2051  3197   	fcall	_fputc
  9052  1775                     l3513:
  9053  1775  3001               	movlw	1
  9054  1776  0020               	movlb	0	; select bank0
  9055  1777  07B2               	addwf	fputs@i,f
  9056  1778  3000               	movlw	0
  9057  1779  3DB3               	addwfc	fputs@i+1,f
  9058  177A                     l3515:
  9059  177A  0832               	movf	fputs@i,w
  9060  177B  0734               	addwf	fputs@s,w
  9061  177C  00AE               	movwf	??_fputs
  9062  177D  082E               	movf	??_fputs,w
  9063  177E  0086               	movwf	6
  9064  177F  3001               	movlw	1	; select bank2/3
  9065  1780  0087               	movwf	7
  9066  1781  0801               	movf	1,w
  9067  1782  00AF               	movwf	??_fputs+1
  9068  1783  082F               	movf	??_fputs+1,w
  9069  1784  00B1               	movwf	fputs@c
  9070  1785  0831               	movf	fputs@c,w
  9071  1786  1D03               	btfss	3,2
  9072  1787  2F89               	goto	u3921
  9073  1788  2F8A               	goto	u3920
  9074  1789                     u3921:
  9075  1789  2F67               	goto	l3511
  9076  178A                     u3920:
  9077  178A                     l1268:
  9078  178A  0008               	return
  9079  178B                     __end_of_fputs:
  9080                           
  9081                           	psect	text12
  9082  0851                     __ptext12:	
  9083 ;; *************** function _fputc *****************
  9084 ;; Defined at:
  9085 ;;		line 8 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/nf_fputc.c"
  9086 ;; Parameters:    Size  Location     Type
  9087 ;;  c               2    5[BANK0 ] int 
  9088 ;;  fp              1    7[BANK0 ] PTR struct _IO_FILE
  9089 ;;		 -> sprintf@f(5), 
  9090 ;; Auto vars:     Size  Location     Type
  9091 ;;		None
  9092 ;; Return value:  Size  Location     Type
  9093 ;;                  2    5[BANK0 ] int 
  9094 ;; Registers used:
  9095 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9096 ;; Tracked objects:
  9097 ;;		On entry : 0/0
  9098 ;;		On exit  : 0/0
  9099 ;;		Unchanged: 0/0
  9100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9101 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9103 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9104 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9105 ;;Total ram usage:        8 bytes
  9106 ;; Hardware stack levels used:    1
  9107 ;; Hardware stack levels required when called:    3
  9108 ;; This function calls:
  9109 ;;		_putch
  9110 ;; This function is called by:
  9111 ;;		_pad
  9112 ;;		_vfpfcnvrt
  9113 ;;		_fputs
  9114 ;; This function uses a non-reentrant model
  9115 ;;
  9116                           
  9117                           
  9118                           ;psect for function _fputc
  9119  0851                     _fputc:
  9120  0851                     l3483:	
  9121                           ;incstack = 0
  9122                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9123                           
  9124  0851  0020               	movlb	0	; select bank0
  9125  0852  0827               	movf	fputc@fp,w
  9126  0853  1903               	btfsc	3,2
  9127  0854  2856               	goto	u3871
  9128  0855  2857               	goto	u3870
  9129  0856                     u3871:
  9130  0856  285C               	goto	l3487
  9131  0857                     u3870:
  9132  0857                     l3485:
  9133  0857  0827               	movf	fputc@fp,w
  9134  0858  1D03               	btfss	3,2
  9135  0859  285B               	goto	u3881
  9136  085A  285C               	goto	u3880
  9137  085B                     u3881:
  9138  085B  2861               	goto	l3489
  9139  085C                     u3880:
  9140  085C                     l3487:
  9141  085C  0825               	movf	fputc@c,w
  9142  085D  3180  2003  3188   	fcall	_putch
  9143  0860  28A2               	goto	l1260
  9144  0861                     l3489:
  9145  0861  0827               	movf	fputc@fp,w
  9146  0862  3E03               	addlw	3
  9147  0863  0086               	movwf	6
  9148  0864  0187               	clrf	7
  9149  0865  0016               	moviw fsr1++
  9150  0866  0401               	iorwf	1,w
  9151  0867  1903               	btfsc	3,2
  9152  0868  286A               	goto	u3891
  9153  0869  286B               	goto	u3890
  9154  086A                     u3891:
  9155  086A  2888               	goto	l3493
  9156  086B                     u3890:
  9157  086B                     l3491:
  9158  086B  0827               	movf	fputc@fp,w
  9159  086C  3E03               	addlw	3
  9160  086D  0086               	movwf	6
  9161  086E  0187               	clrf	7
  9162  086F  3F40               	moviw [0]fsr1
  9163  0870  00A8               	movwf	??_fputc
  9164  0871  3F41               	moviw [1]fsr1
  9165  0872  00A9               	movwf	??_fputc+1
  9166  0873  0A27               	incf	fputc@fp,w
  9167  0874  0086               	movwf	6
  9168  0875  0187               	clrf	7
  9169  0876  3F40               	moviw [0]fsr1
  9170  0877  00AA               	movwf	??_fputc+2
  9171  0878  3F41               	moviw [1]fsr1
  9172  0879  00AB               	movwf	??_fputc+3
  9173  087A  082B               	movf	??_fputc+3,w
  9174  087B  3A80               	xorlw	128
  9175  087C  00AC               	movwf	??_fputc+4
  9176  087D  0829               	movf	??_fputc+1,w
  9177  087E  3A80               	xorlw	128
  9178  087F  022C               	subwf	??_fputc+4,w
  9179  0880  1D03               	skipz
  9180  0881  2884               	goto	u3905
  9181  0882  0828               	movf	??_fputc,w
  9182  0883  022A               	subwf	??_fputc+2,w
  9183  0884                     u3905:
  9184  0884  1803               	skipnc
  9185  0885  2887               	goto	u3901
  9186  0886  2888               	goto	u3900
  9187  0887                     u3901:
  9188  0887  28A2               	goto	l1260
  9189  0888                     u3900:
  9190  0888                     l3493:
  9191  0888  0020               	movlb	0	; select bank0
  9192  0889  0825               	movf	fputc@c,w
  9193  088A  00A8               	movwf	??_fputc
  9194  088B  0827               	movf	fputc@fp,w
  9195  088C  0086               	movwf	6
  9196  088D  0187               	clrf	7
  9197  088E  0A27               	incf	fputc@fp,w
  9198  088F  0084               	movwf	4
  9199  0890  0185               	clrf	5
  9200  0891  0800               	movf	0,w
  9201  0892  0701               	addwf	1,w
  9202  0893  00A9               	movwf	??_fputc+1
  9203  0894  0829               	movf	??_fputc+1,w
  9204  0895  0086               	movwf	6
  9205  0896  3001               	movlw	1	; select bank2/3
  9206  0897  0087               	movwf	7
  9207  0898  0828               	movf	??_fputc,w
  9208  0899  0081               	movwf	1
  9209  089A                     l3495:
  9210  089A  0A27               	incf	fputc@fp,w
  9211  089B  0086               	movwf	6
  9212  089C  0187               	clrf	7
  9213  089D  3001               	movlw	1
  9214  089E  0781               	addwf	1,f
  9215  089F  3141               	addfsr 1,1
  9216  08A0  1803               	skipnc
  9217  08A1  0A81               	incf	1,f
  9218  08A2                     l1260:
  9219  08A2  0008               	return
  9220  08A3                     __end_of_fputc:
  9221                           
  9222                           	psect	text13
  9223  0003                     __ptext13:	
  9224 ;; *************** function _putch *****************
  9225 ;; Defined at:
  9226 ;;		line 7 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/putch.c"
  9227 ;; Parameters:    Size  Location     Type
  9228 ;;  c               1    wreg     unsigned char 
  9229 ;; Auto vars:     Size  Location     Type
  9230 ;;  c               1    0[COMMON] unsigned char 
  9231 ;; Return value:  Size  Location     Type
  9232 ;;                  1    wreg      void 
  9233 ;; Registers used:
  9234 ;;		wreg
  9235 ;; Tracked objects:
  9236 ;;		On entry : 0/0
  9237 ;;		On exit  : 0/0
  9238 ;;		Unchanged: 0/0
  9239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9244 ;;Total ram usage:        0 bytes
  9245 ;; Hardware stack levels used:    1
  9246 ;; Hardware stack levels required when called:    2
  9247 ;; This function calls:
  9248 ;;		Nothing
  9249 ;; This function is called by:
  9250 ;;		_fputc
  9251 ;; This function uses a non-reentrant model
  9252 ;;
  9253                           
  9254                           
  9255                           ;psect for function _putch
  9256  0003                     _putch:
  9257  0003                     l1271:	
  9258                           ;incstack = 0
  9259                           ; Regs used in _putch: [wreg]
  9260                           
  9261  0003  0008               	return
  9262  0004                     __end_of_putch:
  9263                           
  9264                           	psect	text14
  9265  167A                     __ptext14:	
  9266 ;; *************** function _abs *****************
  9267 ;; Defined at:
  9268 ;;		line 1 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/abs.c"
  9269 ;; Parameters:    Size  Location     Type
  9270 ;;  a               2   24[BANK0 ] int 
  9271 ;; Auto vars:     Size  Location     Type
  9272 ;;		None
  9273 ;; Return value:  Size  Location     Type
  9274 ;;                  2   24[BANK0 ] int 
  9275 ;; Registers used:
  9276 ;;		wreg, status,2, status,0
  9277 ;; Tracked objects:
  9278 ;;		On entry : 0/0
  9279 ;;		On exit  : 0/0
  9280 ;;		Unchanged: 0/0
  9281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9282 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9284 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9285 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9286 ;;Total ram usage:        4 bytes
  9287 ;; Hardware stack levels used:    1
  9288 ;; Hardware stack levels required when called:    2
  9289 ;; This function calls:
  9290 ;;		Nothing
  9291 ;; This function is called by:
  9292 ;;		_dtoa
  9293 ;; This function uses a non-reentrant model
  9294 ;;
  9295                           
  9296                           
  9297                           ;psect for function _abs
  9298  167A                     _abs:
  9299  167A                     l3625:	
  9300                           ;incstack = 0
  9301                           ; Regs used in _abs: [wreg+status,2+status,0]
  9302                           
  9303  167A  0020               	movlb	0	; select bank0
  9304  167B  0839               	movf	abs@a+1,w
  9305  167C  3A80               	xorlw	128
  9306  167D  00BA               	movwf	??_abs
  9307  167E  3080               	movlw	128
  9308  167F  023A               	subwf	??_abs,w
  9309  1680  1D03               	skipz
  9310  1681  2E84               	goto	u4245
  9311  1682  3001               	movlw	1
  9312  1683  0238               	subwf	abs@a,w
  9313  1684                     u4245:
  9314  1684  1803               	skipnc
  9315  1685  2E87               	goto	u4241
  9316  1686  2E88               	goto	u4240
  9317  1687                     u4241:
  9318  1687  2E95               	goto	l1188
  9319  1688                     u4240:
  9320  1688                     l3627:
  9321  1688  0020               	movlb	0	; select bank0
  9322  1689  0938               	comf	abs@a,w
  9323  168A  00BA               	movwf	??_abs
  9324  168B  0939               	comf	abs@a+1,w
  9325  168C  00BB               	movwf	??_abs+1
  9326  168D  0ABA               	incf	??_abs,f
  9327  168E  1903               	skipnz
  9328  168F  0ABB               	incf	??_abs+1,f
  9329  1690  083A               	movf	??_abs,w
  9330  1691  00B8               	movwf	?_abs
  9331  1692  083B               	movf	??_abs+1,w
  9332  1693  00B9               	movwf	?_abs+1
  9333  1694  2E95               	goto	l1191
  9334  1695                     l1188:
  9335  1695                     l1191:
  9336  1695  0008               	return
  9337  1696                     __end_of_abs:
  9338                           
  9339                           	psect	text15
  9340  0CA8                     __ptext15:	
  9341 ;; *************** function ___aomod *****************
  9342 ;; Defined at:
  9343 ;;		line 7 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/aomod.c"
  9344 ;; Parameters:    Size  Location     Type
  9345 ;;  divisor         8    5[BANK0 ] long long 
  9346 ;;  dividend        8   13[BANK0 ] long long 
  9347 ;; Auto vars:     Size  Location     Type
  9348 ;;  sign            1   23[BANK0 ] unsigned char 
  9349 ;;  counter         1   22[BANK0 ] unsigned char 
  9350 ;; Return value:  Size  Location     Type
  9351 ;;                  8    5[BANK0 ] long long 
  9352 ;; Registers used:
  9353 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9354 ;; Tracked objects:
  9355 ;;		On entry : 0/0
  9356 ;;		On exit  : 0/0
  9357 ;;		Unchanged: 0/0
  9358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9359 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9360 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9361 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9362 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9363 ;;Total ram usage:       19 bytes
  9364 ;; Hardware stack levels used:    1
  9365 ;; Hardware stack levels required when called:    2
  9366 ;; This function calls:
  9367 ;;		Nothing
  9368 ;; This function is called by:
  9369 ;;		_dtoa
  9370 ;; This function uses a non-reentrant model
  9371 ;;
  9372                           
  9373                           
  9374                           ;psect for function ___aomod
  9375  0CA8                     ___aomod:
  9376  0CA8                     l3573:	
  9377                           ;incstack = 0
  9378                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  9379                           
  9380  0CA8  0020               	movlb	0	; select bank0
  9381  0CA9  01B7               	clrf	___aomod@sign
  9382  0CAA                     l3575:
  9383  0CAA  302D               	movlw	low ___aomod@dividend
  9384  0CAB  0086               	movwf	6
  9385  0CAC  3000               	movlw	high ___aomod@dividend
  9386  0CAD  0087               	movwf	7
  9387  0CAE  3F47               	moviw [7]fsr1
  9388  0CAF  00B5               	movwf	??___aomod
  9389  0CB0  1FB5               	btfss	??___aomod,7
  9390  0CB1  2CB3               	goto	u4101
  9391  0CB2  2CB4               	goto	u4100
  9392  0CB3                     u4101:
  9393  0CB3  2CD6               	goto	l3579
  9394  0CB4                     u4100:
  9395  0CB4                     l3577:
  9396  0CB4  0020               	movlb	0	; select bank0
  9397  0CB5  09AD               	comf	___aomod@dividend,f
  9398  0CB6  09AE               	comf	___aomod@dividend+1,f
  9399  0CB7  09AF               	comf	___aomod@dividend+2,f
  9400  0CB8  09B0               	comf	___aomod@dividend+3,f
  9401  0CB9  09B1               	comf	___aomod@dividend+4,f
  9402  0CBA  09B2               	comf	___aomod@dividend+5,f
  9403  0CBB  09B3               	comf	___aomod@dividend+6,f
  9404  0CBC  09B4               	comf	___aomod@dividend+7,f
  9405  0CBD  0AAD               	incf	___aomod@dividend,f
  9406  0CBE  1D03               	skipz
  9407  0CBF  2CD3               	goto	u411lld
  9408  0CC0  0AAE               	incf	___aomod@dividend+1,f
  9409  0CC1  1D03               	skipz
  9410  0CC2  2CD3               	goto	u411lld
  9411  0CC3  0AAF               	incf	___aomod@dividend+2,f
  9412  0CC4  1D03               	skipz
  9413  0CC5  2CD3               	goto	u411lld
  9414  0CC6  0AB0               	incf	___aomod@dividend+3,f
  9415  0CC7  1D03               	skipz
  9416  0CC8  2CD3               	goto	u411lld
  9417  0CC9  0AB1               	incf	___aomod@dividend+4,f
  9418  0CCA  1D03               	skipz
  9419  0CCB  2CD3               	goto	u411lld
  9420  0CCC  0AB2               	incf	___aomod@dividend+5,f
  9421  0CCD  1D03               	skipz
  9422  0CCE  2CD3               	goto	u411lld
  9423  0CCF  0AB3               	incf	___aomod@dividend+6,f
  9424  0CD0  1D03               	skipz
  9425  0CD1  2CD3               	goto	u411lld
  9426  0CD2  0AB4               	incf	___aomod@dividend+7,f
  9427  0CD3                     u411lld:
  9428  0CD3  0020               	movlb	0	; select bank0
  9429  0CD4  01B7               	clrf	___aomod@sign
  9430  0CD5  0AB7               	incf	___aomod@sign,f
  9431  0CD6                     l3579:
  9432  0CD6  3025               	movlw	low ___aomod@divisor
  9433  0CD7  0086               	movwf	6
  9434  0CD8  3000               	movlw	high ___aomod@divisor
  9435  0CD9  0087               	movwf	7
  9436  0CDA  3F47               	moviw [7]fsr1
  9437  0CDB  0020               	movlb	0	; select bank0
  9438  0CDC  00B5               	movwf	??___aomod
  9439  0CDD  1FB5               	btfss	??___aomod,7
  9440  0CDE  2CE0               	goto	u4121
  9441  0CDF  2CE1               	goto	u4120
  9442  0CE0                     u4121:
  9443  0CE0  2D00               	goto	l3583
  9444  0CE1                     u4120:
  9445  0CE1                     l3581:
  9446  0CE1  0020               	movlb	0	; select bank0
  9447  0CE2  09A5               	comf	___aomod@divisor,f
  9448  0CE3  09A6               	comf	___aomod@divisor+1,f
  9449  0CE4  09A7               	comf	___aomod@divisor+2,f
  9450  0CE5  09A8               	comf	___aomod@divisor+3,f
  9451  0CE6  09A9               	comf	___aomod@divisor+4,f
  9452  0CE7  09AA               	comf	___aomod@divisor+5,f
  9453  0CE8  09AB               	comf	___aomod@divisor+6,f
  9454  0CE9  09AC               	comf	___aomod@divisor+7,f
  9455  0CEA  0AA5               	incf	___aomod@divisor,f
  9456  0CEB  1D03               	skipz
  9457  0CEC  2D00               	goto	u413lld
  9458  0CED  0AA6               	incf	___aomod@divisor+1,f
  9459  0CEE  1D03               	skipz
  9460  0CEF  2D00               	goto	u413lld
  9461  0CF0  0AA7               	incf	___aomod@divisor+2,f
  9462  0CF1  1D03               	skipz
  9463  0CF2  2D00               	goto	u413lld
  9464  0CF3  0AA8               	incf	___aomod@divisor+3,f
  9465  0CF4  1D03               	skipz
  9466  0CF5  2D00               	goto	u413lld
  9467  0CF6  0AA9               	incf	___aomod@divisor+4,f
  9468  0CF7  1D03               	skipz
  9469  0CF8  2D00               	goto	u413lld
  9470  0CF9  0AAA               	incf	___aomod@divisor+5,f
  9471  0CFA  1D03               	skipz
  9472  0CFB  2D00               	goto	u413lld
  9473  0CFC  0AAB               	incf	___aomod@divisor+6,f
  9474  0CFD  1D03               	skipz
  9475  0CFE  2D00               	goto	u413lld
  9476  0CFF  0AAC               	incf	___aomod@divisor+7,f
  9477  0D00                     u413lld:
  9478  0D00                     l3583:
  9479  0D00  0020               	movlb	0	; select bank0
  9480  0D01  0825               	movf	___aomod@divisor,w
  9481  0D02  0426               	iorwf	___aomod@divisor+1,w
  9482  0D03  0427               	iorwf	___aomod@divisor+2,w
  9483  0D04  0428               	iorwf	___aomod@divisor+3,w
  9484  0D05  0429               	iorwf	___aomod@divisor+4,w
  9485  0D06  042A               	iorwf	___aomod@divisor+5,w
  9486  0D07  042B               	iorwf	___aomod@divisor+6,w
  9487  0D08  042C               	iorwf	___aomod@divisor+7,w
  9488  0D09  1903               	skipnz
  9489  0D0A  2D0C               	goto	u4141
  9490  0D0B  2D0D               	goto	u4140
  9491  0D0C                     u4141:
  9492  0D0C  2D60               	goto	l3599
  9493  0D0D                     u4140:
  9494  0D0D                     l3585:
  9495  0D0D  01B6               	clrf	___aomod@counter
  9496  0D0E  0AB6               	incf	___aomod@counter,f
  9497  0D0F  2D1C               	goto	l3591
  9498  0D10                     l3587:
  9499  0D10  35A5               	lslf	___aomod@divisor,f
  9500  0D11  0DA6               	rlf	___aomod@divisor+1,f
  9501  0D12  0DA7               	rlf	___aomod@divisor+2,f
  9502  0D13  0DA8               	rlf	___aomod@divisor+3,f
  9503  0D14  0DA9               	rlf	___aomod@divisor+4,f
  9504  0D15  0DAA               	rlf	___aomod@divisor+5,f
  9505  0D16  0DAB               	rlf	___aomod@divisor+6,f
  9506  0D17  0DAC               	rlf	___aomod@divisor+7,f
  9507  0D18                     l3589:
  9508  0D18  3001               	movlw	1
  9509  0D19  00B5               	movwf	??___aomod
  9510  0D1A  0835               	movf	??___aomod,w
  9511  0D1B  07B6               	addwf	___aomod@counter,f
  9512  0D1C                     l3591:
  9513  0D1C  1FAC               	btfss	___aomod@divisor+7,7
  9514  0D1D  2D1F               	goto	u4151
  9515  0D1E  2D20               	goto	u4150
  9516  0D1F                     u4151:
  9517  0D1F  2D10               	goto	l3587
  9518  0D20                     u4150:
  9519  0D20                     l3593:
  9520  0D20  082C               	movf	___aomod@divisor+7,w
  9521  0D21  0234               	subwf	___aomod@dividend+7,w
  9522  0D22  1D03               	skipz
  9523  0D23  2D3E               	goto	u4165
  9524  0D24  082B               	movf	___aomod@divisor+6,w
  9525  0D25  0233               	subwf	___aomod@dividend+6,w
  9526  0D26  1D03               	skipz
  9527  0D27  2D3E               	goto	u4165
  9528  0D28  082A               	movf	___aomod@divisor+5,w
  9529  0D29  0232               	subwf	___aomod@dividend+5,w
  9530  0D2A  1D03               	skipz
  9531  0D2B  2D3E               	goto	u4165
  9532  0D2C  0829               	movf	___aomod@divisor+4,w
  9533  0D2D  0231               	subwf	___aomod@dividend+4,w
  9534  0D2E  1D03               	skipz
  9535  0D2F  2D3E               	goto	u4165
  9536  0D30  0828               	movf	___aomod@divisor+3,w
  9537  0D31  0230               	subwf	___aomod@dividend+3,w
  9538  0D32  1D03               	skipz
  9539  0D33  2D3E               	goto	u4165
  9540  0D34  0827               	movf	___aomod@divisor+2,w
  9541  0D35  022F               	subwf	___aomod@dividend+2,w
  9542  0D36  1D03               	skipz
  9543  0D37  2D3E               	goto	u4165
  9544  0D38  0826               	movf	___aomod@divisor+1,w
  9545  0D39  022E               	subwf	___aomod@dividend+1,w
  9546  0D3A  1D03               	skipz
  9547  0D3B  2D3E               	goto	u4165
  9548  0D3C  0825               	movf	___aomod@divisor,w
  9549  0D3D  022D               	subwf	___aomod@dividend,w
  9550  0D3E                     u4165:
  9551  0D3E  1C03               	skipc
  9552  0D3F  2D41               	goto	u4161
  9553  0D40  2D42               	goto	u4160
  9554  0D41                     u4161:
  9555  0D41  2D52               	goto	l3597
  9556  0D42                     u4160:
  9557  0D42                     l3595:
  9558  0D42  0825               	movf	___aomod@divisor,w
  9559  0D43  02AD               	subwf	___aomod@dividend,f
  9560  0D44  0826               	movf	___aomod@divisor+1,w
  9561  0D45  3BAE               	subwfb	___aomod@dividend+1,f
  9562  0D46  0827               	movf	___aomod@divisor+2,w
  9563  0D47  3BAF               	subwfb	___aomod@dividend+2,f
  9564  0D48  0828               	movf	___aomod@divisor+3,w
  9565  0D49  3BB0               	subwfb	___aomod@dividend+3,f
  9566  0D4A  0829               	movf	___aomod@divisor+4,w
  9567  0D4B  3BB1               	subwfb	___aomod@dividend+4,f
  9568  0D4C  082A               	movf	___aomod@divisor+5,w
  9569  0D4D  3BB2               	subwfb	___aomod@dividend+5,f
  9570  0D4E  082B               	movf	___aomod@divisor+6,w
  9571  0D4F  3BB3               	subwfb	___aomod@dividend+6,f
  9572  0D50  082C               	movf	___aomod@divisor+7,w
  9573  0D51  3BB4               	subwfb	___aomod@dividend+7,f
  9574  0D52                     l3597:
  9575  0D52  36AC               	lsrf	___aomod@divisor+7,f
  9576  0D53  0CAB               	rrf	___aomod@divisor+6,f
  9577  0D54  0CAA               	rrf	___aomod@divisor+5,f
  9578  0D55  0CA9               	rrf	___aomod@divisor+4,f
  9579  0D56  0CA8               	rrf	___aomod@divisor+3,f
  9580  0D57  0CA7               	rrf	___aomod@divisor+2,f
  9581  0D58  0CA6               	rrf	___aomod@divisor+1,f
  9582  0D59  0CA5               	rrf	___aomod@divisor,f
  9583  0D5A  3001               	movlw	1
  9584  0D5B  02B6               	subwf	___aomod@counter,f
  9585  0D5C  1D03               	btfss	3,2
  9586  0D5D  2D5F               	goto	u4171
  9587  0D5E  2D60               	goto	u4170
  9588  0D5F                     u4171:
  9589  0D5F  2D20               	goto	l3593
  9590  0D60                     u4170:
  9591  0D60                     l3599:
  9592  0D60  0837               	movf	___aomod@sign,w
  9593  0D61  1903               	btfsc	3,2
  9594  0D62  2D64               	goto	u4181
  9595  0D63  2D65               	goto	u4180
  9596  0D64                     u4181:
  9597  0D64  2D83               	goto	l697
  9598  0D65                     u4180:
  9599  0D65                     l3601:
  9600  0D65  09AD               	comf	___aomod@dividend,f
  9601  0D66  09AE               	comf	___aomod@dividend+1,f
  9602  0D67  09AF               	comf	___aomod@dividend+2,f
  9603  0D68  09B0               	comf	___aomod@dividend+3,f
  9604  0D69  09B1               	comf	___aomod@dividend+4,f
  9605  0D6A  09B2               	comf	___aomod@dividend+5,f
  9606  0D6B  09B3               	comf	___aomod@dividend+6,f
  9607  0D6C  09B4               	comf	___aomod@dividend+7,f
  9608  0D6D  0AAD               	incf	___aomod@dividend,f
  9609  0D6E  1D03               	skipz
  9610  0D6F  2D83               	goto	u419lld
  9611  0D70  0AAE               	incf	___aomod@dividend+1,f
  9612  0D71  1D03               	skipz
  9613  0D72  2D83               	goto	u419lld
  9614  0D73  0AAF               	incf	___aomod@dividend+2,f
  9615  0D74  1D03               	skipz
  9616  0D75  2D83               	goto	u419lld
  9617  0D76  0AB0               	incf	___aomod@dividend+3,f
  9618  0D77  1D03               	skipz
  9619  0D78  2D83               	goto	u419lld
  9620  0D79  0AB1               	incf	___aomod@dividend+4,f
  9621  0D7A  1D03               	skipz
  9622  0D7B  2D83               	goto	u419lld
  9623  0D7C  0AB2               	incf	___aomod@dividend+5,f
  9624  0D7D  1D03               	skipz
  9625  0D7E  2D83               	goto	u419lld
  9626  0D7F  0AB3               	incf	___aomod@dividend+6,f
  9627  0D80  1D03               	skipz
  9628  0D81  2D83               	goto	u419lld
  9629  0D82  0AB4               	incf	___aomod@dividend+7,f
  9630  0D83                     u419lld:
  9631  0D83                     l697:
  9632  0D83  0020               	movlb	0	; select bank0
  9633  0D84  082D               	movf	___aomod@dividend,w
  9634  0D85  00A5               	movwf	?___aomod
  9635  0D86  082E               	movf	___aomod@dividend+1,w
  9636  0D87  00A6               	movwf	?___aomod+1
  9637  0D88  082F               	movf	___aomod@dividend+2,w
  9638  0D89  00A7               	movwf	?___aomod+2
  9639  0D8A  0830               	movf	___aomod@dividend+3,w
  9640  0D8B  00A8               	movwf	?___aomod+3
  9641  0D8C  0831               	movf	___aomod@dividend+4,w
  9642  0D8D  00A9               	movwf	?___aomod+4
  9643  0D8E  0832               	movf	___aomod@dividend+5,w
  9644  0D8F  00AA               	movwf	?___aomod+5
  9645  0D90  0833               	movf	___aomod@dividend+6,w
  9646  0D91  00AB               	movwf	?___aomod+6
  9647  0D92  0834               	movf	___aomod@dividend+7,w
  9648  0D93  00AC               	movwf	?___aomod+7
  9649  0D94                     l698:
  9650  0D94  0008               	return
  9651  0D95                     __end_of___aomod:
  9652                           
  9653                           	psect	text16
  9654  0D95                     __ptext16:	
  9655 ;; *************** function ___aodiv *****************
  9656 ;; Defined at:
  9657 ;;		line 7 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/aodiv.c"
  9658 ;; Parameters:    Size  Location     Type
  9659 ;;  divisor         8    5[BANK0 ] long long 
  9660 ;;  dividend        8   13[BANK0 ] long long 
  9661 ;; Auto vars:     Size  Location     Type
  9662 ;;  quotient        8   24[BANK0 ] long long 
  9663 ;;  sign            1   23[BANK0 ] unsigned char 
  9664 ;;  counter         1   22[BANK0 ] unsigned char 
  9665 ;; Return value:  Size  Location     Type
  9666 ;;                  8    5[BANK0 ] long long 
  9667 ;; Registers used:
  9668 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9669 ;; Tracked objects:
  9670 ;;		On entry : 0/0
  9671 ;;		On exit  : 0/0
  9672 ;;		Unchanged: 0/0
  9673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9674 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9675 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9676 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9677 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9678 ;;Total ram usage:       27 bytes
  9679 ;; Hardware stack levels used:    1
  9680 ;; Hardware stack levels required when called:    2
  9681 ;; This function calls:
  9682 ;;		Nothing
  9683 ;; This function is called by:
  9684 ;;		_dtoa
  9685 ;; This function uses a non-reentrant model
  9686 ;;
  9687                           
  9688                           
  9689                           ;psect for function ___aodiv
  9690  0D95                     ___aodiv:
  9691  0D95                     l3535:	
  9692                           ;incstack = 0
  9693                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  9694                           
  9695  0D95  0020               	movlb	0	; select bank0
  9696  0D96  01B7               	clrf	___aodiv@sign
  9697  0D97                     l3537:
  9698  0D97  3025               	movlw	low ___aodiv@divisor
  9699  0D98  0086               	movwf	6
  9700  0D99  3000               	movlw	high ___aodiv@divisor
  9701  0D9A  0087               	movwf	7
  9702  0D9B  3F47               	moviw [7]fsr1
  9703  0D9C  00B5               	movwf	??___aodiv
  9704  0D9D  1FB5               	btfss	??___aodiv,7
  9705  0D9E  2DA0               	goto	u3991
  9706  0D9F  2DA1               	goto	u3990
  9707  0DA0                     u3991:
  9708  0DA0  2DC3               	goto	l3541
  9709  0DA1                     u3990:
  9710  0DA1                     l3539:
  9711  0DA1  0020               	movlb	0	; select bank0
  9712  0DA2  09A5               	comf	___aodiv@divisor,f
  9713  0DA3  09A6               	comf	___aodiv@divisor+1,f
  9714  0DA4  09A7               	comf	___aodiv@divisor+2,f
  9715  0DA5  09A8               	comf	___aodiv@divisor+3,f
  9716  0DA6  09A9               	comf	___aodiv@divisor+4,f
  9717  0DA7  09AA               	comf	___aodiv@divisor+5,f
  9718  0DA8  09AB               	comf	___aodiv@divisor+6,f
  9719  0DA9  09AC               	comf	___aodiv@divisor+7,f
  9720  0DAA  0AA5               	incf	___aodiv@divisor,f
  9721  0DAB  1D03               	skipz
  9722  0DAC  2DC0               	goto	u400lld
  9723  0DAD  0AA6               	incf	___aodiv@divisor+1,f
  9724  0DAE  1D03               	skipz
  9725  0DAF  2DC0               	goto	u400lld
  9726  0DB0  0AA7               	incf	___aodiv@divisor+2,f
  9727  0DB1  1D03               	skipz
  9728  0DB2  2DC0               	goto	u400lld
  9729  0DB3  0AA8               	incf	___aodiv@divisor+3,f
  9730  0DB4  1D03               	skipz
  9731  0DB5  2DC0               	goto	u400lld
  9732  0DB6  0AA9               	incf	___aodiv@divisor+4,f
  9733  0DB7  1D03               	skipz
  9734  0DB8  2DC0               	goto	u400lld
  9735  0DB9  0AAA               	incf	___aodiv@divisor+5,f
  9736  0DBA  1D03               	skipz
  9737  0DBB  2DC0               	goto	u400lld
  9738  0DBC  0AAB               	incf	___aodiv@divisor+6,f
  9739  0DBD  1D03               	skipz
  9740  0DBE  2DC0               	goto	u400lld
  9741  0DBF  0AAC               	incf	___aodiv@divisor+7,f
  9742  0DC0                     u400lld:
  9743  0DC0  0020               	movlb	0	; select bank0
  9744  0DC1  01B7               	clrf	___aodiv@sign
  9745  0DC2  0AB7               	incf	___aodiv@sign,f
  9746  0DC3                     l3541:
  9747  0DC3  302D               	movlw	low ___aodiv@dividend
  9748  0DC4  0086               	movwf	6
  9749  0DC5  3000               	movlw	high ___aodiv@dividend
  9750  0DC6  0087               	movwf	7
  9751  0DC7  3F47               	moviw [7]fsr1
  9752  0DC8  0020               	movlb	0	; select bank0
  9753  0DC9  00B5               	movwf	??___aodiv
  9754  0DCA  1FB5               	btfss	??___aodiv,7
  9755  0DCB  2DCD               	goto	u4011
  9756  0DCC  2DCE               	goto	u4010
  9757  0DCD                     u4011:
  9758  0DCD  2DF2               	goto	l3547
  9759  0DCE                     u4010:
  9760  0DCE                     l3543:
  9761  0DCE  0020               	movlb	0	; select bank0
  9762  0DCF  09AD               	comf	___aodiv@dividend,f
  9763  0DD0  09AE               	comf	___aodiv@dividend+1,f
  9764  0DD1  09AF               	comf	___aodiv@dividend+2,f
  9765  0DD2  09B0               	comf	___aodiv@dividend+3,f
  9766  0DD3  09B1               	comf	___aodiv@dividend+4,f
  9767  0DD4  09B2               	comf	___aodiv@dividend+5,f
  9768  0DD5  09B3               	comf	___aodiv@dividend+6,f
  9769  0DD6  09B4               	comf	___aodiv@dividend+7,f
  9770  0DD7  0AAD               	incf	___aodiv@dividend,f
  9771  0DD8  1D03               	skipz
  9772  0DD9  2DED               	goto	u402lld
  9773  0DDA  0AAE               	incf	___aodiv@dividend+1,f
  9774  0DDB  1D03               	skipz
  9775  0DDC  2DED               	goto	u402lld
  9776  0DDD  0AAF               	incf	___aodiv@dividend+2,f
  9777  0DDE  1D03               	skipz
  9778  0DDF  2DED               	goto	u402lld
  9779  0DE0  0AB0               	incf	___aodiv@dividend+3,f
  9780  0DE1  1D03               	skipz
  9781  0DE2  2DED               	goto	u402lld
  9782  0DE3  0AB1               	incf	___aodiv@dividend+4,f
  9783  0DE4  1D03               	skipz
  9784  0DE5  2DED               	goto	u402lld
  9785  0DE6  0AB2               	incf	___aodiv@dividend+5,f
  9786  0DE7  1D03               	skipz
  9787  0DE8  2DED               	goto	u402lld
  9788  0DE9  0AB3               	incf	___aodiv@dividend+6,f
  9789  0DEA  1D03               	skipz
  9790  0DEB  2DED               	goto	u402lld
  9791  0DEC  0AB4               	incf	___aodiv@dividend+7,f
  9792  0DED                     u402lld:
  9793  0DED                     l3545:
  9794  0DED  3001               	movlw	1
  9795  0DEE  0020               	movlb	0	; select bank0
  9796  0DEF  00B5               	movwf	??___aodiv
  9797  0DF0  0835               	movf	??___aodiv,w
  9798  0DF1  06B7               	xorwf	___aodiv@sign,f
  9799  0DF2                     l3547:
  9800  0DF2  3038               	movlw	low ___aodiv@quotient
  9801  0DF3  0086               	movwf	6
  9802  0DF4  3000               	movlw	high ___aodiv@quotient
  9803  0DF5  0087               	movwf	7
  9804  0DF6  3008               	movlw	8
  9805  0DF7  0020               	movlb	0	; select bank0
  9806  0DF8  00B5               	movwf	??___aodiv
  9807  0DF9  3000               	movlw	0
  9808  0DFA                     u4030:
  9809  0DFA  001E               	movwi fsr1++
  9810  0DFB  0BB5               	decfsz	??___aodiv,f
  9811  0DFC  2DFA               	goto	u4030
  9812  0DFD                     l3549:
  9813  0DFD  0825               	movf	___aodiv@divisor,w
  9814  0DFE  0426               	iorwf	___aodiv@divisor+1,w
  9815  0DFF  0427               	iorwf	___aodiv@divisor+2,w
  9816  0E00  0428               	iorwf	___aodiv@divisor+3,w
  9817  0E01  0429               	iorwf	___aodiv@divisor+4,w
  9818  0E02  042A               	iorwf	___aodiv@divisor+5,w
  9819  0E03  042B               	iorwf	___aodiv@divisor+6,w
  9820  0E04  042C               	iorwf	___aodiv@divisor+7,w
  9821  0E05  1903               	skipnz
  9822  0E06  2E08               	goto	u4041
  9823  0E07  2E09               	goto	u4040
  9824  0E08                     u4041:
  9825  0E08  2E65               	goto	l3569
  9826  0E09                     u4040:
  9827  0E09                     l3551:
  9828  0E09  01B6               	clrf	___aodiv@counter
  9829  0E0A  0AB6               	incf	___aodiv@counter,f
  9830  0E0B  2E18               	goto	l3557
  9831  0E0C                     l3553:
  9832  0E0C  35A5               	lslf	___aodiv@divisor,f
  9833  0E0D  0DA6               	rlf	___aodiv@divisor+1,f
  9834  0E0E  0DA7               	rlf	___aodiv@divisor+2,f
  9835  0E0F  0DA8               	rlf	___aodiv@divisor+3,f
  9836  0E10  0DA9               	rlf	___aodiv@divisor+4,f
  9837  0E11  0DAA               	rlf	___aodiv@divisor+5,f
  9838  0E12  0DAB               	rlf	___aodiv@divisor+6,f
  9839  0E13  0DAC               	rlf	___aodiv@divisor+7,f
  9840  0E14                     l3555:
  9841  0E14  3001               	movlw	1
  9842  0E15  00B5               	movwf	??___aodiv
  9843  0E16  0835               	movf	??___aodiv,w
  9844  0E17  07B6               	addwf	___aodiv@counter,f
  9845  0E18                     l3557:
  9846  0E18  1FAC               	btfss	___aodiv@divisor+7,7
  9847  0E19  2E1B               	goto	u4051
  9848  0E1A  2E1C               	goto	u4050
  9849  0E1B                     u4051:
  9850  0E1B  2E0C               	goto	l3553
  9851  0E1C                     u4050:
  9852  0E1C                     l3559:
  9853  0E1C  35B8               	lslf	___aodiv@quotient,f
  9854  0E1D  0DB9               	rlf	___aodiv@quotient+1,f
  9855  0E1E  0DBA               	rlf	___aodiv@quotient+2,f
  9856  0E1F  0DBB               	rlf	___aodiv@quotient+3,f
  9857  0E20  0DBC               	rlf	___aodiv@quotient+4,f
  9858  0E21  0DBD               	rlf	___aodiv@quotient+5,f
  9859  0E22  0DBE               	rlf	___aodiv@quotient+6,f
  9860  0E23  0DBF               	rlf	___aodiv@quotient+7,f
  9861  0E24                     l3561:
  9862  0E24  082C               	movf	___aodiv@divisor+7,w
  9863  0E25  0234               	subwf	___aodiv@dividend+7,w
  9864  0E26  1D03               	skipz
  9865  0E27  2E42               	goto	u4065
  9866  0E28  082B               	movf	___aodiv@divisor+6,w
  9867  0E29  0233               	subwf	___aodiv@dividend+6,w
  9868  0E2A  1D03               	skipz
  9869  0E2B  2E42               	goto	u4065
  9870  0E2C  082A               	movf	___aodiv@divisor+5,w
  9871  0E2D  0232               	subwf	___aodiv@dividend+5,w
  9872  0E2E  1D03               	skipz
  9873  0E2F  2E42               	goto	u4065
  9874  0E30  0829               	movf	___aodiv@divisor+4,w
  9875  0E31  0231               	subwf	___aodiv@dividend+4,w
  9876  0E32  1D03               	skipz
  9877  0E33  2E42               	goto	u4065
  9878  0E34  0828               	movf	___aodiv@divisor+3,w
  9879  0E35  0230               	subwf	___aodiv@dividend+3,w
  9880  0E36  1D03               	skipz
  9881  0E37  2E42               	goto	u4065
  9882  0E38  0827               	movf	___aodiv@divisor+2,w
  9883  0E39  022F               	subwf	___aodiv@dividend+2,w
  9884  0E3A  1D03               	skipz
  9885  0E3B  2E42               	goto	u4065
  9886  0E3C  0826               	movf	___aodiv@divisor+1,w
  9887  0E3D  022E               	subwf	___aodiv@dividend+1,w
  9888  0E3E  1D03               	skipz
  9889  0E3F  2E42               	goto	u4065
  9890  0E40  0825               	movf	___aodiv@divisor,w
  9891  0E41  022D               	subwf	___aodiv@dividend,w
  9892  0E42                     u4065:
  9893  0E42  1C03               	skipc
  9894  0E43  2E45               	goto	u4061
  9895  0E44  2E46               	goto	u4060
  9896  0E45                     u4061:
  9897  0E45  2E57               	goto	l3567
  9898  0E46                     u4060:
  9899  0E46                     l3563:
  9900  0E46  0825               	movf	___aodiv@divisor,w
  9901  0E47  02AD               	subwf	___aodiv@dividend,f
  9902  0E48  0826               	movf	___aodiv@divisor+1,w
  9903  0E49  3BAE               	subwfb	___aodiv@dividend+1,f
  9904  0E4A  0827               	movf	___aodiv@divisor+2,w
  9905  0E4B  3BAF               	subwfb	___aodiv@dividend+2,f
  9906  0E4C  0828               	movf	___aodiv@divisor+3,w
  9907  0E4D  3BB0               	subwfb	___aodiv@dividend+3,f
  9908  0E4E  0829               	movf	___aodiv@divisor+4,w
  9909  0E4F  3BB1               	subwfb	___aodiv@dividend+4,f
  9910  0E50  082A               	movf	___aodiv@divisor+5,w
  9911  0E51  3BB2               	subwfb	___aodiv@dividend+5,f
  9912  0E52  082B               	movf	___aodiv@divisor+6,w
  9913  0E53  3BB3               	subwfb	___aodiv@dividend+6,f
  9914  0E54  082C               	movf	___aodiv@divisor+7,w
  9915  0E55  3BB4               	subwfb	___aodiv@dividend+7,f
  9916  0E56                     l3565:
  9917  0E56  1438               	bsf	___aodiv@quotient,0
  9918  0E57                     l3567:
  9919  0E57  36AC               	lsrf	___aodiv@divisor+7,f
  9920  0E58  0CAB               	rrf	___aodiv@divisor+6,f
  9921  0E59  0CAA               	rrf	___aodiv@divisor+5,f
  9922  0E5A  0CA9               	rrf	___aodiv@divisor+4,f
  9923  0E5B  0CA8               	rrf	___aodiv@divisor+3,f
  9924  0E5C  0CA7               	rrf	___aodiv@divisor+2,f
  9925  0E5D  0CA6               	rrf	___aodiv@divisor+1,f
  9926  0E5E  0CA5               	rrf	___aodiv@divisor,f
  9927  0E5F  3001               	movlw	1
  9928  0E60  02B6               	subwf	___aodiv@counter,f
  9929  0E61  1D03               	btfss	3,2
  9930  0E62  2E64               	goto	u4071
  9931  0E63  2E65               	goto	u4070
  9932  0E64                     u4071:
  9933  0E64  2E1C               	goto	l3559
  9934  0E65                     u4070:
  9935  0E65                     l3569:
  9936  0E65  0837               	movf	___aodiv@sign,w
  9937  0E66  1903               	btfsc	3,2
  9938  0E67  2E69               	goto	u4081
  9939  0E68  2E6A               	goto	u4080
  9940  0E69                     u4081:
  9941  0E69  2E88               	goto	l684
  9942  0E6A                     u4080:
  9943  0E6A                     l3571:
  9944  0E6A  09B8               	comf	___aodiv@quotient,f
  9945  0E6B  09B9               	comf	___aodiv@quotient+1,f
  9946  0E6C  09BA               	comf	___aodiv@quotient+2,f
  9947  0E6D  09BB               	comf	___aodiv@quotient+3,f
  9948  0E6E  09BC               	comf	___aodiv@quotient+4,f
  9949  0E6F  09BD               	comf	___aodiv@quotient+5,f
  9950  0E70  09BE               	comf	___aodiv@quotient+6,f
  9951  0E71  09BF               	comf	___aodiv@quotient+7,f
  9952  0E72  0AB8               	incf	___aodiv@quotient,f
  9953  0E73  1D03               	skipz
  9954  0E74  2E88               	goto	u409lld
  9955  0E75  0AB9               	incf	___aodiv@quotient+1,f
  9956  0E76  1D03               	skipz
  9957  0E77  2E88               	goto	u409lld
  9958  0E78  0ABA               	incf	___aodiv@quotient+2,f
  9959  0E79  1D03               	skipz
  9960  0E7A  2E88               	goto	u409lld
  9961  0E7B  0ABB               	incf	___aodiv@quotient+3,f
  9962  0E7C  1D03               	skipz
  9963  0E7D  2E88               	goto	u409lld
  9964  0E7E  0ABC               	incf	___aodiv@quotient+4,f
  9965  0E7F  1D03               	skipz
  9966  0E80  2E88               	goto	u409lld
  9967  0E81  0ABD               	incf	___aodiv@quotient+5,f
  9968  0E82  1D03               	skipz
  9969  0E83  2E88               	goto	u409lld
  9970  0E84  0ABE               	incf	___aodiv@quotient+6,f
  9971  0E85  1D03               	skipz
  9972  0E86  2E88               	goto	u409lld
  9973  0E87  0ABF               	incf	___aodiv@quotient+7,f
  9974  0E88                     u409lld:
  9975  0E88                     l684:
  9976  0E88  0020               	movlb	0	; select bank0
  9977  0E89  0838               	movf	___aodiv@quotient,w
  9978  0E8A  00A5               	movwf	?___aodiv
  9979  0E8B  0839               	movf	___aodiv@quotient+1,w
  9980  0E8C  00A6               	movwf	?___aodiv+1
  9981  0E8D  083A               	movf	___aodiv@quotient+2,w
  9982  0E8E  00A7               	movwf	?___aodiv+2
  9983  0E8F  083B               	movf	___aodiv@quotient+3,w
  9984  0E90  00A8               	movwf	?___aodiv+3
  9985  0E91  083C               	movf	___aodiv@quotient+4,w
  9986  0E92  00A9               	movwf	?___aodiv+4
  9987  0E93  083D               	movf	___aodiv@quotient+5,w
  9988  0E94  00AA               	movwf	?___aodiv+5
  9989  0E95  083E               	movf	___aodiv@quotient+6,w
  9990  0E96  00AB               	movwf	?___aodiv+6
  9991  0E97  083F               	movf	___aodiv@quotient+7,w
  9992  0E98  00AC               	movwf	?___aodiv+7
  9993  0E99                     l685:
  9994  0E99  0008               	return
  9995  0E9A                     __end_of___aodiv:
  9996                           
  9997                           	psect	text17
  9998  0B12                     __ptext17:	
  9999 ;; *************** function _atoi *****************
 10000 ;; Defined at:
 10001 ;;		line 4 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/atoi.c"
 10002 ;; Parameters:    Size  Location     Type
 10003 ;;  s               2   11[BANK0 ] PTR const unsigned char 
 10004 ;;		 -> STR_4(23), STR_3(23), STR_2(60), 
 10005 ;; Auto vars:     Size  Location     Type
 10006 ;;  n               2   24[BANK0 ] int 
 10007 ;;  neg             2   17[BANK0 ] int 
 10008 ;; Return value:  Size  Location     Type
 10009 ;;                  2   11[BANK0 ] int 
 10010 ;; Registers used:
 10011 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10012 ;; Tracked objects:
 10013 ;;		On entry : 0/0
 10014 ;;		On exit  : 0/0
 10015 ;;		Unchanged: 0/0
 10016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10017 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10018 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10019 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10020 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10021 ;;Total ram usage:       15 bytes
 10022 ;; Hardware stack levels used:    1
 10023 ;; Hardware stack levels required when called:    3
 10024 ;; This function calls:
 10025 ;;		___wmul
 10026 ;;		_isdigit
 10027 ;;		_isspace
 10028 ;; This function is called by:
 10029 ;;		_vfpfcnvrt
 10030 ;; This function uses a non-reentrant model
 10031 ;;
 10032                           
 10033                           
 10034                           ;psect for function _atoi
 10035  0B12                     _atoi:
 10036  0B12                     l3785:	
 10037                           ;incstack = 0
 10038                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10039                           
 10040  0B12  0020               	movlb	0	; select bank0
 10041  0B13  01B8               	clrf	atoi@n
 10042  0B14  01B9               	clrf	atoi@n+1
 10043  0B15  01B1               	clrf	atoi@neg
 10044  0B16  01B2               	clrf	atoi@neg+1
 10045  0B17  2B1C               	goto	l3789
 10046  0B18                     l3787:
 10047  0B18  3001               	movlw	1
 10048  0B19  07AB               	addwf	atoi@s,f
 10049  0B1A  3000               	movlw	0
 10050  0B1B  3DAC               	addwfc	atoi@s+1,f
 10051  0B1C                     l3789:
 10052  0B1C  01B7               	clrf	_atoi$1460
 10053  0B1D  0AB7               	incf	_atoi$1460,f
 10054  0B1E                     l3791:
 10055  0B1E  082B               	movf	atoi@s,w
 10056  0B1F  0084               	movwf	4
 10057  0B20  082C               	movf	atoi@s+1,w
 10058  0B21  0085               	movwf	5
 10059  0B22  0012               	moviw fsr0++
 10060  0B23  3A20               	xorlw	32
 10061  0B24  1903               	btfsc	3,2
 10062  0B25  2B27               	goto	u4691
 10063  0B26  2B28               	goto	u4690
 10064  0B27                     u4691:
 10065  0B27  2B3D               	goto	l3797
 10066  0B28                     u4690:
 10067  0B28                     l3793:
 10068  0B28  082B               	movf	atoi@s,w
 10069  0B29  0084               	movwf	4
 10070  0B2A  082C               	movf	atoi@s+1,w
 10071  0B2B  0085               	movwf	5
 10072  0B2C  0800               	movf	0,w	;code access
 10073  0B2D  3EF7               	addlw	247
 10074  0B2E  00AD               	movwf	??_atoi
 10075  0B2F  30FF               	movlw	255
 10076  0B30  1803               	skipnc
 10077  0B31  3000               	movlw	0
 10078  0B32  00AE               	movwf	??_atoi+1
 10079  0B33  3000               	movlw	0
 10080  0B34  022E               	subwf	??_atoi+1,w
 10081  0B35  3005               	movlw	5
 10082  0B36  1903               	skipnz
 10083  0B37  022D               	subwf	??_atoi,w
 10084  0B38  1C03               	skipc
 10085  0B39  2B3B               	goto	u4701
 10086  0B3A  2B3C               	goto	u4700
 10087  0B3B                     u4701:
 10088  0B3B  2B3D               	goto	l3797
 10089  0B3C                     u4700:
 10090  0B3C                     l3795:
 10091  0B3C  01B7               	clrf	_atoi$1460
 10092  0B3D                     l3797:
 10093  0B3D  0837               	movf	_atoi$1460,w
 10094  0B3E  00AD               	movwf	??_atoi
 10095  0B3F  01AE               	clrf	??_atoi+1
 10096  0B40  082D               	movf	??_atoi,w
 10097  0B41  00B3               	movwf	_atoi$1459
 10098  0B42  082E               	movf	??_atoi+1,w
 10099  0B43  00B4               	movwf	_atoi$1459+1
 10100  0B44                     l3801:
 10101  0B44  0833               	movf	_atoi$1459,w
 10102  0B45  0434               	iorwf	_atoi$1459+1,w
 10103  0B46  1D03               	btfss	3,2
 10104  0B47  2B49               	goto	u4711
 10105  0B48  2B4A               	goto	u4710
 10106  0B49                     u4711:
 10107  0B49  2B18               	goto	l3787
 10108  0B4A                     u4710:
 10109  0B4A  2B54               	goto	l3805
 10110  0B4B                     l3803:
 10111  0B4B  3001               	movlw	1
 10112  0B4C  00B1               	movwf	atoi@neg
 10113  0B4D  3000               	movlw	0
 10114  0B4E  00B2               	movwf	atoi@neg+1
 10115  0B4F                     l1209:
 10116  0B4F  3001               	movlw	1
 10117  0B50  07AB               	addwf	atoi@s,f
 10118  0B51  3000               	movlw	0
 10119  0B52  3DAC               	addwfc	atoi@s+1,f
 10120  0B53  2B88               	goto	l3811
 10121  0B54                     l3805:
 10122  0B54  082B               	movf	atoi@s,w
 10123  0B55  0084               	movwf	4
 10124  0B56  082C               	movf	atoi@s+1,w
 10125  0B57  0085               	movwf	5
 10126  0B58  0800               	movf	0,w	;code access
 10127  0B59  00AD               	movwf	??_atoi
 10128  0B5A  01AE               	clrf	??_atoi+1
 10129                           
 10130                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10131                           ; Switch size 1, requested type "simple"
 10132                           ; Number of cases is 1, Range of values is 0 to 0
 10133                           ; switch strategies available:
 10134                           ; Name         Instructions Cycles
 10135                           ; simple_byte            4     3 (average)
 10136                           ; direct_byte            8     6 (fixed)
 10137                           ; jumptable            260     6 (fixed)
 10138                           ;	Chosen strategy is simple_byte
 10139  0B5B  082E               	movf	??_atoi+1,w
 10140  0B5C  3A00               	xorlw	0	; case 0
 10141  0B5D  1903               	skipnz
 10142  0B5E  2B60               	goto	l4099
 10143  0B5F  2B88               	goto	l3811
 10144  0B60                     l4099:
 10145                           
 10146                           ; Switch size 1, requested type "simple"
 10147                           ; Number of cases is 2, Range of values is 43 to 45
 10148                           ; switch strategies available:
 10149                           ; Name         Instructions Cycles
 10150                           ; simple_byte            7     4 (average)
 10151                           ; direct_byte           15     9 (fixed)
 10152                           ; jumptable            263     9 (fixed)
 10153                           ;	Chosen strategy is simple_byte
 10154  0B60  082D               	movf	??_atoi,w
 10155  0B61  3A2B               	xorlw	43	; case 43
 10156  0B62  1903               	skipnz
 10157  0B63  2B4F               	goto	l1209
 10158  0B64  3A06               	xorlw	6	; case 45
 10159  0B65  1903               	skipnz
 10160  0B66  2B4B               	goto	l3803
 10161  0B67  2B88               	goto	l3811
 10162  0B68                     l3807:
 10163  0B68  082B               	movf	atoi@s,w
 10164  0B69  0084               	movwf	4
 10165  0B6A  082C               	movf	atoi@s+1,w
 10166  0B6B  0085               	movwf	5
 10167  0B6C  0800               	movf	0,w	;code access
 10168  0B6D  00AD               	movwf	??_atoi
 10169  0B6E  0839               	movf	atoi@n+1,w
 10170  0B6F  00A6               	movwf	___wmul@multiplier+1
 10171  0B70  0838               	movf	atoi@n,w
 10172  0B71  00A5               	movwf	___wmul@multiplier
 10173  0B72  300A               	movlw	10
 10174  0B73  00A7               	movwf	___wmul@multiplicand
 10175  0B74  3000               	movlw	0
 10176  0B75  00A8               	movwf	___wmul@multiplicand+1
 10177  0B76  3196  26B5  318B   	fcall	___wmul
 10178  0B79  0020               	movlb	0	; select bank0
 10179  0B7A  0826               	movf	?___wmul+1,w
 10180  0B7B  00AF               	movwf	??_atoi+2
 10181  0B7C  082D               	movf	??_atoi,w
 10182  0B7D  0225               	subwf	?___wmul,w
 10183  0B7E  00AE               	movwf	??_atoi+1
 10184  0B7F  1C03               	skipc
 10185  0B80  03AF               	decf	??_atoi+2,f
 10186  0B81  082E               	movf	??_atoi+1,w
 10187  0B82  3E30               	addlw	48
 10188  0B83  00B8               	movwf	atoi@n
 10189  0B84  3000               	movlw	0
 10190  0B85  3D2F               	addwfc	??_atoi+2,w
 10191  0B86  00B9               	movwf	atoi@n+1
 10192  0B87  2B4F               	goto	l1209
 10193  0B88                     l3811:
 10194  0B88  082B               	movf	atoi@s,w
 10195  0B89  0084               	movwf	4
 10196  0B8A  082C               	movf	atoi@s+1,w
 10197  0B8B  0085               	movwf	5
 10198  0B8C  0800               	movf	0,w	;code access
 10199  0B8D  3ED0               	addlw	208
 10200  0B8E  00AD               	movwf	??_atoi
 10201  0B8F  30FF               	movlw	255
 10202  0B90  1803               	skipnc
 10203  0B91  3000               	movlw	0
 10204  0B92  00AE               	movwf	??_atoi+1
 10205  0B93  3000               	movlw	0
 10206  0B94  022E               	subwf	??_atoi+1,w
 10207  0B95  300A               	movlw	10
 10208  0B96  1903               	skipnz
 10209  0B97  022D               	subwf	??_atoi,w
 10210  0B98  1C03               	skipc
 10211  0B99  2B9B               	goto	u4721
 10212  0B9A  2B9D               	goto	u4720
 10213  0B9B                     u4721:
 10214  0B9B  3001               	movlw	1
 10215  0B9C  2B9E               	goto	u4730
 10216  0B9D                     u4720:
 10217  0B9D  3000               	movlw	0
 10218  0B9E                     u4730:
 10219  0B9E  00AF               	movwf	??_atoi+2
 10220  0B9F  01B0               	clrf	??_atoi+3
 10221  0BA0  082F               	movf	??_atoi+2,w
 10222  0BA1  00B5               	movwf	_atoi$1461
 10223  0BA2  0830               	movf	??_atoi+3,w
 10224  0BA3  00B6               	movwf	_atoi$1461+1
 10225  0BA4                     l3815:
 10226  0BA4  0835               	movf	_atoi$1461,w
 10227  0BA5  0436               	iorwf	_atoi$1461+1,w
 10228  0BA6  1D03               	btfss	3,2
 10229  0BA7  2BA9               	goto	u4741
 10230  0BA8  2BAA               	goto	u4740
 10231  0BA9                     u4741:
 10232  0BA9  2B68               	goto	l3807
 10233  0BAA                     u4740:
 10234  0BAA                     l3817:
 10235  0BAA  0831               	movf	atoi@neg,w
 10236  0BAB  0432               	iorwf	atoi@neg+1,w
 10237  0BAC  1D03               	btfss	3,2
 10238  0BAD  2BAF               	goto	u4751
 10239  0BAE  2BB0               	goto	u4750
 10240  0BAF                     u4751:
 10241  0BAF  2BBC               	goto	l3821
 10242  0BB0                     u4750:
 10243  0BB0                     l3819:
 10244  0BB0  0938               	comf	atoi@n,w
 10245  0BB1  00AD               	movwf	??_atoi
 10246  0BB2  0939               	comf	atoi@n+1,w
 10247  0BB3  00AE               	movwf	??_atoi+1
 10248  0BB4  0AAD               	incf	??_atoi,f
 10249  0BB5  1903               	skipnz
 10250  0BB6  0AAE               	incf	??_atoi+1,f
 10251  0BB7  082D               	movf	??_atoi,w
 10252  0BB8  00AB               	movwf	?_atoi
 10253  0BB9  082E               	movf	??_atoi+1,w
 10254  0BBA  00AC               	movwf	?_atoi+1
 10255  0BBB  2BC0               	goto	l1222
 10256  0BBC                     l3821:
 10257  0BBC  0839               	movf	atoi@n+1,w
 10258  0BBD  00AC               	movwf	?_atoi+1
 10259  0BBE  0838               	movf	atoi@n,w
 10260  0BBF  00AB               	movwf	?_atoi
 10261  0BC0                     l1222:
 10262  0BC0  0008               	return
 10263  0BC1                     __end_of_atoi:
 10264                           
 10265                           	psect	text18
 10266  16F6                     __ptext18:	
 10267 ;; *************** function _isspace *****************
 10268 ;; Defined at:
 10269 ;;		line 5 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/isspace.c"
 10270 ;; Parameters:    Size  Location     Type
 10271 ;;  c               2    5[BANK0 ] int 
 10272 ;; Auto vars:     Size  Location     Type
 10273 ;;		None
 10274 ;; Return value:  Size  Location     Type
 10275 ;;                  2    5[BANK0 ] int 
 10276 ;; Registers used:
 10277 ;;		wreg, status,2, status,0
 10278 ;; Tracked objects:
 10279 ;;		On entry : 0/0
 10280 ;;		On exit  : 0/0
 10281 ;;		Unchanged: 0/0
 10282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10283 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10284 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10285 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10286 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10287 ;;Total ram usage:        5 bytes
 10288 ;; Hardware stack levels used:    1
 10289 ;; Hardware stack levels required when called:    2
 10290 ;; This function calls:
 10291 ;;		Nothing
 10292 ;; This function is called by:
 10293 ;;		_atoi
 10294 ;; This function uses a non-reentrant model
 10295 ;;
 10296                           
 10297                           
 10298                           ;psect for function _isspace
 10299  16F6                     _isspace:
 10300  16F6                     l3651:	
 10301                           ;incstack = 0
 10302                           ; Regs used in _isspace: [wreg+status,2+status,0]
 10303                           
 10304  16F6  0020               	movlb	0	; select bank0
 10305  16F7  01A9               	clrf	_isspace$1486
 10306  16F8  0AA9               	incf	_isspace$1486,f
 10307  16F9                     l3653:
 10308  16F9  3020               	movlw	32
 10309  16FA  0625               	xorwf	isspace@c,w
 10310  16FB  0426               	iorwf	isspace@c+1,w
 10311  16FC  1903               	btfsc	3,2
 10312  16FD  2EFF               	goto	u4341
 10313  16FE  2F00               	goto	u4340
 10314  16FF                     u4341:
 10315  16FF  2F10               	goto	l3659
 10316  1700                     u4340:
 10317  1700                     l3655:
 10318  1700  0825               	movf	isspace@c,w
 10319  1701  3EF7               	addlw	247
 10320  1702  00A7               	movwf	??_isspace
 10321  1703  30FF               	movlw	255
 10322  1704  3D26               	addwfc	isspace@c+1,w
 10323  1705  00A8               	movwf	??_isspace+1
 10324  1706  3000               	movlw	0
 10325  1707  0228               	subwf	??_isspace+1,w
 10326  1708  3005               	movlw	5
 10327  1709  1903               	skipnz
 10328  170A  0227               	subwf	??_isspace,w
 10329  170B  1C03               	skipc
 10330  170C  2F0E               	goto	u4351
 10331  170D  2F0F               	goto	u4350
 10332  170E                     u4351:
 10333  170E  2F10               	goto	l3659
 10334  170F                     u4350:
 10335  170F                     l3657:
 10336  170F  01A9               	clrf	_isspace$1486
 10337  1710                     l3659:
 10338  1710  0829               	movf	_isspace$1486,w
 10339  1711  00A7               	movwf	??_isspace
 10340  1712  01A8               	clrf	??_isspace+1
 10341  1713  0827               	movf	??_isspace,w
 10342  1714  00A5               	movwf	?_isspace
 10343  1715  0828               	movf	??_isspace+1,w
 10344  1716  00A6               	movwf	?_isspace+1
 10345  1717                     l1239:
 10346  1717  0008               	return
 10347  1718                     __end_of_isspace:
 10348                           
 10349                           	psect	text19
 10350  1615                     __ptext19:	
 10351 ;; *************** function _isdigit *****************
 10352 ;; Defined at:
 10353 ;;		line 5 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/isdigit.c"
 10354 ;; Parameters:    Size  Location     Type
 10355 ;;  c               2    5[BANK0 ] int 
 10356 ;; Auto vars:     Size  Location     Type
 10357 ;;		None
 10358 ;; Return value:  Size  Location     Type
 10359 ;;                  2    5[BANK0 ] int 
 10360 ;; Registers used:
 10361 ;;		wreg, status,2, status,0
 10362 ;; Tracked objects:
 10363 ;;		On entry : 0/0
 10364 ;;		On exit  : 0/0
 10365 ;;		Unchanged: 0/0
 10366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10367 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10369 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10370 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10371 ;;Total ram usage:        6 bytes
 10372 ;; Hardware stack levels used:    1
 10373 ;; Hardware stack levels required when called:    2
 10374 ;; This function calls:
 10375 ;;		Nothing
 10376 ;; This function is called by:
 10377 ;;		_vfpfcnvrt
 10378 ;;		_atoi
 10379 ;; This function uses a non-reentrant model
 10380 ;;
 10381                           
 10382                           
 10383                           ;psect for function _isdigit
 10384  1615                     _isdigit:
 10385  1615                     l3647:	
 10386                           ;incstack = 0
 10387                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 10388                           
 10389  1615  0020               	movlb	0	; select bank0
 10390  1616  0825               	movf	isdigit@c,w
 10391  1617  3ED0               	addlw	208
 10392  1618  00A7               	movwf	??_isdigit
 10393  1619  30FF               	movlw	255
 10394  161A  3D26               	addwfc	isdigit@c+1,w
 10395  161B  00A8               	movwf	??_isdigit+1
 10396  161C  3000               	movlw	0
 10397  161D  0228               	subwf	??_isdigit+1,w
 10398  161E  300A               	movlw	10
 10399  161F  1903               	skipnz
 10400  1620  0227               	subwf	??_isdigit,w
 10401  1621  1C03               	skipc
 10402  1622  2E24               	goto	u4321
 10403  1623  2E26               	goto	u4320
 10404  1624                     u4321:
 10405  1624  3001               	movlw	1
 10406  1625  2E27               	goto	u4330
 10407  1626                     u4320:
 10408  1626  3000               	movlw	0
 10409  1627                     u4330:
 10410  1627  00A9               	movwf	??_isdigit+2
 10411  1628  01AA               	clrf	??_isdigit+3
 10412  1629  0829               	movf	??_isdigit+2,w
 10413  162A  00A5               	movwf	?_isdigit
 10414  162B  082A               	movf	??_isdigit+3,w
 10415  162C  00A6               	movwf	?_isdigit+1
 10416  162D                     l1231:
 10417  162D  0008               	return
 10418  162E                     __end_of_isdigit:
 10419                           
 10420                           	psect	text20
 10421  16B5                     __ptext20:	
 10422 ;; *************** function ___wmul *****************
 10423 ;; Defined at:
 10424 ;;		line 15 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/Umul16.c"
 10425 ;; Parameters:    Size  Location     Type
 10426 ;;  multiplier      2    5[BANK0 ] unsigned int 
 10427 ;;  multiplicand    2    7[BANK0 ] unsigned int 
 10428 ;; Auto vars:     Size  Location     Type
 10429 ;;  product         2    9[BANK0 ] unsigned int 
 10430 ;; Return value:  Size  Location     Type
 10431 ;;                  2    5[BANK0 ] unsigned int 
 10432 ;; Registers used:
 10433 ;;		wreg, status,2, status,0
 10434 ;; Tracked objects:
 10435 ;;		On entry : 0/0
 10436 ;;		On exit  : 0/0
 10437 ;;		Unchanged: 0/0
 10438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10439 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10440 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10442 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10443 ;;Total ram usage:        6 bytes
 10444 ;; Hardware stack levels used:    1
 10445 ;; Hardware stack levels required when called:    2
 10446 ;; This function calls:
 10447 ;;		Nothing
 10448 ;; This function is called by:
 10449 ;;		_atoi
 10450 ;; This function uses a non-reentrant model
 10451 ;;
 10452                           
 10453                           
 10454                           ;psect for function ___wmul
 10455  16B5                     ___wmul:
 10456  16B5                     l3521:	
 10457                           ;incstack = 0
 10458                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10459                           
 10460  16B5  0020               	movlb	0	; select bank0
 10461  16B6  01A9               	clrf	___wmul@product
 10462  16B7  01AA               	clrf	___wmul@product+1
 10463  16B8                     l3523:
 10464  16B8  1C25               	btfss	___wmul@multiplier,0
 10465  16B9  2EBB               	goto	u3951
 10466  16BA  2EBC               	goto	u3950
 10467  16BB                     u3951:
 10468  16BB  2EC0               	goto	l584
 10469  16BC                     u3950:
 10470  16BC                     l3525:
 10471  16BC  0827               	movf	___wmul@multiplicand,w
 10472  16BD  07A9               	addwf	___wmul@product,f
 10473  16BE  0828               	movf	___wmul@multiplicand+1,w
 10474  16BF  3DAA               	addwfc	___wmul@product+1,f
 10475  16C0                     l584:
 10476  16C0  3001               	movlw	1
 10477  16C1                     u3965:
 10478  16C1  35A7               	lslf	___wmul@multiplicand,f
 10479  16C2  0DA8               	rlf	___wmul@multiplicand+1,f
 10480  16C3  0B89               	decfsz	9,f
 10481  16C4  2EC1               	goto	u3965
 10482  16C5                     l3527:
 10483  16C5  3001               	movlw	1
 10484  16C6                     u3975:
 10485  16C6  36A6               	lsrf	___wmul@multiplier+1,f
 10486  16C7  0CA5               	rrf	___wmul@multiplier,f
 10487  16C8  0B89               	decfsz	9,f
 10488  16C9  2EC6               	goto	u3975
 10489  16CA                     l3529:
 10490  16CA  0825               	movf	___wmul@multiplier,w
 10491  16CB  0426               	iorwf	___wmul@multiplier+1,w
 10492  16CC  1D03               	btfss	3,2
 10493  16CD  2ECF               	goto	u3981
 10494  16CE  2ED0               	goto	u3980
 10495  16CF                     u3981:
 10496  16CF  2EB8               	goto	l3523
 10497  16D0                     u3980:
 10498  16D0                     l3531:
 10499  16D0  082A               	movf	___wmul@product+1,w
 10500  16D1  00A6               	movwf	?___wmul+1
 10501  16D2  0829               	movf	___wmul@product,w
 10502  16D3  00A5               	movwf	?___wmul
 10503  16D4                     l586:
 10504  16D4  0008               	return
 10505  16D5                     __end_of___wmul:
 10506                           
 10507                           	psect	text21
 10508  15BA                     __ptext21:	
 10509 ;; *************** function _read_irdist_dat *****************
 10510 ;; Defined at:
 10511 ;;		line 18 in file "/home/dev-user/Projects/Personal/PIC/PicTest1.X/ir_dist.c"
 10512 ;; Parameters:    Size  Location     Type
 10513 ;;		None
 10514 ;; Auto vars:     Size  Location     Type
 10515 ;;		None
 10516 ;; Return value:  Size  Location     Type
 10517 ;;                  1    wreg      enum E12715
 10518 ;; Registers used:
 10519 ;;		wreg, status,2, status,0
 10520 ;; Tracked objects:
 10521 ;;		On entry : 0/0
 10522 ;;		On exit  : 0/0
 10523 ;;		Unchanged: 0/0
 10524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10529 ;;Total ram usage:        0 bytes
 10530 ;; Hardware stack levels used:    1
 10531 ;; Hardware stack levels required when called:    2
 10532 ;; This function calls:
 10533 ;;		Nothing
 10534 ;; This function is called by:
 10535 ;;		_main
 10536 ;; This function uses a non-reentrant model
 10537 ;;
 10538                           
 10539                           
 10540                           ;psect for function _read_irdist_dat
 10541  15BA                     _read_irdist_dat:
 10542  15BA                     l3191:	
 10543                           ;incstack = 0
 10544                           ; Regs used in _read_irdist_dat: [wreg+status,2+status,0]
 10545                           
 10546                           
 10547                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/ir_dist.c: 20:     irdist_result = !POR
      +                          TBbits.RB0;
 10548  15BA  1003               	clrc
 10549  15BB  0020               	movlb	0	; select bank0
 10550  15BC  1C0D               	btfss	13,0	;volatile
 10551  15BD  1403               	setc
 10552  15BE  3000               	movlw	0
 10553  15BF  1803               	btfsc	3,0
 10554  15C0  3001               	movlw	1
 10555  15C1  0022               	movlb	2	; select bank2
 10556  15C2  00EC               	movwf	_irdist_result^(0+256)
 10557  15C3                     l3193:
 10558                           
 10559                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/ir_dist.c: 22:     return STAT_SUCCESS;
 10560  15C3  3000               	movlw	0
 10561  15C4                     l168:
 10562  15C4  0008               	return
 10563  15C5                     __end_of_read_irdist_dat:
 10564                           
 10565                           	psect	text22
 10566  0735                     __ptext22:	
 10567 ;; *************** function _read_dht11_dat *****************
 10568 ;; Defined at:
 10569 ;;		line 16 in file "/home/dev-user/Projects/Personal/PIC/PicTest1.X/dht11.c"
 10570 ;; Parameters:    Size  Location     Type
 10571 ;;		None
 10572 ;; Auto vars:     Size  Location     Type
 10573 ;;  i               1   23[BANK0 ] unsigned char 
 10574 ;;  counter         1   22[BANK0 ] unsigned char 
 10575 ;;  j               1   21[BANK0 ] unsigned char 
 10576 ;;  run_stat        1   20[BANK0 ] enum E2
 10577 ;;  laststate       1   19[BANK0 ] unsigned char 
 10578 ;; Return value:  Size  Location     Type
 10579 ;;                  1    wreg      enum E2
 10580 ;; Registers used:
 10581 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10582 ;; Tracked objects:
 10583 ;;		On entry : 0/0
 10584 ;;		On exit  : 0/0
 10585 ;;		Unchanged: 0/0
 10586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10588 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10589 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10590 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10591 ;;Total ram usage:       19 bytes
 10592 ;; Hardware stack levels used:    1
 10593 ;; Hardware stack levels required when called:    2
 10594 ;; This function calls:
 10595 ;;		Nothing
 10596 ;; This function is called by:
 10597 ;;		_main
 10598 ;; This function uses a non-reentrant model
 10599 ;;
 10600                           
 10601                           
 10602                           ;psect for function _read_dht11_dat
 10603  0735                     _read_dht11_dat:
 10604  0735                     l3117:	
 10605                           ;incstack = 0
 10606                           ; Regs used in _read_dht11_dat: [wreg+fsr1l+fsr1h+status,2+status,0]
 10607                           
 10608                           
 10609                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/dht11.c: 18:     uint8_t laststate = 1;
 10610  0735  0020               	movlb	0	; select bank0
 10611  0736  01B3               	clrf	read_dht11_dat@laststate
 10612  0737  0AB3               	incf	read_dht11_dat@laststate,f
 10613  0738                     l3119:
 10614                           
 10615                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/dht11.c: 20:     uint8_t j = 0, i;
 10616  0738  01B5               	clrf	read_dht11_dat@j
 10617  0739                     l3121:
 10618                           
 10619                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/dht11.c: 21:     STATUS_T run_stat = ST
      +                          AT_FAIL;
 10620  0739  30FE               	movlw	254
 10621  073A  00A5               	movwf	??_read_dht11_dat
 10622  073B  0825               	movf	??_read_dht11_dat,w
 10623  073C  00B4               	movwf	read_dht11_dat@run_stat
 10624  073D                     l3123:
 10625                           
 10626                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/dht11.c: 23:     for(i = 0; i < 5; i++)
 10627  073D  01B7               	clrf	read_dht11_dat@i
 10628  073E                     l3127:
 10629                           
 10630                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/dht11.c: 24:         dht11_dat_arr[i] =
      +                           0;
 10631  073E  0837               	movf	read_dht11_dat@i,w
 10632  073F  3EAD               	addlw	(low (_dht11_dat_arr| (0+256)))& (0+255)
 10633  0740  0086               	movwf	6
 10634  0741  3001               	movlw	1	; select bank3/4
 10635  0742  0087               	movwf	7
 10636  0743  0181               	clrf	1
 10637  0744                     l3129:
 10638  0744  3001               	movlw	1
 10639  0745  00A5               	movwf	??_read_dht11_dat
 10640  0746  0825               	movf	??_read_dht11_dat,w
 10641  0747  07B7               	addwf	read_dht11_dat@i,f
 10642  0748                     l3131:
 10643  0748  3005               	movlw	5
 10644  0749  0237               	subwf	read_dht11_dat@i,w
 10645  074A  1C03               	skipc
 10646  074B  2F4D               	goto	u3341
 10647  074C  2F4E               	goto	u3340
 10648  074D                     u3341:
 10649  074D  2F3E               	goto	l3127
 10650  074E                     u3340:
 10651  074E                     l136:
 10652                           
 10653                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/dht11.c: 27:     LATDbits.LATD6 = 0;
 10654  074E  1319               	bcf	25,6	;volatile
 10655                           
 10656                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/dht11.c: 28:     TRISDbits.TRISD6 = 0;
 10657  074F  1314               	bcf	20,6	;volatile
 10658  0750                     l3133:
 10659                           
 10660                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/dht11.c: 29:     _delay((unsigned long)
      +                          ((18)*(32000000/4000.0)));
 10661  0750  30BC               	movlw	188
 10662  0751  0020               	movlb	0	; select bank0
 10663  0752  00A5               	movwf	??_read_dht11_dat
 10664  0753  3001               	movlw	1
 10665  0754                     u5077:
 10666  0754  0B89               	decfsz	9,f
 10667  0755  2F54               	goto	u5077
 10668  0756  0BA5               	decfsz	??_read_dht11_dat,f
 10669  0757  2F54               	goto	u5077
 10670  0758  3200               	nop2
 10671  0759                     l3135:
 10672                           
 10673                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/dht11.c: 31:     LATDbits.LATD6 = 1;
 10674  0759  0020               	movlb	0	; select bank0
 10675  075A  1719               	bsf	25,6	;volatile
 10676                           
 10677                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/dht11.c: 33:     _delay((unsigned long)
      +                          ((40)*(32000000/4000000.0)));
 10678  075B  306A               	movlw	106
 10679  075C                     u5087:
 10680  075C  0B89               	decfsz	9,f
 10681  075D  2F5C               	goto	u5087
 10682  075E  3200               	nop2
 10683  075F                     l3137:
 10684                           
 10685                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/dht11.c: 35:     GIE = 0;
 10686  075F  138B               	bcf	11,7	;volatile
 10687  0760                     l3139:
 10688                           
 10689                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/dht11.c: 36:     TRISDbits.TRISD6 = 1;
 10690  0760  0020               	movlb	0	; select bank0
 10691  0761  1714               	bsf	20,6	;volatile
 10692  0762                     l3141:
 10693                           
 10694                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/dht11.c: 38:     for(i = 0; i < 85; i++
      +                          ){
 10695  0762  01B7               	clrf	read_dht11_dat@i
 10696  0763                     l3147:
 10697                           
 10698                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/dht11.c: 39:         counter = 0;
 10699  0763  01B6               	clrf	read_dht11_dat@counter
 10700                           
 10701                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/dht11.c: 40:         while(PORTDbits.RD
      +                          6 == laststate){
 10702  0764  2F6F               	goto	l3153
 10703  0765                     l3149:
 10704                           
 10705                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/dht11.c: 41:             counter++;
 10706  0765  3001               	movlw	1
 10707  0766  00A5               	movwf	??_read_dht11_dat
 10708  0767  0825               	movf	??_read_dht11_dat,w
 10709  0768  07B6               	addwf	read_dht11_dat@counter,f
 10710                           
 10711                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/dht11.c: 43:             if(counter == 
      +                          255){
 10712  0769  0A36               	incf	read_dht11_dat@counter,w
 10713  076A  1D03               	btfss	3,2
 10714  076B  2F6D               	goto	u3351
 10715  076C  2F6E               	goto	u3350
 10716  076D                     u3351:
 10717  076D  2F6F               	goto	l3153
 10718  076E                     u3350:
 10719  076E  2F78               	goto	l3155
 10720  076F                     l3153:
 10721                           
 10722                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/dht11.c: 40:         while(PORTDbits.RD
      +                          6 == laststate){
 10723  076F  0E0F               	swapf	15,w	;volatile
 10724  0770  0C89               	rrf	9,f
 10725  0771  0C89               	rrf	9,f
 10726  0772  3901               	andlw	1
 10727  0773  0633               	xorwf	read_dht11_dat@laststate,w
 10728  0774  1903               	skipnz
 10729  0775  2F77               	goto	u3361
 10730  0776  2F78               	goto	u3360
 10731  0777                     u3361:
 10732  0777  2F65               	goto	l3149
 10733  0778                     u3360:
 10734  0778                     l3155:
 10735                           
 10736                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/dht11.c: 47:         laststate = PORTDb
      +                          its.RD6;
 10737  0778  3000               	movlw	0
 10738  0779  1B0F               	btfsc	15,6	;volatile
 10739  077A  3001               	movlw	1
 10740  077B  00B3               	movwf	read_dht11_dat@laststate
 10741  077C                     l3157:
 10742                           
 10743                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/dht11.c: 49:         if(counter == 255)
      +                          {
 10744  077C  0A36               	incf	read_dht11_dat@counter,w
 10745  077D  1D03               	btfss	3,2
 10746  077E  2F80               	goto	u3371
 10747  077F  2F81               	goto	u3370
 10748  0780                     u3371:
 10749  0780  2F82               	goto	l3161
 10750  0781                     u3370:
 10751  0781  2FB9               	goto	l138
 10752  0782                     l3161:
 10753                           
 10754                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/dht11.c: 53:         if((i>=4) && (i%2 
      +                          == 0)){
 10755  0782  3004               	movlw	4
 10756  0783  0237               	subwf	read_dht11_dat@i,w
 10757  0784  1C03               	skipc
 10758  0785  2F87               	goto	u3381
 10759  0786  2F88               	goto	u3380
 10760  0787                     u3381:
 10761  0787  2FAF               	goto	l3173
 10762  0788                     u3380:
 10763  0788                     l3163:
 10764  0788  1837               	btfsc	read_dht11_dat@i,0
 10765  0789  2F8B               	goto	u3391
 10766  078A  2F8C               	goto	u3390
 10767  078B                     u3391:
 10768  078B  2FAF               	goto	l3173
 10769  078C                     u3390:
 10770  078C                     l3165:
 10771                           
 10772                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/dht11.c: 54:             dht11_dat_arr[
      +                          j>>3] <<= 1;
 10773  078C  0835               	movf	read_dht11_dat@j,w
 10774  078D  00A5               	movwf	??_read_dht11_dat
 10775  078E  3003               	movlw	3
 10776  078F                     u3405:
 10777  078F  36A5               	lsrf	??_read_dht11_dat,f
 10778  0790  0B89               	decfsz	9,f
 10779  0791  2F8F               	goto	u3405
 10780  0792  0825               	movf	??_read_dht11_dat,w
 10781  0793  3EAD               	addlw	(low (_dht11_dat_arr| (0+256)))& (0+255)
 10782  0794  0086               	movwf	6
 10783  0795  3001               	movlw	1	; select bank3/4
 10784  0796  0087               	movwf	7
 10785  0797  1003               	clrc
 10786  0798  0D81               	rlf	1,f
 10787  0799                     l3167:
 10788                           
 10789                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/dht11.c: 55:             if(counter > 1
      +                          4){
 10790  0799  300F               	movlw	15
 10791  079A  0236               	subwf	read_dht11_dat@counter,w
 10792  079B  1C03               	skipc
 10793  079C  2F9E               	goto	u3411
 10794  079D  2F9F               	goto	u3410
 10795  079E                     u3411:
 10796  079E  2FAB               	goto	l3171
 10797  079F                     u3410:
 10798  079F                     l3169:
 10799                           
 10800                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/dht11.c: 56:                 dht11_dat_
      +                          arr[j>>3] |= 1;
 10801  079F  0835               	movf	read_dht11_dat@j,w
 10802  07A0  00A5               	movwf	??_read_dht11_dat
 10803  07A1  3003               	movlw	3
 10804  07A2                     u3425:
 10805  07A2  36A5               	lsrf	??_read_dht11_dat,f
 10806  07A3  0B89               	decfsz	9,f
 10807  07A4  2FA2               	goto	u3425
 10808  07A5  0825               	movf	??_read_dht11_dat,w
 10809  07A6  3EAD               	addlw	(low (_dht11_dat_arr| (0+256)))& (0+255)
 10810  07A7  0086               	movwf	6
 10811  07A8  3001               	movlw	1	; select bank3/4
 10812  07A9  0087               	movwf	7
 10813  07AA  1401               	bsf	1,0
 10814  07AB                     l3171:
 10815                           
 10816                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/dht11.c: 58:             j++;
 10817  07AB  3001               	movlw	1
 10818  07AC  00A5               	movwf	??_read_dht11_dat
 10819  07AD  0825               	movf	??_read_dht11_dat,w
 10820  07AE  07B5               	addwf	read_dht11_dat@j,f
 10821  07AF                     l3173:
 10822                           
 10823                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/dht11.c: 60:     }
 10824  07AF  3001               	movlw	1
 10825  07B0  00A5               	movwf	??_read_dht11_dat
 10826  07B1  0825               	movf	??_read_dht11_dat,w
 10827  07B2  07B7               	addwf	read_dht11_dat@i,f
 10828  07B3                     l3175:
 10829  07B3  3055               	movlw	85
 10830  07B4  0237               	subwf	read_dht11_dat@i,w
 10831  07B5  1C03               	skipc
 10832  07B6  2FB8               	goto	u3431
 10833  07B7  2FB9               	goto	u3430
 10834  07B8                     u3431:
 10835  07B8  2F63               	goto	l3147
 10836  07B9                     u3430:
 10837  07B9                     l138:
 10838                           
 10839                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/dht11.c: 61:     GIE = 1;
 10840  07B9  178B               	bsf	11,7	;volatile
 10841  07BA                     l3177:
 10842                           
 10843                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/dht11.c: 63:     if((j>=40) &&
 10844  07BA  3028               	movlw	40
 10845  07BB  0235               	subwf	read_dht11_dat@j,w
 10846  07BC  1C03               	skipc
 10847  07BD  2FBF               	goto	u3441
 10848  07BE  2FC0               	goto	u3440
 10849  07BF                     u3441:
 10850  07BF  2FF3               	goto	l3183
 10851  07C0                     u3440:
 10852  07C0                     l3179:
 10853  07C0  0023               	movlb	3	; select bank3
 10854  07C1  0830               	movf	(_dht11_dat_arr^(0+384)+3),w
 10855  07C2  0020               	movlb	0	; select bank0
 10856  07C3  00A5               	movwf	??_read_dht11_dat
 10857  07C4  01A6               	clrf	??_read_dht11_dat+1
 10858  07C5  0023               	movlb	3	; select bank3
 10859  07C6  082F               	movf	(_dht11_dat_arr^(0+384)+2),w
 10860  07C7  0020               	movlb	0	; select bank0
 10861  07C8  00A7               	movwf	??_read_dht11_dat+2
 10862  07C9  01A8               	clrf	??_read_dht11_dat+3
 10863  07CA  0023               	movlb	3	; select bank3
 10864  07CB  082D               	movf	_dht11_dat_arr^(0+384),w
 10865  07CC  072E               	addwf	(_dht11_dat_arr^(0+384)+1),w
 10866  07CD  0020               	movlb	0	; select bank0
 10867  07CE  00A9               	movwf	??_read_dht11_dat+4
 10868  07CF  01AA               	clrf	??_read_dht11_dat+5
 10869  07D0  0DAA               	rlf	??_read_dht11_dat+5,f
 10870  07D1  0827               	movf	??_read_dht11_dat+2,w
 10871  07D2  0729               	addwf	??_read_dht11_dat+4,w
 10872  07D3  00AB               	movwf	??_read_dht11_dat+6
 10873  07D4  0828               	movf	??_read_dht11_dat+3,w
 10874  07D5  3D2A               	addwfc	??_read_dht11_dat+5,w
 10875  07D6  00AC               	movwf	??_read_dht11_dat+7
 10876  07D7  0825               	movf	??_read_dht11_dat,w
 10877  07D8  072B               	addwf	??_read_dht11_dat+6,w
 10878  07D9  00AD               	movwf	??_read_dht11_dat+8
 10879  07DA  0826               	movf	??_read_dht11_dat+1,w
 10880  07DB  3D2C               	addwfc	??_read_dht11_dat+7,w
 10881  07DC  00AE               	movwf	??_read_dht11_dat+9
 10882  07DD  30FF               	movlw	255
 10883  07DE  052D               	andwf	??_read_dht11_dat+8,w
 10884  07DF  00AF               	movwf	??_read_dht11_dat+10
 10885  07E0  3000               	movlw	0
 10886  07E1  052E               	andwf	??_read_dht11_dat+9,w
 10887  07E2  00B0               	movwf	??_read_dht11_dat+11
 10888  07E3  0023               	movlb	3	; select bank3
 10889  07E4  0831               	movf	(_dht11_dat_arr^(0+384)+4),w
 10890  07E5  0020               	movlb	0	; select bank0
 10891  07E6  00B1               	movwf	??_read_dht11_dat+12
 10892  07E7  01B2               	clrf	??_read_dht11_dat+13
 10893  07E8  0830               	movf	??_read_dht11_dat+11,w
 10894  07E9  0632               	xorwf	??_read_dht11_dat+13,w
 10895  07EA  1D03               	skipz
 10896  07EB  2FEE               	goto	u3455
 10897  07EC  082F               	movf	??_read_dht11_dat+10,w
 10898  07ED  0631               	xorwf	??_read_dht11_dat+12,w
 10899  07EE                     u3455:
 10900  07EE  1D03               	skipz
 10901  07EF  2FF1               	goto	u3451
 10902  07F0  2FF2               	goto	u3450
 10903  07F1                     u3451:
 10904  07F1  2FF3               	goto	l3183
 10905  07F2                     u3450:
 10906  07F2                     l3181:
 10907                           
 10908                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/dht11.c: 65:     {;/home/dev-user/Proje
      +                          cts/Personal/PIC/PicTest1.X/dht11.c: 66:         run_stat = STAT_SUCCESS;
 10909  07F2  01B4               	clrf	read_dht11_dat@run_stat
 10910  07F3                     l3183:
 10911                           
 10912                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/dht11.c: 69:     LATDbits.LATD6 = 1;
 10913  07F3  1719               	bsf	25,6	;volatile
 10914  07F4                     l3185:
 10915                           
 10916                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/dht11.c: 70:     TRISDbits.TRISD6 = 0;
 10917  07F4  1314               	bcf	20,6	;volatile
 10918  07F5                     l3187:
 10919                           
 10920                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/dht11.c: 72:     return run_stat;
 10921  07F5  0834               	movf	read_dht11_dat@run_stat,w
 10922  07F6                     l147:
 10923  07F6  0008               	return
 10924  07F7                     __end_of_read_dht11_dat:
 10925                           
 10926                           	psect	text23
 10927  17C0                     __ptext23:	
 10928 ;; *************** function _load_tx_msg_str_crlf *****************
 10929 ;; Defined at:
 10930 ;;		line 126 in file "/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c"
 10931 ;; Parameters:    Size  Location     Type
 10932 ;;  in_bytes        1    wreg     PTR unsigned char 
 10933 ;;		 -> main@msg_buff(64), 
 10934 ;; Auto vars:     Size  Location     Type
 10935 ;;  in_bytes        1   65[BANK1 ] PTR unsigned char 
 10936 ;;		 -> main@msg_buff(64), 
 10937 ;;  new_buff       64    0[BANK1 ] unsigned char [64]
 10938 ;;  res             1    0        enum E12715
 10939 ;; Return value:  Size  Location     Type
 10940 ;;                  1    wreg      enum E12715
 10941 ;; Registers used:
 10942 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10943 ;; Tracked objects:
 10944 ;;		On entry : 0/0
 10945 ;;		On exit  : 0/0
 10946 ;;		Unchanged: 0/0
 10947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10949 ;;      Locals:         0       0      66       0       0       0       0       0       0       0       0       0       
      +0       0
 10950 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10951 ;;      Totals:         0       2      66       0       0       0       0       0       0       0       0       0       
      +0       0
 10952 ;;Total ram usage:       68 bytes
 10953 ;; Hardware stack levels used:    1
 10954 ;; Hardware stack levels required when called:    4
 10955 ;; This function calls:
 10956 ;;		_load_tx_msg_str
 10957 ;;		_strcat
 10958 ;;		_strcpy
 10959 ;;		_strlen
 10960 ;; This function is called by:
 10961 ;;		_main
 10962 ;; This function uses a non-reentrant model
 10963 ;;
 10964                           
 10965                           
 10966                           ;psect for function _load_tx_msg_str_crlf
 10967  17C0                     _load_tx_msg_str_crlf:
 10968                           
 10969                           ;incstack = 0
 10970                           ; Regs used in _load_tx_msg_str_crlf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10971                           ;load_tx_msg_str_crlf@in_bytes stored from wreg
 10972  17C0  0021               	movlb	1	; select bank1
 10973  17C1  00E1               	movwf	load_tx_msg_str_crlf@in_bytes^(0+128)
 10974  17C2                     l3989:
 10975  17C2                     l3991:
 10976                           
 10977                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 130:     if(64 > (strlen(in_b
      +                          ytes)+2)){
 10978  17C2  0861               	movf	load_tx_msg_str_crlf@in_bytes^(0+128),w
 10979  17C3  0020               	movlb	0	; select bank0
 10980  17C4  00A5               	movwf	strlen@s
 10981  17C5  3001               	movlw	1
 10982  17C6  00A6               	movwf	strlen@s+1
 10983  17C7  3196  2660  3197   	fcall	_strlen
 10984  17CA  0020               	movlb	0	; select bank0
 10985  17CB  0825               	movf	?_strlen,w
 10986  17CC  3E02               	addlw	2
 10987  17CD  00B6               	movwf	??_load_tx_msg_str_crlf
 10988  17CE  3000               	movlw	0
 10989  17CF  3D26               	addwfc	?_strlen+1,w
 10990  17D0  00B7               	movwf	??_load_tx_msg_str_crlf+1
 10991  17D1  3000               	movlw	0
 10992  17D2  0237               	subwf	??_load_tx_msg_str_crlf+1,w
 10993  17D3  3040               	movlw	64
 10994  17D4  1903               	skipnz
 10995  17D5  0236               	subwf	??_load_tx_msg_str_crlf,w
 10996  17D6  1803               	skipnc
 10997  17D7  2FD9               	goto	u4991
 10998  17D8  2FDA               	goto	u4990
 10999  17D9                     u4991:
 11000  17D9  2FF6               	goto	l3999
 11001  17DA                     u4990:
 11002  17DA                     l3993:
 11003                           
 11004                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 131:         char new_buff[64
      +                          ];;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 132:         strcpy(new_buf
      +                          f,in_bytes);
 11005  17DA  0021               	movlb	1	; select bank1
 11006  17DB  0861               	movf	load_tx_msg_str_crlf@in_bytes^(0+128),w
 11007  17DC  0020               	movlb	0	; select bank0
 11008  17DD  00A9               	movwf	strcpy@src
 11009  17DE  3001               	movlw	1
 11010  17DF  00AA               	movwf	strcpy@src+1
 11011  17E0  30A0               	movlw	(low (load_tx_msg_str_crlf@new_buff| 0))& (0+255)
 11012  17E1  3196  26D5  3197   	fcall	_strcpy
 11013                           
 11014                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 133:         strcat(new_buff,
      +                          "\n\r");
 11015  17E4  306A               	movlw	low (STR_1| (0+32768))
 11016  17E5  0020               	movlb	0	; select bank0
 11017  17E6  00B1               	movwf	strcat@src
 11018  17E7  3098               	movlw	high (STR_1| (0+32768))
 11019  17E8  00B2               	movwf	strcat@src+1
 11020  17E9  30A0               	movlw	(low (load_tx_msg_str_crlf@new_buff| 0))& (0+255)
 11021  17EA  3195  25FD  3197   	fcall	_strcat
 11022  17ED                     l3995:
 11023                           
 11024                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 135:         return load_tx_m
      +                          sg_str(new_buff);;	Return value of _load_tx_msg_str_crlf is never used
 11025  17ED  30A0               	movlw	low load_tx_msg_str_crlf@new_buff
 11026  17EE  0020               	movlb	0	; select bank0
 11027  17EF  00A9               	movwf	load_tx_msg_str@in_bytes
 11028  17F0  3000               	movlw	high load_tx_msg_str_crlf@new_buff
 11029  17F1  00AA               	movwf	load_tx_msg_str@in_bytes+1
 11030  17F2  3189  21DD  3197   	fcall	_load_tx_msg_str
 11031  17F5  2FFF               	goto	l115
 11032  17F6                     l3999:
 11033                           
 11034                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 138:     return load_tx_msg_s
      +                          tr(in_bytes);;	Return value of _load_tx_msg_str_crlf is never used
 11035  17F6  0021               	movlb	1	; select bank1
 11036  17F7  0861               	movf	load_tx_msg_str_crlf@in_bytes^(0+128),w
 11037  17F8  0020               	movlb	0	; select bank0
 11038  17F9  00A9               	movwf	load_tx_msg_str@in_bytes
 11039  17FA  3001               	movlw	1
 11040  17FB  00AA               	movwf	load_tx_msg_str@in_bytes+1
 11041  17FC  3189  21DD  3197   	fcall	_load_tx_msg_str
 11042  17FF                     l115:
 11043  17FF  0008               	return
 11044  1800                     __end_of_load_tx_msg_str_crlf:
 11045                           
 11046                           	psect	text24
 11047  15FD                     __ptext24:	
 11048 ;; *************** function _strcat *****************
 11049 ;; Defined at:
 11050 ;;		line 3 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/strcat.c"
 11051 ;; Parameters:    Size  Location     Type
 11052 ;;  dest            1    wreg     PTR unsigned char 
 11053 ;;		 -> load_tx_msg_str_crlf@new_buff(64), 
 11054 ;;  src             2   17[BANK0 ] PTR const unsigned char 
 11055 ;;		 -> STR_1(3), 
 11056 ;; Auto vars:     Size  Location     Type
 11057 ;;  dest            1   21[BANK0 ] PTR unsigned char 
 11058 ;;		 -> load_tx_msg_str_crlf@new_buff(64), 
 11059 ;; Return value:  Size  Location     Type
 11060 ;;                  1    wreg      PTR unsigned char 
 11061 ;; Registers used:
 11062 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11063 ;; Tracked objects:
 11064 ;;		On entry : 0/0
 11065 ;;		On exit  : 0/0
 11066 ;;		Unchanged: 0/0
 11067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11068 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11069 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11070 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11071 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11072 ;;Total ram usage:        5 bytes
 11073 ;; Hardware stack levels used:    1
 11074 ;; Hardware stack levels required when called:    3
 11075 ;; This function calls:
 11076 ;;		_strcpy
 11077 ;;		_strlen
 11078 ;; This function is called by:
 11079 ;;		_load_tx_msg_str_crlf
 11080 ;; This function uses a non-reentrant model
 11081 ;;
 11082                           
 11083                           
 11084                           ;psect for function _strcat
 11085  15FD                     _strcat:
 11086                           
 11087                           ;incstack = 0
 11088                           ; Regs used in _strcat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11089                           ;strcat@dest stored from wreg
 11090  15FD  0020               	movlb	0	; select bank0
 11091  15FE  00B5               	movwf	strcat@dest
 11092  15FF                     l3973:
 11093  15FF  0832               	movf	strcat@src+1,w
 11094  1600  00AA               	movwf	strcpy@src+1
 11095  1601  0831               	movf	strcat@src,w
 11096  1602  00A9               	movwf	strcpy@src
 11097  1603  0835               	movf	strcat@dest,w
 11098  1604  00A5               	movwf	strlen@s
 11099  1605  3000               	movlw	0
 11100  1606  00A6               	movwf	strlen@s+1
 11101  1607  3196  2660  3195   	fcall	_strlen
 11102  160A  0020               	movlb	0	; select bank0
 11103  160B  0825               	movf	?_strlen,w
 11104  160C  00B3               	movwf	??_strcat
 11105  160D  0826               	movf	?_strlen+1,w
 11106  160E  00B4               	movwf	??_strcat+1
 11107  160F  0835               	movf	strcat@dest,w
 11108  1610  0733               	addwf	??_strcat,w
 11109  1611  3196  26D5  3195   	fcall	_strcpy
 11110  1614                     l1278:
 11111  1614  0008               	return
 11112  1615                     __end_of_strcat:
 11113                           
 11114                           	psect	text25
 11115  16D5                     __ptext25:	
 11116 ;; *************** function _strcpy *****************
 11117 ;; Defined at:
 11118 ;;		line 3 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/strcpy.c"
 11119 ;; Parameters:    Size  Location     Type
 11120 ;;  dest            1    wreg     PTR unsigned char 
 11121 ;;		 -> load_tx_msg_str_crlf@new_buff(64), 
 11122 ;;  src             2    9[BANK0 ] PTR const unsigned char 
 11123 ;;		 -> main@msg_buff(64), STR_1(3), 
 11124 ;; Auto vars:     Size  Location     Type
 11125 ;;  dest            1   16[BANK0 ] PTR unsigned char 
 11126 ;;		 -> load_tx_msg_str_crlf@new_buff(64), 
 11127 ;;  s               2   13[BANK0 ] PTR const unsigned char 
 11128 ;;		 -> main@msg_buff(64), STR_1(3), 
 11129 ;;  d               1   15[BANK0 ] PTR unsigned char 
 11130 ;;		 -> load_tx_msg_str_crlf@new_buff(64), 
 11131 ;; Return value:  Size  Location     Type
 11132 ;;                  1    wreg      PTR unsigned char 
 11133 ;; Registers used:
 11134 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 11135 ;; Tracked objects:
 11136 ;;		On entry : 0/0
 11137 ;;		On exit  : 0/0
 11138 ;;		Unchanged: 0/0
 11139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11140 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11141 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11142 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11143 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11144 ;;Total ram usage:        8 bytes
 11145 ;; Hardware stack levels used:    1
 11146 ;; Hardware stack levels required when called:    2
 11147 ;; This function calls:
 11148 ;;		Nothing
 11149 ;; This function is called by:
 11150 ;;		_load_tx_msg_str_crlf
 11151 ;;		_strcat
 11152 ;; This function uses a non-reentrant model
 11153 ;;
 11154                           
 11155                           
 11156                           ;psect for function _strcpy
 11157  16D5                     _strcpy:
 11158                           
 11159                           ;incstack = 0
 11160                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
 11161                           ;strcpy@dest stored from wreg
 11162  16D5  0020               	movlb	0	; select bank0
 11163  16D6  00B0               	movwf	strcpy@dest
 11164  16D7                     l2747:
 11165  16D7  082A               	movf	strcpy@src+1,w
 11166  16D8  00AE               	movwf	strcpy@s+1
 11167  16D9  0829               	movf	strcpy@src,w
 11168  16DA  00AD               	movwf	strcpy@s
 11169  16DB  0830               	movf	strcpy@dest,w
 11170  16DC  00AB               	movwf	??_strcpy
 11171  16DD  082B               	movf	??_strcpy,w
 11172  16DE  00AF               	movwf	strcpy@d
 11173  16DF                     l2749:
 11174  16DF  082F               	movf	strcpy@d,w
 11175  16E0  0086               	movwf	6
 11176  16E1  0187               	clrf	7
 11177  16E2  0AAF               	incf	strcpy@d,f
 11178  16E3  082E               	movf	strcpy@s+1,w
 11179  16E4  00AC               	movwf	??_strcpy+1
 11180  16E5  082D               	movf	strcpy@s,w
 11181  16E6  00AB               	movwf	??_strcpy
 11182  16E7  0AAD               	incf	strcpy@s,f
 11183  16E8  1903               	skipnz
 11184  16E9  0AAE               	incf	strcpy@s+1,f
 11185  16EA  082B               	movf	??_strcpy,w
 11186  16EB  0084               	movwf	4
 11187  16EC  082C               	movf	??_strcpy+1,w
 11188  16ED  0085               	movwf	5
 11189  16EE  0800               	movf	0,w	;code access
 11190  16EF  3FC0               	movwi [0]fsr1
 11191  16F0  0889               	movf	9,f
 11192  16F1  1D03               	btfss	3,2
 11193  16F2  2EF4               	goto	u2831
 11194  16F3  2EF5               	goto	u2830
 11195  16F4                     u2831:
 11196  16F4  2EDF               	goto	l2749
 11197  16F5                     u2830:
 11198  16F5                     l1284:
 11199  16F5  0008               	return
 11200  16F6                     __end_of_strcpy:
 11201                           
 11202                           	psect	text26
 11203  09DD                     __ptext26:	
 11204 ;; *************** function _load_tx_msg_str *****************
 11205 ;; Defined at:
 11206 ;;		line 99 in file "/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c"
 11207 ;; Parameters:    Size  Location     Type
 11208 ;;  in_bytes        2    9[BANK0 ] PTR unsigned char 
 11209 ;;		 -> main@msg_buff(64), load_tx_msg_str_crlf@new_buff(64), 
 11210 ;; Auto vars:     Size  Location     Type
 11211 ;;  i               1   16[BANK0 ] unsigned char 
 11212 ;; Return value:  Size  Location     Type
 11213 ;;                  1    wreg      enum E12715
 11214 ;; Registers used:
 11215 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11216 ;; Tracked objects:
 11217 ;;		On entry : 0/0
 11218 ;;		On exit  : 0/0
 11219 ;;		Unchanged: 0/0
 11220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11221 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11222 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11223 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11224 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11225 ;;Total ram usage:        8 bytes
 11226 ;; Hardware stack levels used:    1
 11227 ;; Hardware stack levels required when called:    3
 11228 ;; This function calls:
 11229 ;;		_strlen
 11230 ;; This function is called by:
 11231 ;;		_load_tx_msg_str_crlf
 11232 ;; This function uses a non-reentrant model
 11233 ;;
 11234                           
 11235                           
 11236                           ;psect for function _load_tx_msg_str
 11237  09DD                     _load_tx_msg_str:
 11238  09DD                     l3935:	
 11239                           ;incstack = 0
 11240                           ; Regs used in _load_tx_msg_str: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11241                           
 11242                           
 11243                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 99: STATUS_T load_tx_msg_str(
      +                          char * in_bytes);/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 100: {;/home/
      +                          dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 101:     TXIE = 0;
 11244  09DD  002E               	movlb	14	; select bank14
 11245  09DE  1219               	bcf	25,4	;volatile
 11246                           
 11247                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 102:     TXEN = 0;
 11248  09DF  0022               	movlb	2	; select bank2
 11249  09E0  129E               	bcf	30,5	;volatile
 11250  09E1                     l3937:
 11251                           
 11252                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 103:     if((eusart_tx_buff_t
      +                          ail != eusart_tx_buff_head) || !eusart_tx_buff_full){
 11253  09E1  0020               	movlb	0	; select bank0
 11254  09E2  086A               	movf	_eusart_tx_buff_tail,w
 11255  09E3  0669               	xorwf	_eusart_tx_buff_head,w
 11256  09E4  1D03               	skipz
 11257  09E5  29E7               	goto	u4891
 11258  09E6  29E8               	goto	u4890
 11259  09E7                     u4891:
 11260  09E7  29ED               	goto	l3941
 11261  09E8                     u4890:
 11262  09E8                     l3939:
 11263  09E8  087D               	movf	_eusart_tx_buff_full,w
 11264  09E9  1D03               	btfss	3,2
 11265  09EA  29EC               	goto	u4901
 11266  09EB  29ED               	goto	u4900
 11267  09EC                     u4901:
 11268  09EC  2A55               	goto	l3965
 11269  09ED                     u4900:
 11270  09ED                     l3941:
 11271                           
 11272                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 104:         if(((eusart_tx_b
      +                          uff_tail - eusart_tx_buff_head) >= strlen(in_bytes)) || ((eusart_tx_buff_head == eusart_
      +                          tx_buff_tail) && !eusart_tx_buff_full)){
 11273  09ED  082A               	movf	load_tx_msg_str@in_bytes+1,w
 11274  09EE  00A6               	movwf	strlen@s+1
 11275  09EF  0829               	movf	load_tx_msg_str@in_bytes,w
 11276  09F0  00A5               	movwf	strlen@s
 11277  09F1  3196  2660  3189   	fcall	_strlen
 11278  09F4  0020               	movlb	0	; select bank0
 11279  09F5  086A               	movf	_eusart_tx_buff_tail,w
 11280  09F6  00AB               	movwf	??_load_tx_msg_str
 11281  09F7  01AC               	clrf	??_load_tx_msg_str+1
 11282  09F8  082C               	movf	??_load_tx_msg_str+1,w
 11283  09F9  00AE               	movwf	??_load_tx_msg_str+3
 11284  09FA  0869               	movf	_eusart_tx_buff_head,w
 11285  09FB  022B               	subwf	??_load_tx_msg_str,w
 11286  09FC  00AD               	movwf	??_load_tx_msg_str+2
 11287  09FD  1C03               	skipc
 11288  09FE  03AE               	decf	??_load_tx_msg_str+3,f
 11289  09FF  0826               	movf	?_strlen+1,w
 11290  0A00  022E               	subwf	??_load_tx_msg_str+3,w
 11291  0A01  1D03               	skipz
 11292  0A02  2A05               	goto	u4915
 11293  0A03  0825               	movf	?_strlen,w
 11294  0A04  022D               	subwf	??_load_tx_msg_str+2,w
 11295  0A05                     u4915:
 11296  0A05  1803               	skipnc
 11297  0A06  2A08               	goto	u4911
 11298  0A07  2A09               	goto	u4910
 11299  0A08                     u4911:
 11300  0A08  2A14               	goto	l3947
 11301  0A09                     u4910:
 11302  0A09                     l3943:
 11303  0A09  0869               	movf	_eusart_tx_buff_head,w
 11304  0A0A  066A               	xorwf	_eusart_tx_buff_tail,w
 11305  0A0B  1D03               	skipz
 11306  0A0C  2A0E               	goto	u4921
 11307  0A0D  2A0F               	goto	u4920
 11308  0A0E                     u4921:
 11309  0A0E  2A53               	goto	l3961
 11310  0A0F                     u4920:
 11311  0A0F                     l3945:
 11312  0A0F  087D               	movf	_eusart_tx_buff_full,w
 11313  0A10  1D03               	btfss	3,2
 11314  0A11  2A13               	goto	u4931
 11315  0A12  2A14               	goto	u4930
 11316  0A13                     u4931:
 11317  0A13  2A53               	goto	l3961
 11318  0A14                     u4930:
 11319  0A14                     l3947:
 11320                           
 11321                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 105:             for(uint8_t 
      +                          i = 0; i < strlen(in_bytes); i++){
 11322  0A14  01B0               	clrf	load_tx_msg_str@i
 11323  0A15  2A35               	goto	l3955
 11324  0A16                     l3949:
 11325                           
 11326                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 106:                 eusart_t
      +                          x_buff[eusart_tx_buff_head++] = in_bytes[i];
 11327  0A16  0830               	movf	load_tx_msg_str@i,w
 11328  0A17  00AB               	movwf	??_load_tx_msg_str
 11329  0A18  01AC               	clrf	??_load_tx_msg_str+1
 11330  0A19  082B               	movf	??_load_tx_msg_str,w
 11331  0A1A  0729               	addwf	load_tx_msg_str@in_bytes,w
 11332  0A1B  0086               	movwf	6
 11333  0A1C  082C               	movf	??_load_tx_msg_str+1,w
 11334  0A1D  3D2A               	addwfc	load_tx_msg_str@in_bytes+1,w
 11335  0A1E  0087               	movwf	7
 11336  0A1F  0801               	movf	1,w
 11337  0A20  00AD               	movwf	??_load_tx_msg_str+2
 11338  0A21  0869               	movf	_eusart_tx_buff_head,w
 11339  0A22  3EF0               	addlw	240
 11340  0A23  00AE               	movwf	??_load_tx_msg_str+3
 11341  0A24  01AF               	clrf	??_load_tx_msg_str+4
 11342  0A25  3022               	movlw	34
 11343  0A26  3DAF               	addwfc	??_load_tx_msg_str+4,f
 11344  0A27  082E               	movf	??_load_tx_msg_str+3,w
 11345  0A28  0086               	movwf	6
 11346  0A29  082F               	movf	??_load_tx_msg_str+4,w
 11347  0A2A  0087               	movwf	7
 11348  0A2B  082D               	movf	??_load_tx_msg_str+2,w
 11349  0A2C  0081               	movwf	1
 11350  0A2D                     l3951:
 11351  0A2D  3001               	movlw	1
 11352  0A2E  00AB               	movwf	??_load_tx_msg_str
 11353  0A2F  082B               	movf	??_load_tx_msg_str,w
 11354  0A30  07E9               	addwf	_eusart_tx_buff_head,f
 11355  0A31                     l3953:
 11356                           
 11357                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 107:             }
 11358  0A31  3001               	movlw	1
 11359  0A32  00AB               	movwf	??_load_tx_msg_str
 11360  0A33  082B               	movf	??_load_tx_msg_str,w
 11361  0A34  07B0               	addwf	load_tx_msg_str@i,f
 11362  0A35                     l3955:
 11363  0A35  082A               	movf	load_tx_msg_str@in_bytes+1,w
 11364  0A36  00A6               	movwf	strlen@s+1
 11365  0A37  0829               	movf	load_tx_msg_str@in_bytes,w
 11366  0A38  00A5               	movwf	strlen@s
 11367  0A39  3196  2660  3189   	fcall	_strlen
 11368  0A3C  0020               	movlb	0	; select bank0
 11369  0A3D  0830               	movf	load_tx_msg_str@i,w
 11370  0A3E  00AB               	movwf	??_load_tx_msg_str
 11371  0A3F  01AC               	clrf	??_load_tx_msg_str+1
 11372  0A40  0826               	movf	?_strlen+1,w
 11373  0A41  022C               	subwf	??_load_tx_msg_str+1,w
 11374  0A42  1D03               	skipz
 11375  0A43  2A46               	goto	u4945
 11376  0A44  0825               	movf	?_strlen,w
 11377  0A45  022B               	subwf	??_load_tx_msg_str,w
 11378  0A46                     u4945:
 11379  0A46  1C03               	skipc
 11380  0A47  2A49               	goto	u4941
 11381  0A48  2A4A               	goto	u4940
 11382  0A49                     u4941:
 11383  0A49  2A16               	goto	l3949
 11384  0A4A                     u4940:
 11385  0A4A                     l3957:
 11386                           
 11387                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 108:             if(eusart_tx
      +                          _buff_head == eusart_tx_buff_tail){
 11388  0A4A  0869               	movf	_eusart_tx_buff_head,w
 11389  0A4B  066A               	xorwf	_eusart_tx_buff_tail,w
 11390  0A4C  1D03               	skipz
 11391  0A4D  2A4F               	goto	u4951
 11392  0A4E  2A50               	goto	u4950
 11393  0A4F                     u4951:
 11394  0A4F  2A55               	goto	l3965
 11395  0A50                     u4950:
 11396  0A50                     l3959:
 11397                           
 11398                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 109:                 eusart_t
      +                          x_buff_full = 1;
 11399  0A50  01FD               	clrf	_eusart_tx_buff_full
 11400  0A51  0AFD               	incf	_eusart_tx_buff_full,f
 11401  0A52  2A55               	goto	l3965
 11402  0A53                     l3961:
 11403                           
 11404                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 112:             return STAT_
      +                          FAIL;
 11405  0A53  30FE               	movlw	254
 11406  0A54  2A65               	goto	l107
 11407  0A55                     l3965:
 11408                           
 11409                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 118:     if((eusart_tx_buff_h
      +                          ead != eusart_tx_buff_tail) || (eusart_tx_buff_full)){
 11410  0A55  0869               	movf	_eusart_tx_buff_head,w
 11411  0A56  066A               	xorwf	_eusart_tx_buff_tail,w
 11412  0A57  1D03               	skipz
 11413  0A58  2A5A               	goto	u4961
 11414  0A59  2A5B               	goto	u4960
 11415  0A5A                     u4961:
 11416  0A5A  2A60               	goto	l111
 11417  0A5B                     u4960:
 11418  0A5B                     l3967:
 11419  0A5B  087D               	movf	_eusart_tx_buff_full,w
 11420  0A5C  1903               	btfsc	3,2
 11421  0A5D  2A5F               	goto	u4971
 11422  0A5E  2A60               	goto	u4970
 11423  0A5F                     u4971:
 11424  0A5F  2A64               	goto	l3969
 11425  0A60                     u4970:
 11426  0A60                     l111:
 11427                           
 11428                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 119:         TXIE = 1;
 11429  0A60  002E               	movlb	14	; select bank14
 11430  0A61  1619               	bsf	25,4	;volatile
 11431                           
 11432                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 120:         TXEN = 1;
 11433  0A62  0022               	movlb	2	; select bank2
 11434  0A63  169E               	bsf	30,5	;volatile
 11435  0A64                     l3969:
 11436                           
 11437                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 123:     return STAT_SUCCESS;
 11438  0A64  3000               	movlw	0
 11439  0A65                     l107:
 11440  0A65  0008               	return
 11441  0A66                     __end_of_load_tx_msg_str:
 11442                           
 11443                           	psect	text27
 11444  1660                     __ptext27:	
 11445 ;; *************** function _strlen *****************
 11446 ;; Defined at:
 11447 ;;		line 5 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/strlen.c"
 11448 ;; Parameters:    Size  Location     Type
 11449 ;;  s               2    5[BANK0 ] PTR const unsigned char 
 11450 ;;		 -> dbuf(32), main@msg_buff(64), load_tx_msg_str_crlf@new_buff(64), 
 11451 ;; Auto vars:     Size  Location     Type
 11452 ;;  a               2    7[BANK0 ] PTR const unsigned char 
 11453 ;;		 -> dbuf(32), main@msg_buff(64), load_tx_msg_str_crlf@new_buff(64), 
 11454 ;; Return value:  Size  Location     Type
 11455 ;;                  2    5[BANK0 ] unsigned int 
 11456 ;; Registers used:
 11457 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11458 ;; Tracked objects:
 11459 ;;		On entry : 0/0
 11460 ;;		On exit  : 0/0
 11461 ;;		Unchanged: 0/0
 11462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11463 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11464 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11466 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11467 ;;Total ram usage:        4 bytes
 11468 ;; Hardware stack levels used:    1
 11469 ;; Hardware stack levels required when called:    2
 11470 ;; This function calls:
 11471 ;;		Nothing
 11472 ;; This function is called by:
 11473 ;;		_load_tx_msg_str
 11474 ;;		_load_tx_msg_str_crlf
 11475 ;;		_pad
 11476 ;;		_strcat
 11477 ;; This function uses a non-reentrant model
 11478 ;;
 11479                           
 11480                           
 11481                           ;psect for function _strlen
 11482  1660                     _strlen:
 11483  1660                     l3499:	
 11484                           ;incstack = 0
 11485                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 11486                           
 11487  1660  0020               	movlb	0	; select bank0
 11488  1661  0826               	movf	strlen@s+1,w
 11489  1662  00A8               	movwf	strlen@a+1
 11490  1663  0825               	movf	strlen@s,w
 11491  1664  00A7               	movwf	strlen@a
 11492  1665  2E6A               	goto	l3503
 11493  1666                     l3501:
 11494  1666  3001               	movlw	1
 11495  1667  07A5               	addwf	strlen@s,f
 11496  1668  3000               	movlw	0
 11497  1669  3DA6               	addwfc	strlen@s+1,f
 11498  166A                     l3503:
 11499  166A  0825               	movf	strlen@s,w
 11500  166B  0086               	movwf	6
 11501  166C  0826               	movf	strlen@s+1,w
 11502  166D  0087               	movwf	7
 11503  166E  0801               	movf	1,w
 11504  166F  1D03               	btfss	3,2
 11505  1670  2E72               	goto	u3911
 11506  1671  2E73               	goto	u3910
 11507  1672                     u3911:
 11508  1672  2E66               	goto	l3501
 11509  1673                     u3910:
 11510  1673                     l3505:
 11511  1673  0827               	movf	strlen@a,w
 11512  1674  0225               	subwf	strlen@s,w
 11513  1675  00A5               	movwf	?_strlen
 11514  1676  0828               	movf	strlen@a+1,w
 11515  1677  3B26               	subwfb	strlen@s+1,w
 11516  1678  00A6               	movwf	?_strlen+1
 11517  1679                     l1290:
 11518  1679  0008               	return
 11519  167A                     __end_of_strlen:
 11520                           
 11521                           	psect	text28
 11522  0957                     __ptext28:	
 11523 ;; *************** function _SysInit *****************
 11524 ;; Defined at:
 11525 ;;		line 13 in file "/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c"
 11526 ;; Parameters:    Size  Location     Type
 11527 ;;		None
 11528 ;; Auto vars:     Size  Location     Type
 11529 ;;		None
 11530 ;; Return value:  Size  Location     Type
 11531 ;;                  1    wreg      enum E12715
 11532 ;; Registers used:
 11533 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11534 ;; Tracked objects:
 11535 ;;		On entry : 0/0
 11536 ;;		On exit  : 0/0
 11537 ;;		Unchanged: 0/0
 11538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11541 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11542 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11543 ;;Total ram usage:        1 bytes
 11544 ;; Hardware stack levels used:    1
 11545 ;; Hardware stack levels required when called:    4
 11546 ;; This function calls:
 11547 ;;		_EUSARTSetup
 11548 ;;		_TmrEnable
 11549 ;;		_TmrSetup
 11550 ;;		_make_all_digital
 11551 ;;		_setup_dht11_snsr
 11552 ;;		_setup_irdist_snsr
 11553 ;; This function is called by:
 11554 ;;		_main
 11555 ;; This function uses a non-reentrant model
 11556 ;;
 11557                           
 11558                           
 11559                           ;psect for function _SysInit
 11560  0957                     _SysInit:
 11561  0957                     l3201:	
 11562                           ;incstack = 0
 11563                           ; Regs used in _SysInit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11564                           
 11565                           
 11566                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 16:     make_all_digital();
 11567  0957  3188  2000  3189   	fcall	_make_all_digital
 11568  095A                     l3203:
 11569                           
 11570                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 19:     TRISBbits.TRISB7 = 1;
 11571  095A  0020               	movlb	0	; select bank0
 11572  095B  1792               	bsf	18,7	;volatile
 11573  095C                     l3205:
 11574                           
 11575                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 20:     TRISBbits.TRISB6 = 1;
 11576  095C  1712               	bsf	18,6	;volatile
 11577  095D                     l3207:
 11578                           
 11579                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 23:     LATDbits.LATD1 = 0;
 11580  095D  1099               	bcf	25,1	;volatile
 11581  095E                     l3209:
 11582                           
 11583                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 24:     TRISDbits.TRISD1 = 0;
 11584  095E  1094               	bcf	20,1	;volatile
 11585  095F                     l3211:
 11586                           
 11587                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 27:     LATBbits.LATB5 = 0;
 11588  095F  1297               	bcf	23,5	;volatile
 11589  0960                     l3213:
 11590                           
 11591                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 28:     TRISBbits.TRISB5 = 0;
 11592  0960  1292               	bcf	18,5	;volatile
 11593  0961                     l3215:
 11594                           
 11595                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 31:     LATCbits.LATC5 = 1;
 11596  0961  1698               	bsf	24,5	;volatile
 11597  0962                     l3217:
 11598                           
 11599                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 32:     TRISCbits.TRISC5 = 0;
 11600  0962  1293               	bcf	19,5	;volatile
 11601  0963                     l3219:
 11602                           
 11603                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 35:     LATAbits.LATA7 = 0;
 11604  0963  1396               	bcf	22,7	;volatile
 11605  0964                     l3221:
 11606                           
 11607                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 36:     TRISAbits.TRISA7 = 0;
 11608  0964  1391               	bcf	17,7	;volatile
 11609  0965                     l3223:
 11610                           
 11611                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 37:     LATCbits.LATC0 = 0;
 11612  0965  1018               	bcf	24,0	;volatile
 11613  0966                     l3225:
 11614                           
 11615                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 38:     TRISCbits.TRISC0 = 0;
 11616  0966  1013               	bcf	19,0	;volatile
 11617  0967                     l3227:
 11618                           
 11619                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 39:     LATAbits.LATA6 = 0;
 11620  0967  1316               	bcf	22,6	;volatile
 11621  0968                     l3229:
 11622                           
 11623                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 40:     TRISAbits.TRISA6 = 0;
 11624  0968  1311               	bcf	17,6	;volatile
 11625  0969                     l3231:
 11626                           
 11627                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 43:     sys_time = 0;
 11628  0969  3000               	movlw	0
 11629  096A  0022               	movlb	2	; select bank2
 11630  096B  00E8               	movwf	(_sys_time+3)^(0+256)	;volatile
 11631  096C  3000               	movlw	0
 11632  096D  00E7               	movwf	(_sys_time+2)^(0+256)	;volatile
 11633  096E  3000               	movlw	0
 11634  096F  00E6               	movwf	(_sys_time+1)^(0+256)	;volatile
 11635  0970  3000               	movlw	0
 11636  0971  00E5               	movwf	_sys_time^(0+256)	;volatile
 11637  0972                     l3233:
 11638                           
 11639                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 44:     sys_stat = 0;
 11640  0972  01EB               	clrf	_sys_stat^(0+256)	;volatile
 11641  0973                     l3235:
 11642                           
 11643                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 46:     setup_dht11_snsr();
 11644  0973  3195  25C5  3189   	fcall	_setup_dht11_snsr
 11645  0976                     l3237:
 11646                           
 11647                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 47:     setup_irdist_snsr(1);
 11648  0976  3001               	movlw	1
 11649  0977  3195  25EB  3189   	fcall	_setup_irdist_snsr
 11650  097A                     l3239:
 11651                           
 11652                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 65:     tmr4.CON = &T4CON;
 11653  097A  3002               	movlw	2
 11654  097B  0023               	movlb	3	; select bank3
 11655  097C  00A1               	movwf	(_tmr4+1)^(0+384)
 11656  097D  3094               	movlw	148
 11657  097E  00A0               	movwf	_tmr4^(0+384)
 11658  097F                     l3241:
 11659                           
 11660                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 66:     tmr4.CLKCON = &T4CLKC
      +                          ON;
 11661  097F  3002               	movlw	2
 11662  0980  00A3               	movwf	((low ((_tmr4| (0+256)+2))+1))^(0+128)
 11663  0981  3096               	movlw	150
 11664  0982  00A2               	movwf	(low ((_tmr4| (0+256)+2)))^(0+128)
 11665  0983                     l3243:
 11666                           
 11667                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 67:     tmr4.HLT = &T4HLT;
 11668  0983  3002               	movlw	2
 11669  0984  00A5               	movwf	((low ((_tmr4| (0+256)+4))+1))^(0+128)
 11670  0985  3095               	movlw	149
 11671  0986  00A4               	movwf	(low ((_tmr4| (0+256)+4)))^(0+128)
 11672  0987                     l3245:
 11673                           
 11674                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 68:     tmr4.PREG = &T4PR;
 11675  0987  3002               	movlw	2
 11676  0988  00A7               	movwf	((low ((_tmr4| (0+256)+6))+1))^(0+128)
 11677  0989  3093               	movlw	147
 11678  098A  00A6               	movwf	(low ((_tmr4| (0+256)+6)))^(0+128)
 11679  098B                     l3247:
 11680                           
 11681                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 69:     tmr4.intBitPos = 0x08
      +                          ;
 11682  098B  3008               	movlw	8
 11683  098C  0020               	movlb	0	; select bank0
 11684  098D  00CC               	movwf	??_SysInit
 11685  098E  084C               	movf	??_SysInit,w
 11686  098F  0023               	movlb	3	; select bank3
 11687  0990  00A8               	movwf	(_tmr4^(0+384)+8)
 11688  0991                     l3249:
 11689                           
 11690                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 70:     if(TmrSetup(tmr4,1000
      +                          ,1) == STAT_SUCCESS){
 11691  0991  30A0               	movlw	low _tmr4
 11692  0992  0086               	movwf	6
 11693  0993  3001               	movlw	high _tmr4
 11694  0994  0087               	movwf	7
 11695  0995  3033               	movlw	low TmrSetup@Mod
 11696  0996  0084               	movwf	4
 11697  0997  3000               	movlw	high TmrSetup@Mod
 11698  0998  0085               	movwf	5
 11699  0999  300D               	movlw	13
 11700  099A  0020               	movlb	0	; select bank0
 11701  099B  00CC               	movwf	??_SysInit
 11702  099C                     u3480:
 11703  099C  0016               	moviw fsr1++
 11704  099D  001A               	movwi fsr0++
 11705  099E  0BCC               	decfsz	??_SysInit,f
 11706  099F  299C               	goto	u3480
 11707  09A0  30E8               	movlw	232
 11708  09A1  00C0               	movwf	TmrSetup@tmr_freq
 11709  09A2  3003               	movlw	3
 11710  09A3  00C1               	movwf	TmrSetup@tmr_freq+1
 11711  09A4  01C2               	clrf	TmrSetup@use_int
 11712  09A5  0AC2               	incf	TmrSetup@use_int,f
 11713  09A6  318A  2266  3189   	fcall	_TmrSetup
 11714  09A9  3A00               	xorlw	0
 11715  09AA  1D03               	skipz
 11716  09AB  29AD               	goto	u3491
 11717  09AC  29AE               	goto	u3490
 11718  09AD                     u3491:
 11719  09AD  29C2               	goto	l3255
 11720  09AE                     u3490:
 11721  09AE                     l3251:
 11722                           
 11723                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 71:         sys_stat |= 1;
 11724  09AE  0022               	movlb	2	; select bank2
 11725  09AF  146B               	bsf	_sys_stat^(0+256),0	;volatile
 11726  09B0                     l3253:
 11727                           
 11728                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 72:         TmrEnable(tmr4);
 11729  09B0  30A0               	movlw	low _tmr4
 11730  09B1  0086               	movwf	6
 11731  09B2  3001               	movlw	high _tmr4
 11732  09B3  0087               	movwf	7
 11733  09B4  3025               	movlw	low TmrEnable@Mod
 11734  09B5  0084               	movwf	4
 11735  09B6  3000               	movlw	high TmrEnable@Mod
 11736  09B7  0085               	movwf	5
 11737  09B8  300D               	movlw	13
 11738  09B9  0020               	movlb	0	; select bank0
 11739  09BA  00CC               	movwf	??_SysInit
 11740  09BB                     u3500:
 11741  09BB  0016               	moviw fsr1++
 11742  09BC  001A               	movwi fsr0++
 11743  09BD  0BCC               	decfsz	??_SysInit,f
 11744  09BE  29BB               	goto	u3500
 11745  09BF  3187  27F7  3189   	fcall	_TmrEnable
 11746  09C2                     l3255:
 11747                           
 11748                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 83:     if(EUSARTSetup(115200
      +                          ,1,1) == STAT_SUCCESS){
 11749  09C2  3000               	movlw	0
 11750  09C3  0020               	movlb	0	; select bank0
 11751  09C4  00B6               	movwf	EUSARTSetup@set_baud+3
 11752  09C5  3001               	movlw	1
 11753  09C6  00B5               	movwf	EUSARTSetup@set_baud+2
 11754  09C7  30C2               	movlw	194
 11755  09C8  00B4               	movwf	EUSARTSetup@set_baud+1
 11756  09C9  3000               	movlw	0
 11757  09CA  00B3               	movwf	EUSARTSetup@set_baud
 11758  09CB  01B7               	clrf	EUSARTSetup@use_tx
 11759  09CC  0AB7               	incf	EUSARTSetup@use_tx,f
 11760  09CD  01B8               	clrf	EUSARTSetup@use_rx
 11761  09CE  0AB8               	incf	EUSARTSetup@use_rx,f
 11762  09CF  318E  269A  3189   	fcall	_EUSARTSetup
 11763  09D2  3A00               	xorlw	0
 11764  09D3  1D03               	skipz
 11765  09D4  29D6               	goto	u3511
 11766  09D5  29D7               	goto	u3510
 11767  09D6                     u3511:
 11768  09D6  29D9               	goto	l338
 11769  09D7                     u3510:
 11770  09D7                     l3257:
 11771                           
 11772                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 84:         sys_stat |= 16;
 11773  09D7  0022               	movlb	2	; select bank2
 11774  09D8  166B               	bsf	_sys_stat^(0+256),4	;volatile
 11775  09D9                     l338:	
 11776                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 85:     }
 11777                           
 11778                           
 11779                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 87:     PEIE = 1;
 11780  09D9  170B               	bsf	11,6	;volatile
 11781                           
 11782                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 88:     GIE = 1;
 11783  09DA  178B               	bsf	11,7	;volatile
 11784  09DB                     l3259:
 11785                           
 11786                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 90:     return STAT_SUCCESS;
 11787  09DB  3000               	movlw	0
 11788  09DC                     l339:
 11789  09DC  0008               	return
 11790  09DD                     __end_of_SysInit:
 11791                           
 11792                           	psect	text29
 11793  15EB                     __ptext29:	
 11794 ;; *************** function _setup_irdist_snsr *****************
 11795 ;; Defined at:
 11796 ;;		line 3 in file "/home/dev-user/Projects/Personal/PIC/PicTest1.X/ir_dist.c"
 11797 ;; Parameters:    Size  Location     Type
 11798 ;;  use_extint      1    wreg     _Bool 
 11799 ;; Auto vars:     Size  Location     Type
 11800 ;;  use_extint      1    5[BANK0 ] _Bool 
 11801 ;; Return value:  Size  Location     Type
 11802 ;;                  1    wreg      enum E12715
 11803 ;; Registers used:
 11804 ;;		wreg, status,2, status,0
 11805 ;; Tracked objects:
 11806 ;;		On entry : 0/0
 11807 ;;		On exit  : 0/0
 11808 ;;		Unchanged: 0/0
 11809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11811 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11813 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11814 ;;Total ram usage:        1 bytes
 11815 ;; Hardware stack levels used:    1
 11816 ;; Hardware stack levels required when called:    2
 11817 ;; This function calls:
 11818 ;;		Nothing
 11819 ;; This function is called by:
 11820 ;;		_SysInit
 11821 ;; This function uses a non-reentrant model
 11822 ;;
 11823                           
 11824                           
 11825                           ;psect for function _setup_irdist_snsr
 11826  15EB                     _setup_irdist_snsr:
 11827                           
 11828                           ;incstack = 0
 11829                           ; Regs used in _setup_irdist_snsr: [wreg+status,2+status,0]
 11830                           ;setup_irdist_snsr@use_extint stored from wreg
 11831  15EB  0020               	movlb	0	; select bank0
 11832  15EC  00A5               	movwf	setup_irdist_snsr@use_extint
 11833  15ED                     l3073:
 11834                           
 11835                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/ir_dist.c: 3: STATUS_T setup_irdist_sns
      +                          r(_Bool use_extint);/home/dev-user/Projects/Personal/PIC/PicTest1.X/ir_dist.c: 4: {;/hom
      +                          e/dev-user/Projects/Personal/PIC/PicTest1.X/ir_dist.c: 5:     TRISBbits.TRISB0 = 1;
 11836  15ED  1412               	bsf	18,0	;volatile
 11837  15EE                     l3075:
 11838                           
 11839                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/ir_dist.c: 7:     do_irdist_snsr_read =
      +                           0;
 11840  15EE  0022               	movlb	2	; select bank2
 11841  15EF  01ED               	clrf	_do_irdist_snsr_read^(0+256)
 11842  15F0                     l3077:
 11843                           
 11844                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/ir_dist.c: 9:     if(use_extint){
 11845  15F0  0020               	movlb	0	; select bank0
 11846  15F1  0825               	movf	setup_irdist_snsr@use_extint,w
 11847  15F2  1903               	btfsc	3,2
 11848  15F3  2DF5               	goto	u3311
 11849  15F4  2DF6               	goto	u3310
 11850  15F5                     u3311:
 11851  15F5  2DFC               	goto	l165
 11852  15F6                     u3310:
 11853  15F6                     l3079:
 11854                           
 11855                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/ir_dist.c: 10:         INTPPS = 0x08;
 11856  15F6  3008               	movlw	8
 11857  15F7  003D               	movlb	29	; select bank29
 11858  15F8  0090               	movwf	16	;volatile
 11859  15F9                     l3081:
 11860                           
 11861                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/ir_dist.c: 11:         INTCONbits.INTED
      +                          G = 0;
 11862  15F9  100B               	bcf	11,0	;volatile
 11863  15FA                     l3083:
 11864                           
 11865                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/ir_dist.c: 12:         PIE0bits.INTE = 
      +                          1;
 11866  15FA  002E               	movlb	14	; select bank14
 11867  15FB  1416               	bsf	22,0	;volatile
 11868  15FC                     l165:
 11869  15FC  0008               	return
 11870  15FD                     __end_of_setup_irdist_snsr:
 11871                           
 11872                           	psect	text30
 11873  15C5                     __ptext30:	
 11874 ;; *************** function _setup_dht11_snsr *****************
 11875 ;; Defined at:
 11876 ;;		line 3 in file "/home/dev-user/Projects/Personal/PIC/PicTest1.X/dht11.c"
 11877 ;; Parameters:    Size  Location     Type
 11878 ;;		None
 11879 ;; Auto vars:     Size  Location     Type
 11880 ;;		None
 11881 ;; Return value:  Size  Location     Type
 11882 ;;                  1    wreg      enum E2
 11883 ;; Registers used:
 11884 ;;		status,2
 11885 ;; Tracked objects:
 11886 ;;		On entry : 0/0
 11887 ;;		On exit  : 0/0
 11888 ;;		Unchanged: 0/0
 11889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11894 ;;Total ram usage:        0 bytes
 11895 ;; Hardware stack levels used:    1
 11896 ;; Hardware stack levels required when called:    2
 11897 ;; This function calls:
 11898 ;;		Nothing
 11899 ;; This function is called by:
 11900 ;;		_SysInit
 11901 ;; This function uses a non-reentrant model
 11902 ;;
 11903                           
 11904                           
 11905                           ;psect for function _setup_dht11_snsr
 11906  15C5                     _setup_dht11_snsr:
 11907  15C5                     l3067:	
 11908                           ;incstack = 0
 11909                           ; Regs used in _setup_dht11_snsr: [status,2]
 11910                           
 11911                           
 11912                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/dht11.c: 7:     LATDbits.LATD6 = 1;
 11913  15C5  0020               	movlb	0	; select bank0
 11914  15C6  1719               	bsf	25,6	;volatile
 11915                           
 11916                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/dht11.c: 8:     TRISDbits.TRISD6 = 0;
 11917  15C7  1314               	bcf	20,6	;volatile
 11918  15C8                     l3069:
 11919                           
 11920                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/dht11.c: 10:     do_dht11_snsr_read = 0
      +                          ;
 11921  15C8  0022               	movlb	2	; select bank2
 11922  15C9  01EE               	clrf	_do_dht11_snsr_read^(0+256)
 11923                           
 11924                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/dht11.c: 11:     dht11_dat_arr[0] = dht
      +                          11_dat_arr[1] = dht11_dat_arr[2] = dht11_dat_arr[3] = dht11_dat_arr[4] = 0;
 11925  15CA  0023               	movlb	3	; select bank3
 11926  15CB  01B1               	clrf	(_dht11_dat_arr^(0+384)+4)
 11927  15CC  01B0               	clrf	(_dht11_dat_arr^(0+384)+3)
 11928  15CD  01AF               	clrf	(_dht11_dat_arr^(0+384)+2)
 11929  15CE  01AE               	clrf	(_dht11_dat_arr^(0+384)+1)
 11930  15CF  01AD               	clrf	_dht11_dat_arr^(0+384)
 11931  15D0                     l132:
 11932  15D0  0008               	return
 11933  15D1                     __end_of_setup_dht11_snsr:
 11934                           
 11935                           	psect	text31
 11936  0800                     __ptext31:	
 11937 ;; *************** function _make_all_digital *****************
 11938 ;; Defined at:
 11939 ;;		line 93 in file "/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c"
 11940 ;; Parameters:    Size  Location     Type
 11941 ;;		None
 11942 ;; Auto vars:     Size  Location     Type
 11943 ;;		None
 11944 ;; Return value:  Size  Location     Type
 11945 ;;                  1    wreg      enum E12715
 11946 ;; Registers used:
 11947 ;;		status,2
 11948 ;; Tracked objects:
 11949 ;;		On entry : 0/0
 11950 ;;		On exit  : 0/0
 11951 ;;		Unchanged: 0/0
 11952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11957 ;;Total ram usage:        0 bytes
 11958 ;; Hardware stack levels used:    1
 11959 ;; Hardware stack levels required when called:    2
 11960 ;; This function calls:
 11961 ;;		Nothing
 11962 ;; This function is called by:
 11963 ;;		_SysInit
 11964 ;; This function uses a non-reentrant model
 11965 ;;
 11966                           
 11967                           
 11968                           ;psect for function _make_all_digital
 11969  0800                     _make_all_digital:
 11970  0800                     l3087:	
 11971                           ;incstack = 0
 11972                           ; Regs used in _make_all_digital: [status,2]
 11973                           
 11974                           
 11975                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 95:     ANSELA = 0;
 11976  0800  003E               	movlb	30	; select bank30
 11977  0801  01B8               	clrf	56	;volatile
 11978                           
 11979                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 96:     ANSELB = 0;
 11980  0802  01C3               	clrf	67	;volatile
 11981                           
 11982                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 97:     ANSELC = 0;
 11983  0803  01CE               	clrf	78	;volatile
 11984                           
 11985                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 98:     ANSELD = 0;
 11986  0804  01D9               	clrf	89	;volatile
 11987                           
 11988                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 99:     ANSELE = 0;
 11989  0805  01E4               	clrf	100	;volatile
 11990  0806                     l342:
 11991  0806  0008               	return
 11992  0807                     __end_of_make_all_digital:
 11993                           
 11994                           	psect	text32
 11995  0A66                     __ptext32:	
 11996 ;; *************** function _TmrSetup *****************
 11997 ;; Defined at:
 11998 ;;		line 312 in file "/home/dev-user/Projects/Personal/PIC/PicTest1.X/timers.c"
 11999 ;; Parameters:    Size  Location     Type
 12000 ;;  Mod            13   19[BANK0 ] struct TimerEven
 12001 ;;  tmr_freq        2   32[BANK0 ] unsigned short 
 12002 ;;  use_int         1   34[BANK0 ] _Bool 
 12003 ;; Auto vars:     Size  Location     Type
 12004 ;;  regVal          4   40[BANK0 ] unsigned long 
 12005 ;;  prescalarVal    1   39[BANK0 ] unsigned char 
 12006 ;; Return value:  Size  Location     Type
 12007 ;;                  1    wreg      enum E12715
 12008 ;; Registers used:
 12009 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12010 ;; Tracked objects:
 12011 ;;		On entry : 0/0
 12012 ;;		On exit  : 0/0
 12013 ;;		Unchanged: 0/0
 12014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12015 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12016 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12017 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12018 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12019 ;;Total ram usage:       25 bytes
 12020 ;; Hardware stack levels used:    1
 12021 ;; Hardware stack levels required when called:    3
 12022 ;; This function calls:
 12023 ;;		_TmrDisable
 12024 ;;		___lldiv
 12025 ;; This function is called by:
 12026 ;;		_SysInit
 12027 ;; This function uses a non-reentrant model
 12028 ;;
 12029                           
 12030                           
 12031                           ;psect for function _TmrSetup
 12032  0A66                     _TmrSetup:
 12033  0A66                     l2881:	
 12034                           ;incstack = 0
 12035                           ; Regs used in _TmrSetup: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12036                           
 12037                           
 12038                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/timers.c: 312: STATUS_T TmrSetup(TIMERE
      +                          VEN_T Mod, uint16_t tmr_freq, _Bool use_int);/home/dev-user/Projects/Personal/PIC/PicTes
      +                          t1.X/timers.c: 313: {;/home/dev-user/Projects/Personal/PIC/PicTest1.X/timers.c: 314:    
      +                           TmrDisable(Mod);
 12039  0A66  3033               	movlw	low TmrSetup@Mod
 12040  0A67  0086               	movwf	6
 12041  0A68  3000               	movlw	high TmrSetup@Mod
 12042  0A69  0087               	movwf	7
 12043  0A6A  3025               	movlw	low TmrDisable@Mod
 12044  0A6B  0084               	movwf	4
 12045  0A6C  3000               	movlw	high TmrDisable@Mod
 12046  0A6D  0085               	movwf	5
 12047  0A6E  300D               	movlw	13
 12048  0A6F  0020               	movlb	0	; select bank0
 12049  0A70  00C3               	movwf	??_TmrSetup
 12050  0A71                     u3040:
 12051  0A71  0016               	moviw fsr1++
 12052  0A72  001A               	movwi fsr0++
 12053  0A73  0BC3               	decfsz	??_TmrSetup,f
 12054  0A74  2A71               	goto	u3040
 12055  0A75  3195  25AF  318A   	fcall	_TmrDisable
 12056  0A78                     l2883:
 12057                           
 12058                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/timers.c: 316:     *Mod.CLKCON = 0x01;
 12059  0A78  0020               	movlb	0	; select bank0
 12060  0A79  0835               	movf	low ((TmrSetup@Mod| 0+2)),w
 12061  0A7A  0086               	movwf	6
 12062  0A7B  0836               	movf	(low ((TmrSetup@Mod| 0+2))+1),w
 12063  0A7C  0087               	movwf	7
 12064  0A7D  3001               	movlw	1
 12065  0A7E  0081               	movwf	1
 12066  0A7F                     l2885:
 12067                           
 12068                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/timers.c: 317:     *Mod.HLT = 0x00;
 12069  0A7F  0837               	movf	low ((TmrSetup@Mod| 0+4)),w
 12070  0A80  0086               	movwf	6
 12071  0A81  0838               	movf	(low ((TmrSetup@Mod| 0+4))+1),w
 12072  0A82  0087               	movwf	7
 12073  0A83  0181               	clrf	1
 12074  0A84                     l2887:
 12075                           
 12076                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/timers.c: 319:     Mod.setFreq = tmr_fr
      +                          eq;
 12077  0A84  0841               	movf	TmrSetup@tmr_freq+1,w
 12078  0A85  00BD               	movwf	TmrSetup@Mod+10
 12079  0A86  0840               	movf	TmrSetup@tmr_freq,w
 12080  0A87  00BC               	movwf	TmrSetup@Mod+9
 12081  0A88                     l2889:
 12082                           
 12083                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/timers.c: 320:     Mod.intEnabled = use
      +                          _int;
 12084  0A88  0842               	movf	TmrSetup@use_int,w
 12085  0A89  00C3               	movwf	??_TmrSetup
 12086  0A8A  0843               	movf	??_TmrSetup,w
 12087  0A8B  00BF               	movwf	TmrSetup@Mod+12
 12088  0A8C                     l2891:
 12089                           
 12090                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/timers.c: 323:     uint8_t prescalarVal
      +                           = 0;
 12091  0A8C  01C7               	clrf	TmrSetup@prescalarVal
 12092  0A8D                     l2893:
 12093                           
 12094                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/timers.c: 324:     uint32_t regVal = 32
      +                          000000/4;
 12095  0A8D  3000               	movlw	0
 12096  0A8E  00CB               	movwf	TmrSetup@regVal+3
 12097  0A8F  307A               	movlw	122
 12098  0A90  00CA               	movwf	TmrSetup@regVal+2
 12099  0A91  3012               	movlw	18
 12100  0A92  00C9               	movwf	TmrSetup@regVal+1
 12101  0A93  3000               	movlw	0
 12102  0A94  00C8               	movwf	TmrSetup@regVal
 12103  0A95                     l2895:
 12104                           
 12105                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/timers.c: 325:     regVal = regVal / tm
      +                          r_freq;
 12106  0A95  0840               	movf	TmrSetup@tmr_freq,w
 12107  0A96  00A5               	movwf	___lldiv@divisor
 12108  0A97  0841               	movf	TmrSetup@tmr_freq+1,w
 12109  0A98  00A6               	movwf	___lldiv@divisor+1
 12110  0A99  01A7               	clrf	___lldiv@divisor+2
 12111  0A9A  01A8               	clrf	___lldiv@divisor+3
 12112  0A9B  084B               	movf	TmrSetup@regVal+3,w
 12113  0A9C  00AC               	movwf	___lldiv@dividend+3
 12114  0A9D  084A               	movf	TmrSetup@regVal+2,w
 12115  0A9E  00AB               	movwf	___lldiv@dividend+2
 12116  0A9F  0849               	movf	TmrSetup@regVal+1,w
 12117  0AA0  00AA               	movwf	___lldiv@dividend+1
 12118  0AA1  0848               	movf	TmrSetup@regVal,w
 12119  0AA2  00A9               	movwf	___lldiv@dividend
 12120  0AA3  3188  20FC  318A   	fcall	___lldiv
 12121  0AA6  0020               	movlb	0	; select bank0
 12122  0AA7  0828               	movf	?___lldiv+3,w
 12123  0AA8  00CB               	movwf	TmrSetup@regVal+3
 12124  0AA9  0827               	movf	?___lldiv+2,w
 12125  0AAA  00CA               	movwf	TmrSetup@regVal+2
 12126  0AAB  0826               	movf	?___lldiv+1,w
 12127  0AAC  00C9               	movwf	TmrSetup@regVal+1
 12128  0AAD  0825               	movf	?___lldiv,w
 12129  0AAE  00C8               	movwf	TmrSetup@regVal
 12130                           
 12131                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/timers.c: 326:     while(regVal > 255){
 12132  0AAF  2AD4               	goto	l2905
 12133  0AB0                     l2897:
 12134                           
 12135                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/timers.c: 327:         regVal = regVal 
      +                          >> 1;
 12136  0AB0  0020               	movlb	0	; select bank0
 12137  0AB1  0848               	movf	TmrSetup@regVal,w
 12138  0AB2  00C3               	movwf	??_TmrSetup
 12139  0AB3  0849               	movf	TmrSetup@regVal+1,w
 12140  0AB4  00C4               	movwf	??_TmrSetup+1
 12141  0AB5  084A               	movf	TmrSetup@regVal+2,w
 12142  0AB6  00C5               	movwf	??_TmrSetup+2
 12143  0AB7  084B               	movf	TmrSetup@regVal+3,w
 12144  0AB8  00C6               	movwf	??_TmrSetup+3
 12145  0AB9  3001               	movlw	1
 12146  0ABA                     u3055:
 12147  0ABA  36C6               	lsrf	??_TmrSetup+3,f
 12148  0ABB  0CC5               	rrf	??_TmrSetup+2,f
 12149  0ABC  0CC4               	rrf	??_TmrSetup+1,f
 12150  0ABD  0CC3               	rrf	??_TmrSetup,f
 12151  0ABE                     u3050:
 12152  0ABE  0B89               	decfsz	9,f
 12153  0ABF  2ABA               	goto	u3055
 12154  0AC0  0846               	movf	??_TmrSetup+3,w
 12155  0AC1  00CB               	movwf	TmrSetup@regVal+3
 12156  0AC2  0845               	movf	??_TmrSetup+2,w
 12157  0AC3  00CA               	movwf	TmrSetup@regVal+2
 12158  0AC4  0844               	movf	??_TmrSetup+1,w
 12159  0AC5  00C9               	movwf	TmrSetup@regVal+1
 12160  0AC6  0843               	movf	??_TmrSetup,w
 12161  0AC7  00C8               	movwf	TmrSetup@regVal
 12162                           
 12163                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/timers.c: 328:         prescalarVal++;
 12164  0AC8  3001               	movlw	1
 12165  0AC9  00C3               	movwf	??_TmrSetup
 12166  0ACA  0843               	movf	??_TmrSetup,w
 12167  0ACB  07C7               	addwf	TmrSetup@prescalarVal,f
 12168  0ACC                     l2899:
 12169                           
 12170                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/timers.c: 329:         if(prescalarVal 
      +                          > 7){
 12171  0ACC  3008               	movlw	8
 12172  0ACD  0247               	subwf	TmrSetup@prescalarVal,w
 12173  0ACE  1C03               	skipc
 12174  0ACF  2AD1               	goto	u3061
 12175  0AD0  2AD2               	goto	u3060
 12176  0AD1                     u3061:
 12177  0AD1  2AD4               	goto	l2905
 12178  0AD2                     u3060:
 12179  0AD2                     l2901:
 12180                           
 12181                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/timers.c: 330:             return STAT_
      +                          FAIL;
 12182  0AD2  30FE               	movlw	254
 12183  0AD3  2B11               	goto	l12
 12184  0AD4                     l2905:
 12185                           
 12186                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/timers.c: 326:     while(regVal > 255){
 12187  0AD4  084B               	movf	TmrSetup@regVal+3,w
 12188  0AD5  1D03               	btfss	3,2
 12189  0AD6  2ADF               	goto	u3071
 12190  0AD7  084A               	movf	TmrSetup@regVal+2,w
 12191  0AD8  1D03               	btfss	3,2
 12192  0AD9  2ADF               	goto	u3071
 12193  0ADA  3001               	movlw	1
 12194  0ADB  0249               	subwf	TmrSetup@regVal+1,w
 12195  0ADC  1803               	btfsc	3,0
 12196  0ADD  2ADF               	goto	u3071
 12197  0ADE  2AE0               	goto	u3070
 12198  0ADF                     u3071:
 12199  0ADF  2AB0               	goto	l2897
 12200  0AE0                     u3070:
 12201  0AE0                     l2907:
 12202                           
 12203                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/timers.c: 333:     *Mod.PREG = regVal-1
      +                          ;
 12204  0AE0  0020               	movlb	0	; select bank0
 12205  0AE1  0848               	movf	TmrSetup@regVal,w
 12206  0AE2  3EFF               	addlw	255
 12207  0AE3  00C3               	movwf	??_TmrSetup
 12208  0AE4  0839               	movf	low ((TmrSetup@Mod| 0+6)),w
 12209  0AE5  0086               	movwf	6
 12210  0AE6  083A               	movf	(low ((TmrSetup@Mod| 0+6))+1),w
 12211  0AE7  0087               	movwf	7
 12212  0AE8  0843               	movf	??_TmrSetup,w
 12213  0AE9  0081               	movwf	1
 12214  0AEA                     l2909:
 12215                           
 12216                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/timers.c: 334:     prescalarVal = presc
      +                          alarVal << 4;
 12217  0AEA  0847               	movf	TmrSetup@prescalarVal,w
 12218  0AEB  00C3               	movwf	??_TmrSetup
 12219  0AEC  3003               	movlw	3
 12220  0AED                     u3085:
 12221  0AED  35C3               	lslf	??_TmrSetup,f
 12222  0AEE  3EFF               	addlw	-1
 12223  0AEF  1D03               	skipz
 12224  0AF0  2AED               	goto	u3085
 12225  0AF1  3543               	lslf	??_TmrSetup,w
 12226  0AF2  00C4               	movwf	??_TmrSetup+1
 12227  0AF3  0844               	movf	??_TmrSetup+1,w
 12228  0AF4  00C7               	movwf	TmrSetup@prescalarVal
 12229  0AF5                     l2911:
 12230                           
 12231                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/timers.c: 335:     *Mod.CON |= prescala
      +                          rVal;
 12232  0AF5  0847               	movf	TmrSetup@prescalarVal,w
 12233  0AF6  00C3               	movwf	??_TmrSetup
 12234  0AF7  0833               	movf	TmrSetup@Mod,w
 12235  0AF8  0086               	movwf	6
 12236  0AF9  0834               	movf	TmrSetup@Mod+1,w
 12237  0AFA  0087               	movwf	7
 12238  0AFB  0843               	movf	??_TmrSetup,w
 12239  0AFC  0481               	iorwf	1,f
 12240                           
 12241                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/timers.c: 337:     if(use_int){
 12242  0AFD  0842               	movf	TmrSetup@use_int,w
 12243  0AFE  1903               	btfsc	3,2
 12244  0AFF  2B01               	goto	u3091
 12245  0B00  2B02               	goto	u3090
 12246  0B01                     u3091:
 12247  0B01  2B10               	goto	l2917
 12248  0B02                     u3090:
 12249  0B02                     l2913:
 12250                           
 12251                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/timers.c: 338:         PIR4 &= ~Mod.int
      +                          BitPos;
 12252  0B02  093B               	comf	TmrSetup@Mod+8,w
 12253  0B03  00C3               	movwf	??_TmrSetup
 12254  0B04  0843               	movf	??_TmrSetup,w
 12255  0B05  002E               	movlb	14	; select bank14
 12256  0B06  0590               	andwf	16,f	;volatile
 12257                           
 12258                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/timers.c: 339:         PIE4 |= Mod.intB
      +                          itPos;
 12259  0B07  0020               	movlb	0	; select bank0
 12260  0B08  083B               	movf	TmrSetup@Mod+8,w
 12261  0B09  00C3               	movwf	??_TmrSetup
 12262  0B0A  0843               	movf	??_TmrSetup,w
 12263  0B0B  002E               	movlb	14	; select bank14
 12264  0B0C  049A               	iorwf	26,f	;volatile
 12265  0B0D                     l2915:
 12266                           
 12267                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/timers.c: 340:         Mod.intEnabled =
      +                           1;
 12268  0B0D  0020               	movlb	0	; select bank0
 12269  0B0E  01BF               	clrf	TmrSetup@Mod+12
 12270  0B0F  0ABF               	incf	TmrSetup@Mod+12,f
 12271  0B10                     l2917:
 12272                           
 12273                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/timers.c: 343:     return STAT_SUCCESS;
 12274  0B10  3000               	movlw	0
 12275  0B11                     l12:
 12276  0B11  0008               	return
 12277  0B12                     __end_of_TmrSetup:
 12278                           
 12279                           	psect	text33
 12280  15AF                     __ptext33:	
 12281 ;; *************** function _TmrDisable *****************
 12282 ;; Defined at:
 12283 ;;		line 352 in file "/home/dev-user/Projects/Personal/PIC/PicTest1.X/timers.c"
 12284 ;; Parameters:    Size  Location     Type
 12285 ;;  Mod            13    5[BANK0 ] struct TimerEven
 12286 ;; Auto vars:     Size  Location     Type
 12287 ;;		None
 12288 ;; Return value:  Size  Location     Type
 12289 ;;                  1    wreg      void 
 12290 ;; Registers used:
 12291 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12292 ;; Tracked objects:
 12293 ;;		On entry : 0/0
 12294 ;;		On exit  : 0/0
 12295 ;;		Unchanged: 0/0
 12296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12297 ;;      Params:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12299 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12300 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12301 ;;Total ram usage:       14 bytes
 12302 ;; Hardware stack levels used:    1
 12303 ;; Hardware stack levels required when called:    2
 12304 ;; This function calls:
 12305 ;;		Nothing
 12306 ;; This function is called by:
 12307 ;;		_TmrSetup
 12308 ;; This function uses a non-reentrant model
 12309 ;;
 12310                           
 12311                           
 12312                           ;psect for function _TmrDisable
 12313  15AF                     _TmrDisable:
 12314  15AF                     l2743:	
 12315                           ;incstack = 0
 12316                           ; Regs used in _TmrDisable: [wreg+fsr1l+fsr1h+status,2+status,0]
 12317                           
 12318                           
 12319                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/timers.c: 352: void TmrDisable(TIMEREVE
      +                          N_T Mod);/home/dev-user/Projects/Personal/PIC/PicTest1.X/timers.c: 353: {;/home/dev-user
      +                          /Projects/Personal/PIC/PicTest1.X/timers.c: 354:     *Mod.CON &= 0x7F;
 12320  15AF  307F               	movlw	127
 12321  15B0  0020               	movlb	0	; select bank0
 12322  15B1  00B2               	movwf	??_TmrDisable
 12323  15B2  0825               	movf	TmrDisable@Mod,w
 12324  15B3  0086               	movwf	6
 12325  15B4  0826               	movf	TmrDisable@Mod+1,w
 12326  15B5  0087               	movwf	7
 12327  15B6  0832               	movf	??_TmrDisable,w
 12328  15B7  0581               	andwf	1,f
 12329  15B8                     l2745:
 12330                           
 12331                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/timers.c: 355:     Mod.isEnabled = 0;
 12332  15B8  01B0               	clrf	TmrDisable@Mod+11
 12333  15B9                     l20:
 12334  15B9  0008               	return
 12335  15BA                     __end_of_TmrDisable:
 12336                           
 12337                           	psect	text34
 12338  07F7                     __ptext34:	
 12339 ;; *************** function _TmrEnable *****************
 12340 ;; Defined at:
 12341 ;;		line 346 in file "/home/dev-user/Projects/Personal/PIC/PicTest1.X/timers.c"
 12342 ;; Parameters:    Size  Location     Type
 12343 ;;  Mod            13    5[BANK0 ] struct TimerEven
 12344 ;; Auto vars:     Size  Location     Type
 12345 ;;		None
 12346 ;; Return value:  Size  Location     Type
 12347 ;;                  1    wreg      void 
 12348 ;; Registers used:
 12349 ;;		wreg, fsr1l, fsr1h
 12350 ;; Tracked objects:
 12351 ;;		On entry : 0/0
 12352 ;;		On exit  : 0/0
 12353 ;;		Unchanged: 0/0
 12354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12355 ;;      Params:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12358 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12359 ;;Total ram usage:       13 bytes
 12360 ;; Hardware stack levels used:    1
 12361 ;; Hardware stack levels required when called:    2
 12362 ;; This function calls:
 12363 ;;		Nothing
 12364 ;; This function is called by:
 12365 ;;		_SysInit
 12366 ;; This function uses a non-reentrant model
 12367 ;;
 12368                           
 12369                           
 12370                           ;psect for function _TmrEnable
 12371  07F7                     _TmrEnable:
 12372  07F7                     l2921:	
 12373                           ;incstack = 0
 12374                           ; Regs used in _TmrEnable: [wregfsr1]
 12375                           
 12376                           
 12377                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/timers.c: 346: void TmrEnable(TIMEREVEN
      +                          _T Mod);/home/dev-user/Projects/Personal/PIC/PicTest1.X/timers.c: 347: {;/home/dev-user/
      +                          Projects/Personal/PIC/PicTest1.X/timers.c: 348:     *Mod.CON |= 0x80;
 12378  07F7  0020               	movlb	0	; select bank0
 12379  07F8  0825               	movf	TmrEnable@Mod,w
 12380  07F9  0086               	movwf	6
 12381  07FA  0826               	movf	TmrEnable@Mod+1,w
 12382  07FB  0087               	movwf	7
 12383  07FC  1781               	bsf	1,7
 12384  07FD                     l2923:
 12385                           
 12386                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/timers.c: 349:     Mod.isEnabled = 1;
 12387  07FD  01B0               	clrf	TmrEnable@Mod+11
 12388  07FE  0AB0               	incf	TmrEnable@Mod+11,f
 12389  07FF                     l17:
 12390  07FF  0008               	return
 12391  0800                     __end_of_TmrEnable:
 12392                           
 12393                           	psect	text35
 12394  0E9A                     __ptext35:	
 12395 ;; *************** function _EUSARTSetup *****************
 12396 ;; Defined at:
 12397 ;;		line 3 in file "/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c"
 12398 ;; Parameters:    Size  Location     Type
 12399 ;;  set_baud        4   19[BANK0 ] unsigned long 
 12400 ;;  use_tx          1   23[BANK0 ] _Bool 
 12401 ;;  use_rx          1   24[BANK0 ] _Bool 
 12402 ;; Auto vars:     Size  Location     Type
 12403 ;;  i               1   31[BANK0 ] unsigned char 
 12404 ;;  i               2   29[BANK0 ] unsigned short 
 12405 ;;  regVal          4   32[BANK0 ] unsigned long 
 12406 ;; Return value:  Size  Location     Type
 12407 ;;                  1    wreg      enum E12715
 12408 ;; Registers used:
 12409 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12410 ;; Tracked objects:
 12411 ;;		On entry : 0/0
 12412 ;;		On exit  : 0/0
 12413 ;;		Unchanged: 0/0
 12414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12415 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12416 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12417 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12418 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12419 ;;Total ram usage:       17 bytes
 12420 ;; Hardware stack levels used:    1
 12421 ;; Hardware stack levels required when called:    3
 12422 ;; This function calls:
 12423 ;;		___lldiv
 12424 ;; This function is called by:
 12425 ;;		_SysInit
 12426 ;; This function uses a non-reentrant model
 12427 ;;
 12428                           
 12429                           
 12430                           ;psect for function _EUSARTSetup
 12431  0E9A                     _EUSARTSetup:
 12432  0E9A                     l2925:	
 12433                           ;incstack = 0
 12434                           ; Regs used in _EUSARTSetup: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12435                           
 12436                           
 12437                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 3: STATUS_T EUSARTSetup(uint3
      +                          2_t set_baud, _Bool use_tx, _Bool use_rx);/home/dev-user/Projects/Personal/PIC/PicTest1.
      +                          X/eusart.c: 4: {;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 6:     RXPPS 
      +                          = 0x17;
 12438  0E9A  3017               	movlw	23
 12439  0E9B  003D               	movlb	29	; select bank29
 12440  0E9C  00CB               	movwf	75	;volatile
 12441  0E9D                     l2927:
 12442                           
 12443                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 7:     TRISCbits.TRISC7 = 1;
 12444  0E9D  0020               	movlb	0	; select bank0
 12445  0E9E  1793               	bsf	19,7	;volatile
 12446                           
 12447                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 9:     RC6PPS = 0x10;
 12448  0E9F  3010               	movlw	16
 12449  0EA0  003E               	movlb	30	; select bank30
 12450  0EA1  00A6               	movwf	38	;volatile
 12451  0EA2                     l2929:
 12452                           
 12453                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 10:     TRISCbits.TRISC6 = 1;
 12454  0EA2  0020               	movlb	0	; select bank0
 12455  0EA3  1713               	bsf	19,6	;volatile
 12456  0EA4                     l2931:
 12457                           
 12458                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 13:     RC1STAbits.SPEN = 0;
 12459  0EA4  0022               	movlb	2	; select bank2
 12460  0EA5  139D               	bcf	29,7	;volatile
 12461  0EA6                     l2933:
 12462                           
 12463                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 14:     RC1STAbits.CREN = 0;
 12464  0EA6  121D               	bcf	29,4	;volatile
 12465  0EA7                     l2935:
 12466                           
 12467                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 15:     TX1STAbits.TXEN = 0;
 12468  0EA7  129E               	bcf	30,5	;volatile
 12469                           
 12470                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 30:     uint32_t regVal = 320
      +                          00000/4;
 12471  0EA8  3000               	movlw	0
 12472  0EA9  0020               	movlb	0	; select bank0
 12473  0EAA  00C3               	movwf	EUSARTSetup@regVal+3
 12474  0EAB  307A               	movlw	122
 12475  0EAC  00C2               	movwf	EUSARTSetup@regVal+2
 12476  0EAD  3012               	movlw	18
 12477  0EAE  00C1               	movwf	EUSARTSetup@regVal+1
 12478  0EAF  3000               	movlw	0
 12479  0EB0  00C0               	movwf	EUSARTSetup@regVal
 12480  0EB1                     l2937:
 12481                           
 12482                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 31:     regVal = regVal / set
      +                          _baud;
 12483  0EB1  0836               	movf	EUSARTSetup@set_baud+3,w
 12484  0EB2  00A8               	movwf	___lldiv@divisor+3
 12485  0EB3  0835               	movf	EUSARTSetup@set_baud+2,w
 12486  0EB4  00A7               	movwf	___lldiv@divisor+2
 12487  0EB5  0834               	movf	EUSARTSetup@set_baud+1,w
 12488  0EB6  00A6               	movwf	___lldiv@divisor+1
 12489  0EB7  0833               	movf	EUSARTSetup@set_baud,w
 12490  0EB8  00A5               	movwf	___lldiv@divisor
 12491  0EB9  0843               	movf	EUSARTSetup@regVal+3,w
 12492  0EBA  00AC               	movwf	___lldiv@dividend+3
 12493  0EBB  0842               	movf	EUSARTSetup@regVal+2,w
 12494  0EBC  00AB               	movwf	___lldiv@dividend+2
 12495  0EBD  0841               	movf	EUSARTSetup@regVal+1,w
 12496  0EBE  00AA               	movwf	___lldiv@dividend+1
 12497  0EBF  0840               	movf	EUSARTSetup@regVal,w
 12498  0EC0  00A9               	movwf	___lldiv@dividend
 12499  0EC1  3188  20FC  318E   	fcall	___lldiv
 12500  0EC4  0020               	movlb	0	; select bank0
 12501  0EC5  0828               	movf	?___lldiv+3,w
 12502  0EC6  00C3               	movwf	EUSARTSetup@regVal+3
 12503  0EC7  0827               	movf	?___lldiv+2,w
 12504  0EC8  00C2               	movwf	EUSARTSetup@regVal+2
 12505  0EC9  0826               	movf	?___lldiv+1,w
 12506  0ECA  00C1               	movwf	EUSARTSetup@regVal+1
 12507  0ECB  0825               	movf	?___lldiv,w
 12508  0ECC  00C0               	movwf	EUSARTSetup@regVal
 12509  0ECD                     l2939:
 12510                           
 12511                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 32:     regVal = regVal - 1;
 12512  0ECD  30FF               	movlw	255
 12513  0ECE  00B9               	movwf	??_EUSARTSetup
 12514  0ECF  30FF               	movlw	255
 12515  0ED0  00BA               	movwf	??_EUSARTSetup+1
 12516  0ED1  30FF               	movlw	255
 12517  0ED2  00BB               	movwf	??_EUSARTSetup+2
 12518  0ED3  30FF               	movlw	255
 12519  0ED4  00BC               	movwf	??_EUSARTSetup+3
 12520  0ED5  0840               	movf	EUSARTSetup@regVal,w
 12521  0ED6  07B9               	addwf	??_EUSARTSetup,f
 12522  0ED7  0841               	movf	EUSARTSetup@regVal+1,w
 12523  0ED8  3DBA               	addwfc	??_EUSARTSetup+1,f
 12524  0ED9  0842               	movf	EUSARTSetup@regVal+2,w
 12525  0EDA  3DBB               	addwfc	??_EUSARTSetup+2,f
 12526  0EDB  0843               	movf	EUSARTSetup@regVal+3,w
 12527  0EDC  3DBC               	addwfc	??_EUSARTSetup+3,f
 12528  0EDD  083C               	movf	??_EUSARTSetup+3,w
 12529  0EDE  00C3               	movwf	EUSARTSetup@regVal+3
 12530  0EDF  083B               	movf	??_EUSARTSetup+2,w
 12531  0EE0  00C2               	movwf	EUSARTSetup@regVal+2
 12532  0EE1  083A               	movf	??_EUSARTSetup+1,w
 12533  0EE2  00C1               	movwf	EUSARTSetup@regVal+1
 12534  0EE3  0839               	movf	??_EUSARTSetup,w
 12535  0EE4  00C0               	movwf	EUSARTSetup@regVal
 12536  0EE5                     l2941:
 12537                           
 12538                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 33:     if(regVal <= 0xFFFF){
 12539  0EE5  0843               	movf	EUSARTSetup@regVal+3,w
 12540  0EE6  1D03               	btfss	3,2
 12541  0EE7  2EED               	goto	u3101
 12542  0EE8  3001               	movlw	1
 12543  0EE9  0242               	subwf	EUSARTSetup@regVal+2,w
 12544  0EEA  1803               	btfsc	3,0
 12545  0EEB  2EED               	goto	u3101
 12546  0EEC  2EEE               	goto	u3100
 12547  0EED                     u3101:
 12548  0EED  2EF2               	goto	l2945
 12549  0EEE                     u3100:
 12550  0EEE                     l2943:
 12551                           
 12552                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 34:         TX1STAbits.BRGH =
      +                           1;
 12553  0EEE  0022               	movlb	2	; select bank2
 12554  0EEF  151E               	bsf	30,2	;volatile
 12555                           
 12556                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 35:         BAUD1CONbits.BRG1
      +                          6 = 1;
 12557  0EF0  159F               	bsf	31,3	;volatile
 12558                           
 12559                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 36:     } else {
 12560  0EF1  2F80               	goto	l2963
 12561  0EF2                     l2945:
 12562                           
 12563                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 38:         regVal = (regVal+
      +                          1)/4;
 12564  0EF2  3001               	movlw	1
 12565  0EF3  0020               	movlb	0	; select bank0
 12566  0EF4  00B9               	movwf	??_EUSARTSetup
 12567  0EF5  3000               	movlw	0
 12568  0EF6  00BA               	movwf	??_EUSARTSetup+1
 12569  0EF7  3000               	movlw	0
 12570  0EF8  00BB               	movwf	??_EUSARTSetup+2
 12571  0EF9  3000               	movlw	0
 12572  0EFA  00BC               	movwf	??_EUSARTSetup+3
 12573  0EFB  0840               	movf	EUSARTSetup@regVal,w
 12574  0EFC  07B9               	addwf	??_EUSARTSetup,f
 12575  0EFD  0841               	movf	EUSARTSetup@regVal+1,w
 12576  0EFE  3DBA               	addwfc	??_EUSARTSetup+1,f
 12577  0EFF  0842               	movf	EUSARTSetup@regVal+2,w
 12578  0F00  3DBB               	addwfc	??_EUSARTSetup+2,f
 12579  0F01  0843               	movf	EUSARTSetup@regVal+3,w
 12580  0F02  3DBC               	addwfc	??_EUSARTSetup+3,f
 12581  0F03  3002               	movlw	2
 12582  0F04                     u3115:
 12583  0F04  36BC               	lsrf	??_EUSARTSetup+3,f
 12584  0F05  0CBB               	rrf	??_EUSARTSetup+2,f
 12585  0F06  0CBA               	rrf	??_EUSARTSetup+1,f
 12586  0F07  0CB9               	rrf	??_EUSARTSetup,f
 12587  0F08                     u3110:
 12588  0F08  0B89               	decfsz	9,f
 12589  0F09  2F04               	goto	u3115
 12590  0F0A  083C               	movf	??_EUSARTSetup+3,w
 12591  0F0B  00C3               	movwf	EUSARTSetup@regVal+3
 12592  0F0C  083B               	movf	??_EUSARTSetup+2,w
 12593  0F0D  00C2               	movwf	EUSARTSetup@regVal+2
 12594  0F0E  083A               	movf	??_EUSARTSetup+1,w
 12595  0F0F  00C1               	movwf	EUSARTSetup@regVal+1
 12596  0F10  0839               	movf	??_EUSARTSetup,w
 12597  0F11  00C0               	movwf	EUSARTSetup@regVal
 12598  0F12                     l2947:
 12599                           
 12600                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 39:         regVal = regVal -
      +                           1;
 12601  0F12  30FF               	movlw	255
 12602  0F13  00B9               	movwf	??_EUSARTSetup
 12603  0F14  30FF               	movlw	255
 12604  0F15  00BA               	movwf	??_EUSARTSetup+1
 12605  0F16  30FF               	movlw	255
 12606  0F17  00BB               	movwf	??_EUSARTSetup+2
 12607  0F18  30FF               	movlw	255
 12608  0F19  00BC               	movwf	??_EUSARTSetup+3
 12609  0F1A  0840               	movf	EUSARTSetup@regVal,w
 12610  0F1B  07B9               	addwf	??_EUSARTSetup,f
 12611  0F1C  0841               	movf	EUSARTSetup@regVal+1,w
 12612  0F1D  3DBA               	addwfc	??_EUSARTSetup+1,f
 12613  0F1E  0842               	movf	EUSARTSetup@regVal+2,w
 12614  0F1F  3DBB               	addwfc	??_EUSARTSetup+2,f
 12615  0F20  0843               	movf	EUSARTSetup@regVal+3,w
 12616  0F21  3DBC               	addwfc	??_EUSARTSetup+3,f
 12617  0F22  083C               	movf	??_EUSARTSetup+3,w
 12618  0F23  00C3               	movwf	EUSARTSetup@regVal+3
 12619  0F24  083B               	movf	??_EUSARTSetup+2,w
 12620  0F25  00C2               	movwf	EUSARTSetup@regVal+2
 12621  0F26  083A               	movf	??_EUSARTSetup+1,w
 12622  0F27  00C1               	movwf	EUSARTSetup@regVal+1
 12623  0F28  0839               	movf	??_EUSARTSetup,w
 12624  0F29  00C0               	movwf	EUSARTSetup@regVal
 12625  0F2A                     l2949:
 12626                           
 12627                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 40:         if(regVal <= 0xFF
      +                          FF){
 12628  0F2A  0843               	movf	EUSARTSetup@regVal+3,w
 12629  0F2B  1D03               	btfss	3,2
 12630  0F2C  2F32               	goto	u3121
 12631  0F2D  3001               	movlw	1
 12632  0F2E  0242               	subwf	EUSARTSetup@regVal+2,w
 12633  0F2F  1803               	btfsc	3,0
 12634  0F30  2F32               	goto	u3121
 12635  0F31  2F33               	goto	u3120
 12636  0F32                     u3121:
 12637  0F32  2F37               	goto	l2953
 12638  0F33                     u3120:
 12639  0F33                     l2951:
 12640                           
 12641                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 41:             TX1STAbits.BR
      +                          GH = 0;
 12642  0F33  0022               	movlb	2	; select bank2
 12643  0F34  111E               	bcf	30,2	;volatile
 12644                           
 12645                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 42:             BAUD1CONbits.
      +                          BRG16 = 1;
 12646  0F35  159F               	bsf	31,3	;volatile
 12647                           
 12648                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 43:         } else {
 12649  0F36  2F80               	goto	l2963
 12650  0F37                     l2953:
 12651                           
 12652                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 45:             regVal = (reg
      +                          Val+1)/4;
 12653  0F37  3001               	movlw	1
 12654  0F38  0020               	movlb	0	; select bank0
 12655  0F39  00B9               	movwf	??_EUSARTSetup
 12656  0F3A  3000               	movlw	0
 12657  0F3B  00BA               	movwf	??_EUSARTSetup+1
 12658  0F3C  3000               	movlw	0
 12659  0F3D  00BB               	movwf	??_EUSARTSetup+2
 12660  0F3E  3000               	movlw	0
 12661  0F3F  00BC               	movwf	??_EUSARTSetup+3
 12662  0F40  0840               	movf	EUSARTSetup@regVal,w
 12663  0F41  07B9               	addwf	??_EUSARTSetup,f
 12664  0F42  0841               	movf	EUSARTSetup@regVal+1,w
 12665  0F43  3DBA               	addwfc	??_EUSARTSetup+1,f
 12666  0F44  0842               	movf	EUSARTSetup@regVal+2,w
 12667  0F45  3DBB               	addwfc	??_EUSARTSetup+2,f
 12668  0F46  0843               	movf	EUSARTSetup@regVal+3,w
 12669  0F47  3DBC               	addwfc	??_EUSARTSetup+3,f
 12670  0F48  3002               	movlw	2
 12671  0F49                     u3135:
 12672  0F49  36BC               	lsrf	??_EUSARTSetup+3,f
 12673  0F4A  0CBB               	rrf	??_EUSARTSetup+2,f
 12674  0F4B  0CBA               	rrf	??_EUSARTSetup+1,f
 12675  0F4C  0CB9               	rrf	??_EUSARTSetup,f
 12676  0F4D                     u3130:
 12677  0F4D  0B89               	decfsz	9,f
 12678  0F4E  2F49               	goto	u3135
 12679  0F4F  083C               	movf	??_EUSARTSetup+3,w
 12680  0F50  00C3               	movwf	EUSARTSetup@regVal+3
 12681  0F51  083B               	movf	??_EUSARTSetup+2,w
 12682  0F52  00C2               	movwf	EUSARTSetup@regVal+2
 12683  0F53  083A               	movf	??_EUSARTSetup+1,w
 12684  0F54  00C1               	movwf	EUSARTSetup@regVal+1
 12685  0F55  0839               	movf	??_EUSARTSetup,w
 12686  0F56  00C0               	movwf	EUSARTSetup@regVal
 12687  0F57                     l2955:
 12688                           
 12689                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 46:             regVal = regV
      +                          al - 1;
 12690  0F57  30FF               	movlw	255
 12691  0F58  00B9               	movwf	??_EUSARTSetup
 12692  0F59  30FF               	movlw	255
 12693  0F5A  00BA               	movwf	??_EUSARTSetup+1
 12694  0F5B  30FF               	movlw	255
 12695  0F5C  00BB               	movwf	??_EUSARTSetup+2
 12696  0F5D  30FF               	movlw	255
 12697  0F5E  00BC               	movwf	??_EUSARTSetup+3
 12698  0F5F  0840               	movf	EUSARTSetup@regVal,w
 12699  0F60  07B9               	addwf	??_EUSARTSetup,f
 12700  0F61  0841               	movf	EUSARTSetup@regVal+1,w
 12701  0F62  3DBA               	addwfc	??_EUSARTSetup+1,f
 12702  0F63  0842               	movf	EUSARTSetup@regVal+2,w
 12703  0F64  3DBB               	addwfc	??_EUSARTSetup+2,f
 12704  0F65  0843               	movf	EUSARTSetup@regVal+3,w
 12705  0F66  3DBC               	addwfc	??_EUSARTSetup+3,f
 12706  0F67  083C               	movf	??_EUSARTSetup+3,w
 12707  0F68  00C3               	movwf	EUSARTSetup@regVal+3
 12708  0F69  083B               	movf	??_EUSARTSetup+2,w
 12709  0F6A  00C2               	movwf	EUSARTSetup@regVal+2
 12710  0F6B  083A               	movf	??_EUSARTSetup+1,w
 12711  0F6C  00C1               	movwf	EUSARTSetup@regVal+1
 12712  0F6D  0839               	movf	??_EUSARTSetup,w
 12713  0F6E  00C0               	movwf	EUSARTSetup@regVal
 12714  0F6F                     l2957:
 12715                           
 12716                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 47:             if(regVal > 2
      +                          55){
 12717  0F6F  0843               	movf	EUSARTSetup@regVal+3,w
 12718  0F70  1D03               	btfss	3,2
 12719  0F71  2F7B               	goto	u3140
 12720  0F72  0842               	movf	EUSARTSetup@regVal+2,w
 12721  0F73  1D03               	btfss	3,2
 12722  0F74  2F7B               	goto	u3140
 12723  0F75  3001               	movlw	1
 12724  0F76  0241               	subwf	EUSARTSetup@regVal+1,w
 12725  0F77  1C03               	btfss	3,0
 12726  0F78  2F7A               	goto	u3141
 12727  0F79  2F7B               	goto	u3140
 12728  0F7A                     u3141:
 12729  0F7A  2F7D               	goto	l81
 12730  0F7B                     u3140:
 12731  0F7B                     l2959:
 12732                           
 12733                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 48:                 return ST
      +                          AT_FAIL;
 12734  0F7B  30FE               	movlw	254
 12735  0F7C  2FFF               	goto	l82
 12736  0F7D                     l81:	
 12737                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 49:             }
 12738                           
 12739                           
 12740                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 50:             TX1STAbits.BR
      +                          GH = 0;
 12741  0F7D  0022               	movlb	2	; select bank2
 12742  0F7E  111E               	bcf	30,2	;volatile
 12743                           
 12744                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 51:             BAUD1CONbits.
      +                          BRG16 = 0;
 12745  0F7F  119F               	bcf	31,3	;volatile
 12746  0F80                     l2963:
 12747                           
 12748                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 54:     SP1BRGH = (uint8_t)(0
      +                          xFF & (regVal>>8));
 12749  0F80  0020               	movlb	0	; select bank0
 12750  0F81  0840               	movf	EUSARTSetup@regVal,w
 12751  0F82  00B9               	movwf	??_EUSARTSetup
 12752  0F83  0841               	movf	EUSARTSetup@regVal+1,w
 12753  0F84  00BA               	movwf	??_EUSARTSetup+1
 12754  0F85  0842               	movf	EUSARTSetup@regVal+2,w
 12755  0F86  00BB               	movwf	??_EUSARTSetup+2
 12756  0F87  0843               	movf	EUSARTSetup@regVal+3,w
 12757  0F88  00BC               	movwf	??_EUSARTSetup+3
 12758  0F89  3008               	movlw	8
 12759  0F8A                     u3155:
 12760  0F8A  36BC               	lsrf	??_EUSARTSetup+3,f
 12761  0F8B  0CBB               	rrf	??_EUSARTSetup+2,f
 12762  0F8C  0CBA               	rrf	??_EUSARTSetup+1,f
 12763  0F8D  0CB9               	rrf	??_EUSARTSetup,f
 12764  0F8E                     u3150:
 12765  0F8E  0B89               	decfsz	9,f
 12766  0F8F  2F8A               	goto	u3155
 12767  0F90  0839               	movf	??_EUSARTSetup,w
 12768  0F91  0022               	movlb	2	; select bank2
 12769  0F92  009C               	movwf	28	;volatile
 12770  0F93                     l2965:
 12771                           
 12772                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 55:     SP1BRGL = (uint8_t)(0
      +                          xFF & regVal);
 12773  0F93  0020               	movlb	0	; select bank0
 12774  0F94  0840               	movf	EUSARTSetup@regVal,w
 12775  0F95  0022               	movlb	2	; select bank2
 12776  0F96  009B               	movwf	27	;volatile
 12777  0F97                     l2967:
 12778                           
 12779                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 57:     BAUD1CONbits.WUE = 0;
 12780  0F97  109F               	bcf	31,1	;volatile
 12781  0F98                     l2969:
 12782                           
 12783                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 58:     BAUD1CONbits.ABDEN = 
      +                          0;
 12784  0F98  101F               	bcf	31,0	;volatile
 12785  0F99                     l2971:
 12786                           
 12787                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 59:     TX1STAbits.SYNC = 0;
 12788  0F99  121E               	bcf	30,4	;volatile
 12789  0F9A                     l2973:
 12790                           
 12791                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 61:     if(use_tx){
 12792  0F9A  0020               	movlb	0	; select bank0
 12793  0F9B  0837               	movf	EUSARTSetup@use_tx,w
 12794  0F9C  1903               	btfsc	3,2
 12795  0F9D  2F9F               	goto	u3161
 12796  0F9E  2FA0               	goto	u3160
 12797  0F9F                     u3161:
 12798  0F9F  2FC4               	goto	l2989
 12799  0FA0                     u3160:
 12800  0FA0                     l2975:
 12801                           
 12802                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 63:         TX1STAbits.TX9 = 
      +                          0;
 12803  0FA0  0022               	movlb	2	; select bank2
 12804  0FA1  131E               	bcf	30,6	;volatile
 12805                           
 12806                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 64:         BAUD1CONbits.SCKP
      +                           = 0;
 12807  0FA2  121F               	bcf	31,4	;volatile
 12808  0FA3                     l2977:
 12809                           
 12810                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 65:         eusart_tx_buff_ta
      +                          il = 0;
 12811  0FA3  0020               	movlb	0	; select bank0
 12812  0FA4  01EA               	clrf	_eusart_tx_buff_tail
 12813                           
 12814                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 66:         eusart_tx_buff_he
      +                          ad = 0;
 12815  0FA5  01E9               	clrf	_eusart_tx_buff_head
 12816                           
 12817                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 67:         eusart_tx_buff_fu
      +                          ll = 0;
 12818  0FA6  01FD               	clrf	_eusart_tx_buff_full
 12819                           
 12820                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 68:         for(uint16_t i = 
      +                          0; i < 256; i++){
 12821  0FA7  01BD               	clrf	EUSARTSetup@i
 12822  0FA8  01BE               	clrf	EUSARTSetup@i+1
 12823  0FA9                     l2983:
 12824                           
 12825                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 69:             eusart_tx_buf
      +                          f[i] = 0;
 12826  0FA9  30F0               	movlw	240
 12827  0FAA  00B9               	movwf	??_EUSARTSetup
 12828  0FAB  3022               	movlw	34
 12829  0FAC  00BA               	movwf	??_EUSARTSetup+1
 12830  0FAD  083D               	movf	EUSARTSetup@i,w
 12831  0FAE  0739               	addwf	??_EUSARTSetup,w
 12832  0FAF  0086               	movwf	6
 12833  0FB0  083E               	movf	EUSARTSetup@i+1,w
 12834  0FB1  3D3A               	addwfc	??_EUSARTSetup+1,w
 12835  0FB2  0087               	movwf	7
 12836  0FB3  0181               	clrf	1
 12837  0FB4                     l2985:
 12838                           
 12839                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 70:         }
 12840  0FB4  3001               	movlw	1
 12841  0FB5  07BD               	addwf	EUSARTSetup@i,f
 12842  0FB6  3000               	movlw	0
 12843  0FB7  3DBE               	addwfc	EUSARTSetup@i+1,f
 12844  0FB8                     l2987:
 12845  0FB8  3001               	movlw	1
 12846  0FB9  023E               	subwf	EUSARTSetup@i+1,w
 12847  0FBA  3000               	movlw	0
 12848  0FBB  1903               	skipnz
 12849  0FBC  023D               	subwf	EUSARTSetup@i,w
 12850  0FBD  1C03               	skipc
 12851  0FBE  2FC0               	goto	u3171
 12852  0FBF  2FC1               	goto	u3170
 12853  0FC0                     u3171:
 12854  0FC0  2FA9               	goto	l2983
 12855  0FC1                     u3170:
 12856  0FC1                     l85:
 12857                           
 12858                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 71:         eusart_tx_sys_act
      +                          ive = 1;
 12859  0FC1  01FC               	clrf	_eusart_tx_sys_active
 12860  0FC2  0AFC               	incf	_eusart_tx_sys_active,f
 12861                           
 12862                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 72:     } else {
 12863  0FC3  2FC5               	goto	l2991
 12864  0FC4                     l2989:
 12865                           
 12866                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 73:         eusart_tx_sys_act
      +                          ive = 0;
 12867  0FC4  01FC               	clrf	_eusart_tx_sys_active
 12868  0FC5                     l2991:
 12869                           
 12870                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 76:     if(use_rx){
 12871  0FC5  0838               	movf	EUSARTSetup@use_rx,w
 12872  0FC6  1903               	btfsc	3,2
 12873  0FC7  2FC9               	goto	u3181
 12874  0FC8  2FCA               	goto	u3180
 12875  0FC9                     u3181:
 12876  0FC9  2FED               	goto	l3015
 12877  0FCA                     u3180:
 12878  0FCA                     l2993:
 12879                           
 12880                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 78:         RC1STAbits.CREN =
      +                           1;
 12881  0FCA  0022               	movlb	2	; select bank2
 12882  0FCB  161D               	bsf	29,4	;volatile
 12883  0FCC                     l2995:
 12884                           
 12885                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 79:         for(uint8_t i = 0
      +                          ; i < 64; i++){
 12886  0FCC  0020               	movlb	0	; select bank0
 12887  0FCD  01BF               	clrf	EUSARTSetup@i_239
 12888  0FCE                     l3001:
 12889                           
 12890                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 80:             eusart_rx_buf
      +                          f_isr[i] = 0;
 12891  0FCE  083F               	movf	EUSARTSetup@i_239,w
 12892  0FCF  3E20               	addlw	(low (_eusart_rx_buff_isr| (0+512)))& (0+255)
 12893  0FD0  0086               	movwf	6
 12894  0FD1  3002               	movlw	2	; select bank4/5
 12895  0FD2  0087               	movwf	7
 12896  0FD3  0181               	clrf	1
 12897                           
 12898                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 81:             eusart_rx_buf
      +                          f_use[i] = 0;
 12899  0FD4  083F               	movf	EUSARTSetup@i_239,w
 12900  0FD5  3EA0               	addlw	(low (_eusart_rx_buff_use| (0+512)))& (0+255)
 12901  0FD6  0086               	movwf	6
 12902  0FD7  3002               	movlw	2	; select bank5/6
 12903  0FD8  0087               	movwf	7
 12904  0FD9  0181               	clrf	1
 12905  0FDA                     l3003:
 12906                           
 12907                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 82:         }
 12908  0FDA  3001               	movlw	1
 12909  0FDB  00B9               	movwf	??_EUSARTSetup
 12910  0FDC  0839               	movf	??_EUSARTSetup,w
 12911  0FDD  07BF               	addwf	EUSARTSetup@i_239,f
 12912  0FDE                     l3005:
 12913  0FDE  3040               	movlw	64
 12914  0FDF  023F               	subwf	EUSARTSetup@i_239,w
 12915  0FE0  1C03               	skipc
 12916  0FE1  2FE3               	goto	u3191
 12917  0FE2  2FE4               	goto	u3190
 12918  0FE3                     u3191:
 12919  0FE3  2FCE               	goto	l3001
 12920  0FE4                     u3190:
 12921  0FE4                     l3007:
 12922                           
 12923                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 83:         eusart_rx_buff_id
      +                          x = 0;
 12924  0FE4  01E8               	clrf	_eusart_rx_buff_idx
 12925                           
 12926                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 84:         eusart_rx_msg_pre
      +                          sent = 0;
 12927  0FE5  0021               	movlb	1	; select bank1
 12928  0FE6  01EF               	clrf	_eusart_rx_msg_present^(0+128)
 12929  0FE7                     l3009:
 12930                           
 12931                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 85:         eusart_rx_sys_act
      +                          ive = 1;
 12932  0FE7  01EE               	clrf	_eusart_rx_sys_active^(0+128)
 12933  0FE8  0AEE               	incf	_eusart_rx_sys_active^(0+128),f
 12934  0FE9                     l3011:
 12935                           
 12936                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 86:         RCIF = 0;
 12937  0FE9  002E               	movlb	14	; select bank14
 12938  0FEA  128F               	bcf	15,5	;volatile
 12939  0FEB                     l3013:
 12940                           
 12941                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 87:         RCIE = 1;
 12942  0FEB  1699               	bsf	25,5	;volatile
 12943                           
 12944                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 88:     } else {
 12945  0FEC  2FF1               	goto	l3017
 12946  0FED                     l3015:
 12947                           
 12948                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 89:         RC1STA = 0b000000
      +                          00;
 12949  0FED  0022               	movlb	2	; select bank2
 12950  0FEE  019D               	clrf	29	;volatile
 12951                           
 12952                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 90:         eusart_rx_sys_act
      +                          ive = 0;
 12953  0FEF  0021               	movlb	1	; select bank1
 12954  0FF0  01EE               	clrf	_eusart_rx_sys_active^(0+128)
 12955  0FF1                     l3017:
 12956                           
 12957                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 93:     if(use_tx || use_rx)
 12958  0FF1  0020               	movlb	0	; select bank0
 12959  0FF2  0837               	movf	EUSARTSetup@use_tx,w
 12960  0FF3  1D03               	btfss	3,2
 12961  0FF4  2FF6               	goto	u3201
 12962  0FF5  2FF7               	goto	u3200
 12963  0FF6                     u3201:
 12964  0FF6  2FFC               	goto	l93
 12965  0FF7                     u3200:
 12966  0FF7                     l3019:
 12967  0FF7  0838               	movf	EUSARTSetup@use_rx,w
 12968  0FF8  1903               	btfsc	3,2
 12969  0FF9  2FFB               	goto	u3211
 12970  0FFA  2FFC               	goto	u3210
 12971  0FFB                     u3211:
 12972  0FFB  2FFE               	goto	l3021
 12973  0FFC                     u3210:
 12974  0FFC                     l93:
 12975                           
 12976                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 94:         RC1STAbits.SPEN =
      +                           1;
 12977  0FFC  0022               	movlb	2	; select bank2
 12978  0FFD  179D               	bsf	29,7	;volatile
 12979  0FFE                     l3021:
 12980                           
 12981                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/eusart.c: 96:     return STAT_SUCCESS;
 12982  0FFE  3000               	movlw	0
 12983  0FFF                     l82:
 12984  0FFF  0008               	return
 12985  1000                     __end_of_EUSARTSetup:
 12986                           
 12987                           	psect	text36
 12988  08FC                     __ptext36:	
 12989 ;; *************** function ___lldiv *****************
 12990 ;; Defined at:
 12991 ;;		line 5 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/__lldiv.c"
 12992 ;; Parameters:    Size  Location     Type
 12993 ;;  divisor         4    5[BANK0 ] unsigned long 
 12994 ;;  dividend        4    9[BANK0 ] unsigned long 
 12995 ;; Auto vars:     Size  Location     Type
 12996 ;;  quotient        4   14[BANK0 ] unsigned long 
 12997 ;;  counter         1   18[BANK0 ] unsigned char 
 12998 ;; Return value:  Size  Location     Type
 12999 ;;                  4    5[BANK0 ] unsigned long 
 13000 ;; Registers used:
 13001 ;;		wreg, status,2, status,0
 13002 ;; Tracked objects:
 13003 ;;		On entry : 0/0
 13004 ;;		On exit  : 0/0
 13005 ;;		Unchanged: 0/0
 13006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13007 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13008 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13009 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13010 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13011 ;;Total ram usage:       14 bytes
 13012 ;; Hardware stack levels used:    1
 13013 ;; Hardware stack levels required when called:    2
 13014 ;; This function calls:
 13015 ;;		Nothing
 13016 ;; This function is called by:
 13017 ;;		_TmrSetup
 13018 ;;		_EUSARTSetup
 13019 ;;		_main
 13020 ;; This function uses a non-reentrant model
 13021 ;;
 13022                           
 13023                           
 13024                           ;psect for function ___lldiv
 13025  08FC                     ___lldiv:
 13026  08FC                     l2751:	
 13027                           ;incstack = 0
 13028                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 13029                           
 13030  08FC  3000               	movlw	0
 13031  08FD  0020               	movlb	0	; select bank0
 13032  08FE  00B1               	movwf	___lldiv@quotient+3
 13033  08FF  3000               	movlw	0
 13034  0900  00B0               	movwf	___lldiv@quotient+2
 13035  0901  3000               	movlw	0
 13036  0902  00AF               	movwf	___lldiv@quotient+1
 13037  0903  3000               	movlw	0
 13038  0904  00AE               	movwf	___lldiv@quotient
 13039  0905  0828               	movf	___lldiv@divisor+3,w
 13040  0906  0427               	iorwf	___lldiv@divisor+2,w
 13041  0907  0426               	iorwf	___lldiv@divisor+1,w
 13042  0908  0425               	iorwf	___lldiv@divisor,w
 13043  0909  1903               	skipnz
 13044  090A  290C               	goto	u2841
 13045  090B  290D               	goto	u2840
 13046  090C                     u2841:
 13047  090C  294E               	goto	l2771
 13048  090D                     u2840:
 13049  090D                     l2753:
 13050  090D  01B2               	clrf	___lldiv@counter
 13051  090E  0AB2               	incf	___lldiv@counter,f
 13052  090F  291B               	goto	l2757
 13053  0910                     l2755:
 13054  0910  3001               	movlw	1
 13055  0911                     u2855:
 13056  0911  35A5               	lslf	___lldiv@divisor,f
 13057  0912  0DA6               	rlf	___lldiv@divisor+1,f
 13058  0913  0DA7               	rlf	___lldiv@divisor+2,f
 13059  0914  0DA8               	rlf	___lldiv@divisor+3,f
 13060  0915  0B89               	decfsz	9,f
 13061  0916  2911               	goto	u2855
 13062  0917  3001               	movlw	1
 13063  0918  00AD               	movwf	??___lldiv
 13064  0919  082D               	movf	??___lldiv,w
 13065  091A  07B2               	addwf	___lldiv@counter,f
 13066  091B                     l2757:
 13067  091B  1FA8               	btfss	___lldiv@divisor+3,7
 13068  091C  291E               	goto	u2861
 13069  091D  291F               	goto	u2860
 13070  091E                     u2861:
 13071  091E  2910               	goto	l2755
 13072  091F                     u2860:
 13073  091F                     l2759:
 13074  091F  3001               	movlw	1
 13075  0920                     u2875:
 13076  0920  35AE               	lslf	___lldiv@quotient,f
 13077  0921  0DAF               	rlf	___lldiv@quotient+1,f
 13078  0922  0DB0               	rlf	___lldiv@quotient+2,f
 13079  0923  0DB1               	rlf	___lldiv@quotient+3,f
 13080  0924  0B89               	decfsz	9,f
 13081  0925  2920               	goto	u2875
 13082  0926                     l2761:
 13083  0926  0828               	movf	___lldiv@divisor+3,w
 13084  0927  022C               	subwf	___lldiv@dividend+3,w
 13085  0928  1D03               	skipz
 13086  0929  2934               	goto	u2885
 13087  092A  0827               	movf	___lldiv@divisor+2,w
 13088  092B  022B               	subwf	___lldiv@dividend+2,w
 13089  092C  1D03               	skipz
 13090  092D  2934               	goto	u2885
 13091  092E  0826               	movf	___lldiv@divisor+1,w
 13092  092F  022A               	subwf	___lldiv@dividend+1,w
 13093  0930  1D03               	skipz
 13094  0931  2934               	goto	u2885
 13095  0932  0825               	movf	___lldiv@divisor,w
 13096  0933  0229               	subwf	___lldiv@dividend,w
 13097  0934                     u2885:
 13098  0934  1C03               	skipc
 13099  0935  2937               	goto	u2881
 13100  0936  2938               	goto	u2880
 13101  0937                     u2881:
 13102  0937  2941               	goto	l2767
 13103  0938                     u2880:
 13104  0938                     l2763:
 13105  0938  0825               	movf	___lldiv@divisor,w
 13106  0939  02A9               	subwf	___lldiv@dividend,f
 13107  093A  0826               	movf	___lldiv@divisor+1,w
 13108  093B  3BAA               	subwfb	___lldiv@dividend+1,f
 13109  093C  0827               	movf	___lldiv@divisor+2,w
 13110  093D  3BAB               	subwfb	___lldiv@dividend+2,f
 13111  093E  0828               	movf	___lldiv@divisor+3,w
 13112  093F  3BAC               	subwfb	___lldiv@dividend+3,f
 13113  0940                     l2765:
 13114  0940  142E               	bsf	___lldiv@quotient,0
 13115  0941                     l2767:
 13116  0941  3001               	movlw	1
 13117  0942                     u2895:
 13118  0942  36A8               	lsrf	___lldiv@divisor+3,f
 13119  0943  0CA7               	rrf	___lldiv@divisor+2,f
 13120  0944  0CA6               	rrf	___lldiv@divisor+1,f
 13121  0945  0CA5               	rrf	___lldiv@divisor,f
 13122  0946  0B89               	decfsz	9,f
 13123  0947  2942               	goto	u2895
 13124  0948                     l2769:
 13125  0948  3001               	movlw	1
 13126  0949  02B2               	subwf	___lldiv@counter,f
 13127  094A  1D03               	btfss	3,2
 13128  094B  294D               	goto	u2901
 13129  094C  294E               	goto	u2900
 13130  094D                     u2901:
 13131  094D  291F               	goto	l2759
 13132  094E                     u2900:
 13133  094E                     l2771:
 13134  094E  0831               	movf	___lldiv@quotient+3,w
 13135  094F  00A8               	movwf	?___lldiv+3
 13136  0950  0830               	movf	___lldiv@quotient+2,w
 13137  0951  00A7               	movwf	?___lldiv+2
 13138  0952  082F               	movf	___lldiv@quotient+1,w
 13139  0953  00A6               	movwf	?___lldiv+1
 13140  0954  082E               	movf	___lldiv@quotient,w
 13141  0955  00A5               	movwf	?___lldiv
 13142  0956                     l620:
 13143  0956  0008               	return
 13144  0957                     __end_of___lldiv:
 13145                           
 13146                           	psect	text37
 13147  15DD                     __ptext37:	
 13148 ;; *************** function _SetupClk *****************
 13149 ;; Defined at:
 13150 ;;		line 4 in file "/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c"
 13151 ;; Parameters:    Size  Location     Type
 13152 ;;		None
 13153 ;; Auto vars:     Size  Location     Type
 13154 ;;		None
 13155 ;; Return value:  Size  Location     Type
 13156 ;;                  1    wreg      void 
 13157 ;; Registers used:
 13158 ;;		wreg
 13159 ;; Tracked objects:
 13160 ;;		On entry : 0/0
 13161 ;;		On exit  : 0/0
 13162 ;;		Unchanged: 0/0
 13163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13168 ;;Total ram usage:        0 bytes
 13169 ;; Hardware stack levels used:    1
 13170 ;; Hardware stack levels required when called:    2
 13171 ;; This function calls:
 13172 ;;		Nothing
 13173 ;; This function is called by:
 13174 ;;		_main
 13175 ;; This function uses a non-reentrant model
 13176 ;;
 13177                           
 13178                           
 13179                           ;psect for function _SetupClk
 13180  15DD                     _SetupClk:
 13181  15DD                     l3197:	
 13182                           ;incstack = 0
 13183                           ; Regs used in _SetupClk: [wreg]
 13184                           
 13185                           
 13186                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 6:     OSCCON1 = 0x60;
 13187  15DD  3060               	movlw	96
 13188  15DE  0031               	movlb	17	; select bank17
 13189  15DF  008D               	movwf	13	;volatile
 13190                           
 13191                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 7:     OSCFRQ = 0x06;
 13192  15E0  3006               	movlw	6
 13193  15E1  0093               	movwf	19	;volatile
 13194  15E2                     l329:	
 13195                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/System.c: 9:     while(! OSCSTATbits.HF
      +                          OR && !OSCSTATbits.PLLR) continue;
 13196                           
 13197  15E2  1B10               	btfsc	16,6	;volatile
 13198  15E3  2DE5               	goto	u3461
 13199  15E4  2DE6               	goto	u3460
 13200  15E5                     u3461:
 13201  15E5  2DEA               	goto	l334
 13202  15E6                     u3460:
 13203  15E6                     l3199:
 13204  15E6  1C10               	btfss	16,0	;volatile
 13205  15E7  2DE9               	goto	u3471
 13206  15E8  2DEA               	goto	u3470
 13207  15E9                     u3471:
 13208  15E9  2DE2               	goto	l329
 13209  15EA                     u3470:
 13210  15EA                     l334:
 13211  15EA  0008               	return
 13212  15EB                     __end_of_SetupClk:
 13213                           
 13214                           	psect	intentry
 13215  0004                     __pintentry:	
 13216 ;; *************** function _Isr *****************
 13217 ;; Defined at:
 13218 ;;		line 12 in file "/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c"
 13219 ;; Parameters:    Size  Location     Type
 13220 ;;		None
 13221 ;; Auto vars:     Size  Location     Type
 13222 ;;  i               1    3[BANK0 ] unsigned char 
 13223 ;;  i               1    4[BANK0 ] unsigned char 
 13224 ;;  rx_val          1    2[BANK0 ] unsigned char 
 13225 ;;  rx_or_error     1    1[BANK0 ] _Bool 
 13226 ;;  rx_frm_error    1    0[BANK0 ] _Bool 
 13227 ;; Return value:  Size  Location     Type
 13228 ;;                  1    wreg      void 
 13229 ;; Registers used:
 13230 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13231 ;; Tracked objects:
 13232 ;;		On entry : 0/0
 13233 ;;		On exit  : 0/0
 13234 ;;		Unchanged: 0/0
 13235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13237 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13238 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13239 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13240 ;;Total ram usage:        6 bytes
 13241 ;; Hardware stack levels used:    1
 13242 ;; Hardware stack levels required when called:    1
 13243 ;; This function calls:
 13244 ;;		___llmod
 13245 ;; This function is called by:
 13246 ;;		Interrupt level 1
 13247 ;; This function uses a non-reentrant model
 13248 ;;
 13249                           
 13250  0004                     _Isr:
 13251                           
 13252                           ;incstack = 0
 13253  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 13254                           
 13255                           ; Regs used in _Isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13256  0005  3180               	pagesel	$
 13257  0006                     i1l3337:
 13258                           
 13259                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 13:     if(PIR4 && tmr4.i
      +                          ntBitPos){
 13260  0006  002E               	movlb	14	; select bank14
 13261  0007  0810               	movf	16,w	;volatile
 13262  0008  1903               	btfsc	3,2
 13263  0009  280B               	goto	u365_21
 13264  000A  280C               	goto	u365_20
 13265  000B                     u365_21:
 13266  000B  28DF               	goto	i1l405
 13267  000C                     u365_20:
 13268  000C                     i1l3339:
 13269  000C  0023               	movlb	3	; select bank3
 13270  000D  0828               	movf	(_tmr4^(0+384)+8),w
 13271  000E  1903               	btfsc	3,2
 13272  000F  2811               	goto	u366_21
 13273  0010  2812               	goto	u366_20
 13274  0011                     u366_21:
 13275  0011  28DF               	goto	i1l405
 13276  0012                     u366_20:
 13277  0012                     i1l3341:
 13278                           
 13279                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 14:         PIR4 &= ~tmr4
      +                          .intBitPos;
 13280  0012  0928               	comf	(_tmr4^(0+384)+8),w
 13281  0013  00FA               	movwf	??_Isr
 13282  0014  087A               	movf	??_Isr,w
 13283  0015  002E               	movlb	14	; select bank14
 13284  0016  0590               	andwf	16,f	;volatile
 13285  0017                     i1l3343:
 13286                           
 13287                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 17:         sys_time++;
 13288  0017  3001               	movlw	1
 13289  0018  0022               	movlb	2	; select bank2
 13290  0019  07E5               	addwf	_sys_time^(0+256),f	;volatile
 13291  001A  3000               	movlw	0
 13292  001B  3DE6               	addwfc	(_sys_time+1)^(0+256),f	;volatile
 13293  001C  3000               	movlw	0
 13294  001D  3DE7               	addwfc	(_sys_time+2)^(0+256),f	;volatile
 13295  001E  3000               	movlw	0
 13296  001F  3DE8               	addwfc	(_sys_time+3)^(0+256),f	;volatile
 13297  0020                     i1l3345:
 13298                           
 13299                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 19:         LATDbits.LATD
      +                          1 ^= 1;
 13300  0020  0020               	movlb	0	; select bank0
 13301  0021  0C19               	rrf	25,w	;volatile
 13302  0022  3901               	andlw	1
 13303  0023  00FA               	movwf	??_Isr
 13304  0024  3001               	movlw	1
 13305  0025  06FA               	xorwf	??_Isr,f
 13306  0026  0DFA               	rlf	??_Isr,f
 13307  0027  0819               	movf	25,w	;volatile
 13308  0028  067A               	xorwf	??_Isr,w
 13309  0029  39FD               	andlw	-3
 13310  002A  067A               	xorwf	??_Isr,w
 13311  002B  0099               	movwf	25	;volatile
 13312  002C                     i1l3347:
 13313                           
 13314                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 21:         if(sys_time%5
      +                          0 == 0){
 13315  002C  3000               	movlw	0
 13316  002D  00F3               	movwf	___llmod@divisor+3
 13317  002E  3000               	movlw	0
 13318  002F  00F2               	movwf	___llmod@divisor+2
 13319  0030  3000               	movlw	0
 13320  0031  00F1               	movwf	___llmod@divisor+1
 13321  0032  3032               	movlw	50
 13322  0033  00F0               	movwf	___llmod@divisor
 13323  0034  0022               	movlb	2	; select bank2
 13324  0035  0868               	movf	(_sys_time+3)^(0+256),w	;volatile
 13325  0036  00F7               	movwf	___llmod@dividend+3
 13326  0037  0867               	movf	(_sys_time+2)^(0+256),w	;volatile
 13327  0038  00F6               	movwf	___llmod@dividend+2
 13328  0039  0866               	movf	(_sys_time+1)^(0+256),w	;volatile
 13329  003A  00F5               	movwf	___llmod@dividend+1
 13330  003B  0865               	movf	_sys_time^(0+256),w	;volatile
 13331  003C  00F4               	movwf	___llmod@dividend
 13332  003D  3188  2007  3180   	fcall	___llmod
 13333  0040                     i1l3349:
 13334                           
 13335                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 25:         if(sys_time%3
      +                          33 == 0){
 13336  0040  3000               	movlw	0
 13337  0041  00F3               	movwf	___llmod@divisor+3
 13338  0042  3000               	movlw	0
 13339  0043  00F2               	movwf	___llmod@divisor+2
 13340  0044  3001               	movlw	1
 13341  0045  00F1               	movwf	___llmod@divisor+1
 13342  0046  304D               	movlw	77
 13343  0047  00F0               	movwf	___llmod@divisor
 13344  0048  0022               	movlb	2	; select bank2
 13345  0049  0868               	movf	(_sys_time+3)^(0+256),w	;volatile
 13346  004A  00F7               	movwf	___llmod@dividend+3
 13347  004B  0867               	movf	(_sys_time+2)^(0+256),w	;volatile
 13348  004C  00F6               	movwf	___llmod@dividend+2
 13349  004D  0866               	movf	(_sys_time+1)^(0+256),w	;volatile
 13350  004E  00F5               	movwf	___llmod@dividend+1
 13351  004F  0865               	movf	_sys_time^(0+256),w	;volatile
 13352  0050  00F4               	movwf	___llmod@dividend
 13353  0051  3188  2007  3180   	fcall	___llmod
 13354  0054  0873               	movf	?___llmod+3,w
 13355  0055  0472               	iorwf	?___llmod+2,w
 13356  0056  0471               	iorwf	?___llmod+1,w
 13357  0057  0470               	iorwf	?___llmod,w
 13358  0058  1D03               	skipz
 13359  0059  285B               	goto	u367_21
 13360  005A  285C               	goto	u367_20
 13361  005B                     u367_21:
 13362  005B  28C0               	goto	i1l3361
 13363  005C                     u367_20:
 13364  005C                     i1l3351:
 13365                           
 13366                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 26:             if(sys_ti
      +                          me%666 == 0){
 13367  005C  3000               	movlw	0
 13368  005D  00F3               	movwf	___llmod@divisor+3
 13369  005E  3000               	movlw	0
 13370  005F  00F2               	movwf	___llmod@divisor+2
 13371  0060  3002               	movlw	2
 13372  0061  00F1               	movwf	___llmod@divisor+1
 13373  0062  309A               	movlw	154
 13374  0063  00F0               	movwf	___llmod@divisor
 13375  0064  0022               	movlb	2	; select bank2
 13376  0065  0868               	movf	(_sys_time+3)^(0+256),w	;volatile
 13377  0066  00F7               	movwf	___llmod@dividend+3
 13378  0067  0867               	movf	(_sys_time+2)^(0+256),w	;volatile
 13379  0068  00F6               	movwf	___llmod@dividend+2
 13380  0069  0866               	movf	(_sys_time+1)^(0+256),w	;volatile
 13381  006A  00F5               	movwf	___llmod@dividend+1
 13382  006B  0865               	movf	_sys_time^(0+256),w	;volatile
 13383  006C  00F4               	movwf	___llmod@dividend
 13384  006D  3188  2007  3180   	fcall	___llmod
 13385  0070  0873               	movf	?___llmod+3,w
 13386  0071  0472               	iorwf	?___llmod+2,w
 13387  0072  0471               	iorwf	?___llmod+1,w
 13388  0073  0470               	iorwf	?___llmod,w
 13389  0074  1D03               	skipz
 13390  0075  2877               	goto	u368_21
 13391  0076  2878               	goto	u368_20
 13392  0077                     u368_21:
 13393  0077  2884               	goto	i1l3355
 13394  0078                     u368_20:
 13395  0078                     i1l3353:
 13396                           
 13397                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 27:                 LATCb
      +                          its.LATC0 ^= 1;
 13398  0078  0020               	movlb	0	; select bank0
 13399  0079  0818               	movf	24,w	;volatile
 13400  007A  3901               	andlw	1
 13401  007B  00FA               	movwf	??_Isr
 13402  007C  3001               	movlw	1
 13403  007D  06FA               	xorwf	??_Isr,f
 13404  007E  0818               	movf	24,w	;volatile
 13405  007F  067A               	xorwf	??_Isr,w
 13406  0080  39FE               	andlw	-2
 13407  0081  067A               	xorwf	??_Isr,w
 13408  0082  0098               	movwf	24	;volatile
 13409                           
 13410                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 28:             } else if
      +                          (sys_time%999 == 0){
 13411  0083  28C0               	goto	i1l3361
 13412  0084                     i1l3355:
 13413  0084  3000               	movlw	0
 13414  0085  00F3               	movwf	___llmod@divisor+3
 13415  0086  3000               	movlw	0
 13416  0087  00F2               	movwf	___llmod@divisor+2
 13417  0088  3003               	movlw	3
 13418  0089  00F1               	movwf	___llmod@divisor+1
 13419  008A  30E7               	movlw	231
 13420  008B  00F0               	movwf	___llmod@divisor
 13421  008C  0022               	movlb	2	; select bank2
 13422  008D  0868               	movf	(_sys_time+3)^(0+256),w	;volatile
 13423  008E  00F7               	movwf	___llmod@dividend+3
 13424  008F  0867               	movf	(_sys_time+2)^(0+256),w	;volatile
 13425  0090  00F6               	movwf	___llmod@dividend+2
 13426  0091  0866               	movf	(_sys_time+1)^(0+256),w	;volatile
 13427  0092  00F5               	movwf	___llmod@dividend+1
 13428  0093  0865               	movf	_sys_time^(0+256),w	;volatile
 13429  0094  00F4               	movwf	___llmod@dividend
 13430  0095  3188  2007  3180   	fcall	___llmod
 13431  0098  0873               	movf	?___llmod+3,w
 13432  0099  0472               	iorwf	?___llmod+2,w
 13433  009A  0471               	iorwf	?___llmod+1,w
 13434  009B  0470               	iorwf	?___llmod,w
 13435  009C  1D03               	skipz
 13436  009D  289F               	goto	u369_21
 13437  009E  28A0               	goto	u369_20
 13438  009F                     u369_21:
 13439  009F  28B2               	goto	i1l3359
 13440  00A0                     u369_20:
 13441  00A0                     i1l3357:
 13442                           
 13443                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 29:                     L
      +                          ATAbits.LATA6 ^= 1;
 13444  00A0  0020               	movlb	0	; select bank0
 13445  00A1  0E16               	swapf	22,w	;volatile
 13446  00A2  00FA               	movwf	??_Isr
 13447  00A3  0CFA               	rrf	??_Isr,f
 13448  00A4  0C7A               	rrf	??_Isr,w
 13449  00A5  3901               	andlw	1
 13450  00A6  00FA               	movwf	??_Isr
 13451  00A7  3001               	movlw	1
 13452  00A8  06FA               	xorwf	??_Isr,f
 13453  00A9  0EFA               	swapf	??_Isr,f
 13454  00AA  0DFA               	rlf	??_Isr,f
 13455  00AB  0DFA               	rlf	??_Isr,f
 13456  00AC  0816               	movf	22,w	;volatile
 13457  00AD  067A               	xorwf	??_Isr,w
 13458  00AE  39BF               	andlw	-65
 13459  00AF  067A               	xorwf	??_Isr,w
 13460  00B0  0096               	movwf	22	;volatile
 13461                           
 13462                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 30:             } else {
 13463  00B1  28C0               	goto	i1l3361
 13464  00B2                     i1l3359:
 13465                           
 13466                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 31:                 LATAb
      +                          its.LATA7 ^= 1;
 13467  00B2  0020               	movlb	0	; select bank0
 13468  00B3  0D16               	rlf	22,w	;volatile
 13469  00B4  0D16               	rlf	22,w	;volatile
 13470  00B5  3901               	andlw	1
 13471  00B6  00FA               	movwf	??_Isr
 13472  00B7  3001               	movlw	1
 13473  00B8  06FA               	xorwf	??_Isr,f
 13474  00B9  0CFA               	rrf	??_Isr,f
 13475  00BA  0CFA               	rrf	??_Isr,f
 13476  00BB  0816               	movf	22,w	;volatile
 13477  00BC  067A               	xorwf	??_Isr,w
 13478  00BD  397F               	andlw	-129
 13479  00BE  067A               	xorwf	??_Isr,w
 13480  00BF  0096               	movwf	22	;volatile
 13481  00C0                     i1l3361:
 13482                           
 13483                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 35:         if(sys_time%2
      +                          000 == 0){
 13484  00C0  3000               	movlw	0
 13485  00C1  00F3               	movwf	___llmod@divisor+3
 13486  00C2  3000               	movlw	0
 13487  00C3  00F2               	movwf	___llmod@divisor+2
 13488  00C4  3007               	movlw	7
 13489  00C5  00F1               	movwf	___llmod@divisor+1
 13490  00C6  30D0               	movlw	208
 13491  00C7  00F0               	movwf	___llmod@divisor
 13492  00C8  0022               	movlb	2	; select bank2
 13493  00C9  0868               	movf	(_sys_time+3)^(0+256),w	;volatile
 13494  00CA  00F7               	movwf	___llmod@dividend+3
 13495  00CB  0867               	movf	(_sys_time+2)^(0+256),w	;volatile
 13496  00CC  00F6               	movwf	___llmod@dividend+2
 13497  00CD  0866               	movf	(_sys_time+1)^(0+256),w	;volatile
 13498  00CE  00F5               	movwf	___llmod@dividend+1
 13499  00CF  0865               	movf	_sys_time^(0+256),w	;volatile
 13500  00D0  00F4               	movwf	___llmod@dividend
 13501  00D1  3188  2007  3180   	fcall	___llmod
 13502  00D4  0873               	movf	?___llmod+3,w
 13503  00D5  0472               	iorwf	?___llmod+2,w
 13504  00D6  0471               	iorwf	?___llmod+1,w
 13505  00D7  0470               	iorwf	?___llmod,w
 13506  00D8  1D03               	skipz
 13507  00D9  28DB               	goto	u370_21
 13508  00DA  28DC               	goto	u370_20
 13509  00DB                     u370_21:
 13510  00DB  28DF               	goto	i1l405
 13511  00DC                     u370_20:
 13512  00DC                     i1l3363:
 13513                           
 13514                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 36:             do_dht11_
      +                          snsr_read = 1;
 13515  00DC  0022               	movlb	2	; select bank2
 13516  00DD  01EE               	clrf	_do_dht11_snsr_read^(0+256)
 13517  00DE  0AEE               	incf	_do_dht11_snsr_read^(0+256),f
 13518  00DF                     i1l405:	
 13519                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 38:     }
 13520                           
 13521                           
 13522                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 59:     if(INTF){
 13523  00DF  002E               	movlb	14	; select bank14
 13524  00E0  1C0C               	btfss	12,0	;volatile
 13525  00E1  28E3               	goto	u371_21
 13526  00E2  28E4               	goto	u371_20
 13527  00E3                     u371_21:
 13528  00E3  28E8               	goto	i1l413
 13529  00E4                     u371_20:
 13530  00E4                     i1l3365:
 13531                           
 13532                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 60:         INTF = 0;
 13533  00E4  100C               	bcf	12,0	;volatile
 13534                           
 13535                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 61:         do_irdist_sns
      +                          r_read = 1;
 13536  00E5  0022               	movlb	2	; select bank2
 13537  00E6  01ED               	clrf	_do_irdist_snsr_read^(0+256)
 13538  00E7  0AED               	incf	_do_irdist_snsr_read^(0+256),f
 13539  00E8                     i1l413:	
 13540                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 62:     }
 13541                           
 13542                           
 13543                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 64:     if(TXIF){
 13544  00E8  002E               	movlb	14	; select bank14
 13545  00E9  1E0F               	btfss	15,4	;volatile
 13546  00EA  28EC               	goto	u372_21
 13547  00EB  28ED               	goto	u372_20
 13548  00EC                     u372_21:
 13549  00EC  290D               	goto	i1l3381
 13550  00ED                     u372_20:
 13551  00ED                     i1l3367:
 13552                           
 13553                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 65:         TXIF = 0;
 13554  00ED  120F               	bcf	15,4	;volatile
 13555  00EE                     i1l3369:
 13556                           
 13557                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 66:         if(eusart_tx_
      +                          buff_tail == eusart_tx_buff_head && !eusart_tx_buff_full){
 13558  00EE  0020               	movlb	0	; select bank0
 13559  00EF  086A               	movf	_eusart_tx_buff_tail,w
 13560  00F0  0669               	xorwf	_eusart_tx_buff_head,w
 13561  00F1  1D03               	skipz
 13562  00F2  28F4               	goto	u373_21
 13563  00F3  28F5               	goto	u373_20
 13564  00F4                     u373_21:
 13565  00F4  28FE               	goto	i1l3375
 13566  00F5                     u373_20:
 13567  00F5                     i1l3371:
 13568  00F5  087D               	movf	_eusart_tx_buff_full,w
 13569  00F6  1D03               	btfss	3,2
 13570  00F7  28F9               	goto	u374_21
 13571  00F8  28FA               	goto	u374_20
 13572  00F9                     u374_21:
 13573  00F9  28FE               	goto	i1l3375
 13574  00FA                     u374_20:
 13575  00FA                     i1l3373:
 13576                           
 13577                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 67:             TXIE = 0;
 13578  00FA  002E               	movlb	14	; select bank14
 13579  00FB  1219               	bcf	25,4	;volatile
 13580                           
 13581                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 68:             TXIF = 0;
 13582  00FC  120F               	bcf	15,4	;volatile
 13583                           
 13584                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 69:         } else {
 13585  00FD  290C               	goto	i1l3379
 13586  00FE                     i1l3375:
 13587                           
 13588                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 70:             TX1REG = 
      +                          eusart_tx_buff[eusart_tx_buff_tail++];
 13589  00FE  086A               	movf	_eusart_tx_buff_tail,w
 13590  00FF  3EF0               	addlw	240
 13591  0100  0086               	movwf	6
 13592  0101  0187               	clrf	7
 13593  0102  3022               	movlw	34
 13594  0103  3D87               	addwfc	7,f
 13595  0104  0801               	movf	1,w
 13596  0105  0022               	movlb	2	; select bank2
 13597  0106  009A               	movwf	26	;volatile
 13598  0107                     i1l3377:
 13599  0107  3001               	movlw	1
 13600  0108  00FA               	movwf	??_Isr
 13601  0109  087A               	movf	??_Isr,w
 13602  010A  0020               	movlb	0	; select bank0
 13603  010B  07EA               	addwf	_eusart_tx_buff_tail,f
 13604  010C                     i1l3379:
 13605                           
 13606                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 72:         eusart_tx_buf
      +                          f_full = 0;
 13607  010C  01FD               	clrf	_eusart_tx_buff_full
 13608  010D                     i1l3381:
 13609                           
 13610                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 75:     if(RCIF){
 13611  010D  002E               	movlb	14	; select bank14
 13612  010E  1E8F               	btfss	15,5	;volatile
 13613  010F  2911               	goto	u375_21
 13614  0110  2912               	goto	u375_20
 13615  0111                     u375_21:
 13616  0111  29AF               	goto	i1l432
 13617  0112                     u375_20:
 13618  0112                     i1l3383:
 13619                           
 13620                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 76:         RCIF = 0;
 13621  0112  128F               	bcf	15,5	;volatile
 13622  0113                     i1l3385:
 13623                           
 13624                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 77:         _Bool rx_frm_
      +                          error = 0;
 13625  0113  0020               	movlb	0	; select bank0
 13626  0114  01A0               	clrf	Isr@rx_frm_error
 13627                           
 13628                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 78:         _Bool rx_or_e
      +                          rror = 0;
 13629  0115  01A1               	clrf	Isr@rx_or_error
 13630  0116                     i1l3387:
 13631                           
 13632                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 80:         if(RC1STAbits
      +                          .FERR){
 13633  0116  0022               	movlb	2	; select bank2
 13634  0117  1D1D               	btfss	29,2	;volatile
 13635  0118  291A               	goto	u376_21
 13636  0119  291B               	goto	u376_20
 13637  011A                     u376_21:
 13638  011A  291E               	goto	i1l418
 13639  011B                     u376_20:
 13640  011B                     i1l3389:
 13641                           
 13642                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 82:             rx_frm_er
      +                          ror = 1;
 13643  011B  0020               	movlb	0	; select bank0
 13644  011C  01A0               	clrf	Isr@rx_frm_error
 13645  011D  0AA0               	incf	Isr@rx_frm_error,f
 13646  011E                     i1l418:	
 13647                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 83:         }
 13648                           
 13649                           
 13650                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 84:         if(RC1STAbits
      +                          .OERR){
 13651  011E  0022               	movlb	2	; select bank2
 13652  011F  1C9D               	btfss	29,1	;volatile
 13653  0120  2922               	goto	u377_21
 13654  0121  2923               	goto	u377_20
 13655  0122                     u377_21:
 13656  0122  2929               	goto	i1l3393
 13657  0123                     u377_20:
 13658  0123                     i1l3391:
 13659                           
 13660                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 86:             rx_or_err
      +                          or = 1;
 13661  0123  0020               	movlb	0	; select bank0
 13662  0124  01A1               	clrf	Isr@rx_or_error
 13663  0125  0AA1               	incf	Isr@rx_or_error,f
 13664                           
 13665                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 87:             RC1STAbit
      +                          s.CREN = 0;
 13666  0126  0022               	movlb	2	; select bank2
 13667  0127  121D               	bcf	29,4	;volatile
 13668                           
 13669                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 88:             RC1STAbit
      +                          s.CREN = 1;
 13670  0128  161D               	bsf	29,4	;volatile
 13671  0129                     i1l3393:
 13672                           
 13673                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 90:         if(!rx_or_err
      +                          or){
 13674  0129  0020               	movlb	0	; select bank0
 13675  012A  0821               	movf	Isr@rx_or_error,w
 13676  012B  1D03               	btfss	3,2
 13677  012C  292E               	goto	u378_21
 13678  012D  292F               	goto	u378_20
 13679  012E                     u378_21:
 13680  012E  29AF               	goto	i1l432
 13681  012F                     u378_20:
 13682  012F                     i1l3395:
 13683                           
 13684                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 91:             uint8_t r
      +                          x_val = RC1REG;
 13685  012F  0022               	movlb	2	; select bank2
 13686  0130  0819               	movf	25,w	;volatile
 13687  0131  00FA               	movwf	??_Isr
 13688  0132  087A               	movf	??_Isr,w
 13689  0133  0020               	movlb	0	; select bank0
 13690  0134  00A2               	movwf	Isr@rx_val
 13691  0135                     i1l3397:
 13692                           
 13693                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 92:             if(!rx_fr
      +                          m_error){
 13694  0135  0820               	movf	Isr@rx_frm_error,w
 13695  0136  1D03               	btfss	3,2
 13696  0137  2939               	goto	u379_21
 13697  0138  293A               	goto	u379_20
 13698  0139                     u379_21:
 13699  0139  29AF               	goto	i1l432
 13700  013A                     u379_20:
 13701  013A                     i1l3399:
 13702                           
 13703                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 93:                 if(eu
      +                          sart_rx_buff_idx < 64){
 13704  013A  3040               	movlw	64
 13705  013B  0268               	subwf	_eusart_rx_buff_idx,w
 13706  013C  1803               	skipnc
 13707  013D  293F               	goto	u380_21
 13708  013E  2940               	goto	u380_20
 13709  013F                     u380_21:
 13710  013F  2994               	goto	i1l3429
 13711  0140                     u380_20:
 13712  0140                     i1l3401:
 13713                           
 13714                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 94:                     i
      +                          f(rx_val != 0x0A && rx_val != 0x0D && rx_val != 0){
 13715  0140  300A               	movlw	10
 13716  0141  0622               	xorwf	Isr@rx_val,w
 13717  0142  1903               	btfsc	3,2
 13718  0143  2945               	goto	u381_21
 13719  0144  2946               	goto	u381_20
 13720  0145                     u381_21:
 13721  0145  295F               	goto	i1l3411
 13722  0146                     u381_20:
 13723  0146                     i1l3403:
 13724  0146  300D               	movlw	13
 13725  0147  0622               	xorwf	Isr@rx_val,w
 13726  0148  1903               	btfsc	3,2
 13727  0149  294B               	goto	u382_21
 13728  014A  294C               	goto	u382_20
 13729  014B                     u382_21:
 13730  014B  295F               	goto	i1l3411
 13731  014C                     u382_20:
 13732  014C                     i1l3405:
 13733  014C  0822               	movf	Isr@rx_val,w
 13734  014D  1903               	btfsc	3,2
 13735  014E  2950               	goto	u383_21
 13736  014F  2951               	goto	u383_20
 13737  0150                     u383_21:
 13738  0150  295F               	goto	i1l3411
 13739  0151                     u383_20:
 13740  0151                     i1l3407:
 13741                           
 13742                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 95:                      
      +                             eusart_rx_buff_isr[eusart_rx_buff_idx++] = rx_val;
 13743  0151  0822               	movf	Isr@rx_val,w
 13744  0152  00FA               	movwf	??_Isr
 13745  0153  0868               	movf	_eusart_rx_buff_idx,w
 13746  0154  3E20               	addlw	(low (_eusart_rx_buff_isr| (0+512)))& (0+255)
 13747  0155  0086               	movwf	6
 13748  0156  3002               	movlw	2	; select bank4/5
 13749  0157  0087               	movwf	7
 13750  0158  087A               	movf	??_Isr,w
 13751  0159  0081               	movwf	1
 13752  015A                     i1l3409:
 13753  015A  3001               	movlw	1
 13754  015B  00FA               	movwf	??_Isr
 13755  015C  087A               	movf	??_Isr,w
 13756  015D  07E8               	addwf	_eusart_rx_buff_idx,f
 13757                           
 13758                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 96:                     }
      +                           else if(eusart_rx_buff_idx != 0){
 13759  015E  29AF               	goto	i1l432
 13760  015F                     i1l3411:
 13761  015F  0868               	movf	_eusart_rx_buff_idx,w
 13762  0160  1903               	btfsc	3,2
 13763  0161  2963               	goto	u384_21
 13764  0162  2964               	goto	u384_20
 13765  0163                     u384_21:
 13766  0163  29AF               	goto	i1l421
 13767  0164                     u384_20:
 13768  0164                     i1l3413:
 13769                           
 13770                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 97:                      
      +                             for(uint8_t i = 0; i < eusart_rx_buff_idx; i++){
 13771  0164  01A3               	clrf	Isr@i
 13772  0165  297E               	goto	i1l3419
 13773  0166                     i1l3415:
 13774                           
 13775                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 98:                      
      +                                 eusart_rx_buff_use[i] = eusart_rx_buff_isr[i];
 13776  0166  0823               	movf	Isr@i,w
 13777  0167  3E20               	addlw	(low (_eusart_rx_buff_isr| (0+512)))& (0+255)
 13778  0168  0086               	movwf	6
 13779  0169  3002               	movlw	2	; select bank4/5
 13780  016A  0087               	movwf	7
 13781  016B  0801               	movf	1,w
 13782  016C  00FA               	movwf	??_Isr
 13783  016D  0823               	movf	Isr@i,w
 13784  016E  3EA0               	addlw	(low (_eusart_rx_buff_use| (0+512)))& (0+255)
 13785  016F  0086               	movwf	6
 13786  0170  3002               	movlw	2	; select bank5/6
 13787  0171  0087               	movwf	7
 13788  0172  087A               	movf	??_Isr,w
 13789  0173  0081               	movwf	1
 13790                           
 13791                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 99:                      
      +                                 eusart_rx_buff_isr[i] = 0;
 13792  0174  0823               	movf	Isr@i,w
 13793  0175  3E20               	addlw	(low (_eusart_rx_buff_isr| (0+512)))& (0+255)
 13794  0176  0086               	movwf	6
 13795  0177  3002               	movlw	2	; select bank4/5
 13796  0178  0087               	movwf	7
 13797  0179  0181               	clrf	1
 13798  017A                     i1l3417:
 13799                           
 13800                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 100:                     
      +                              }
 13801  017A  3001               	movlw	1
 13802  017B  00FA               	movwf	??_Isr
 13803  017C  087A               	movf	??_Isr,w
 13804  017D  07A3               	addwf	Isr@i,f
 13805  017E                     i1l3419:
 13806  017E  0868               	movf	_eusart_rx_buff_idx,w
 13807  017F  0223               	subwf	Isr@i,w
 13808  0180  1C03               	skipc
 13809  0181  2983               	goto	u385_21
 13810  0182  2984               	goto	u385_20
 13811  0183                     u385_21:
 13812  0183  2966               	goto	i1l3415
 13813  0184                     u385_20:
 13814  0184                     i1l3421:
 13815                           
 13816                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 101:                     
      +                              eusart_rx_buff_use[eusart_rx_buff_idx] = 0;
 13817  0184  0868               	movf	_eusart_rx_buff_idx,w
 13818  0185  3EA0               	addlw	(low (_eusart_rx_buff_use| (0+512)))& (0+255)
 13819  0186  0086               	movwf	6
 13820  0187  3002               	movlw	2	; select bank5/6
 13821  0188  0087               	movwf	7
 13822  0189  0181               	clrf	1
 13823  018A                     i1l3423:
 13824                           
 13825                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 102:                     
      +                              eusart_rx_buff_load_cnt = eusart_rx_buff_idx;
 13826  018A  0868               	movf	_eusart_rx_buff_idx,w
 13827  018B  00FA               	movwf	??_Isr
 13828  018C  087A               	movf	??_Isr,w
 13829  018D  00FB               	movwf	_eusart_rx_buff_load_cnt
 13830  018E                     i1l3425:
 13831                           
 13832                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 103:                     
      +                              eusart_rx_msg_present = 1;
 13833  018E  0021               	movlb	1	; select bank1
 13834  018F  01EF               	clrf	_eusart_rx_msg_present^(0+128)
 13835  0190  0AEF               	incf	_eusart_rx_msg_present^(0+128),f
 13836  0191                     i1l3427:
 13837                           
 13838                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 104:                     
      +                              eusart_rx_buff_idx = 0;
 13839  0191  0020               	movlb	0	; select bank0
 13840  0192  01E8               	clrf	_eusart_rx_buff_idx
 13841  0193  29AF               	goto	i1l432
 13842  0194                     i1l3429:
 13843                           
 13844                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 108:                     
      +                          for(uint8_t i = 0; i < 64; i++){
 13845  0194  01A4               	clrf	Isr@i_885
 13846  0195                     i1l3435:
 13847                           
 13848                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 109:                     
      +                              eusart_rx_buff_isr[i] = 0;
 13849  0195  0824               	movf	Isr@i_885,w
 13850  0196  3E20               	addlw	(low (_eusart_rx_buff_isr| (0+512)))& (0+255)
 13851  0197  0086               	movwf	6
 13852  0198  3002               	movlw	2	; select bank4/5
 13853  0199  0087               	movwf	7
 13854  019A  0181               	clrf	1
 13855                           
 13856                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 110:                     
      +                              eusart_rx_buff_use[i] = 0;
 13857  019B  0824               	movf	Isr@i_885,w
 13858  019C  3EA0               	addlw	(low (_eusart_rx_buff_use| (0+512)))& (0+255)
 13859  019D  0086               	movwf	6
 13860  019E  3002               	movlw	2	; select bank5/6
 13861  019F  0087               	movwf	7
 13862  01A0  0181               	clrf	1
 13863  01A1                     i1l3437:
 13864                           
 13865                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 111:                     
      +                          }
 13866  01A1  3001               	movlw	1
 13867  01A2  00FA               	movwf	??_Isr
 13868  01A3  087A               	movf	??_Isr,w
 13869  01A4  07A4               	addwf	Isr@i_885,f
 13870  01A5                     i1l3439:
 13871  01A5  3040               	movlw	64
 13872  01A6  0224               	subwf	Isr@i_885,w
 13873  01A7  1C03               	skipc
 13874  01A8  29AA               	goto	u386_21
 13875  01A9  29AB               	goto	u386_20
 13876  01AA                     u386_21:
 13877  01AA  2995               	goto	i1l3435
 13878  01AB                     u386_20:
 13879  01AB                     i1l3441:
 13880                           
 13881                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 112:                     
      +                          eusart_rx_buff_idx = 0;
 13882  01AB  01E8               	clrf	_eusart_rx_buff_idx
 13883                           
 13884                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 113:                     
      +                          eusart_rx_msg_present = 0;
 13885  01AC  0021               	movlb	1	; select bank1
 13886  01AD  01EF               	clrf	_eusart_rx_msg_present^(0+128)
 13887  01AE  29AF               	goto	i1l432
 13888  01AF                     i1l421:	
 13889                           ;/home/dev-user/Projects/Personal/PIC/PicTest1.X/interrupts.c: 115:             }
 13890                           
 13891  01AF                     i1l432:
 13892  01AF  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 13893  01B0  0009               	retfie
 13894  01B1                     __end_of_Isr:
 13895                           
 13896                           	psect	text39
 13897  0807                     __ptext39:	
 13898 ;; *************** function ___llmod *****************
 13899 ;; Defined at:
 13900 ;;		line 5 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/llmod.c"
 13901 ;; Parameters:    Size  Location     Type
 13902 ;;  divisor         4    0[COMMON] unsigned long 
 13903 ;;  dividend        4    4[COMMON] unsigned long 
 13904 ;; Auto vars:     Size  Location     Type
 13905 ;;  counter         1    9[COMMON] unsigned char 
 13906 ;; Return value:  Size  Location     Type
 13907 ;;                  4    0[COMMON] unsigned long 
 13908 ;; Registers used:
 13909 ;;		wreg, status,2, status,0
 13910 ;; Tracked objects:
 13911 ;;		On entry : 0/0
 13912 ;;		On exit  : 0/0
 13913 ;;		Unchanged: 0/0
 13914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13915 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13916 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13917 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13918 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13919 ;;Total ram usage:       10 bytes
 13920 ;; Hardware stack levels used:    1
 13921 ;; This function calls:
 13922 ;;		Nothing
 13923 ;; This function is called by:
 13924 ;;		_Isr
 13925 ;; This function uses a non-reentrant model
 13926 ;;
 13927                           
 13928                           
 13929                           ;psect for function ___llmod
 13930  0807                     ___llmod:
 13931  0807                     i1l3275:	
 13932                           ;incstack = 0
 13933                           ; Regs used in ___llmod: [wreg+status,2+status,0]
 13934                           
 13935  0807  0873               	movf	___llmod@divisor+3,w
 13936  0808  0472               	iorwf	___llmod@divisor+2,w
 13937  0809  0471               	iorwf	___llmod@divisor+1,w
 13938  080A  0470               	iorwf	___llmod@divisor,w
 13939  080B  1903               	skipnz
 13940  080C  280E               	goto	u352_21
 13941  080D  280F               	goto	u352_20
 13942  080E                     u352_21:
 13943  080E  2848               	goto	i1l3291
 13944  080F                     u352_20:
 13945  080F                     i1l3277:
 13946  080F  01F9               	clrf	___llmod@counter
 13947  0810  0AF9               	incf	___llmod@counter,f
 13948  0811  281D               	goto	i1l3281
 13949  0812                     i1l3279:
 13950  0812  3001               	movlw	1
 13951  0813                     u353_25:
 13952  0813  35F0               	lslf	___llmod@divisor,f
 13953  0814  0DF1               	rlf	___llmod@divisor+1,f
 13954  0815  0DF2               	rlf	___llmod@divisor+2,f
 13955  0816  0DF3               	rlf	___llmod@divisor+3,f
 13956  0817  0B89               	decfsz	9,f
 13957  0818  2813               	goto	u353_25
 13958  0819  3001               	movlw	1
 13959  081A  00F8               	movwf	??___llmod
 13960  081B  0878               	movf	??___llmod,w
 13961  081C  07F9               	addwf	___llmod@counter,f
 13962  081D                     i1l3281:
 13963  081D  1FF3               	btfss	___llmod@divisor+3,7
 13964  081E  2820               	goto	u354_21
 13965  081F  2821               	goto	u354_20
 13966  0820                     u354_21:
 13967  0820  2812               	goto	i1l3279
 13968  0821                     u354_20:
 13969  0821                     i1l3283:
 13970  0821  0873               	movf	___llmod@divisor+3,w
 13971  0822  0277               	subwf	___llmod@dividend+3,w
 13972  0823  1D03               	skipz
 13973  0824  282F               	goto	u355_25
 13974  0825  0872               	movf	___llmod@divisor+2,w
 13975  0826  0276               	subwf	___llmod@dividend+2,w
 13976  0827  1D03               	skipz
 13977  0828  282F               	goto	u355_25
 13978  0829  0871               	movf	___llmod@divisor+1,w
 13979  082A  0275               	subwf	___llmod@dividend+1,w
 13980  082B  1D03               	skipz
 13981  082C  282F               	goto	u355_25
 13982  082D  0870               	movf	___llmod@divisor,w
 13983  082E  0274               	subwf	___llmod@dividend,w
 13984  082F                     u355_25:
 13985  082F  1C03               	skipc
 13986  0830  2832               	goto	u355_21
 13987  0831  2833               	goto	u355_20
 13988  0832                     u355_21:
 13989  0832  283B               	goto	i1l3287
 13990  0833                     u355_20:
 13991  0833                     i1l3285:
 13992  0833  0870               	movf	___llmod@divisor,w
 13993  0834  02F4               	subwf	___llmod@dividend,f
 13994  0835  0871               	movf	___llmod@divisor+1,w
 13995  0836  3BF5               	subwfb	___llmod@dividend+1,f
 13996  0837  0872               	movf	___llmod@divisor+2,w
 13997  0838  3BF6               	subwfb	___llmod@dividend+2,f
 13998  0839  0873               	movf	___llmod@divisor+3,w
 13999  083A  3BF7               	subwfb	___llmod@dividend+3,f
 14000  083B                     i1l3287:
 14001  083B  3001               	movlw	1
 14002  083C                     u356_25:
 14003  083C  36F3               	lsrf	___llmod@divisor+3,f
 14004  083D  0CF2               	rrf	___llmod@divisor+2,f
 14005  083E  0CF1               	rrf	___llmod@divisor+1,f
 14006  083F  0CF0               	rrf	___llmod@divisor,f
 14007  0840  0B89               	decfsz	9,f
 14008  0841  283C               	goto	u356_25
 14009  0842                     i1l3289:
 14010  0842  3001               	movlw	1
 14011  0843  02F9               	subwf	___llmod@counter,f
 14012  0844  1D03               	btfss	3,2
 14013  0845  2847               	goto	u357_21
 14014  0846  2848               	goto	u357_20
 14015  0847                     u357_21:
 14016  0847  2821               	goto	i1l3283
 14017  0848                     u357_20:
 14018  0848                     i1l3291:
 14019  0848  0877               	movf	___llmod@dividend+3,w
 14020  0849  00F3               	movwf	?___llmod+3
 14021  084A  0876               	movf	___llmod@dividend+2,w
 14022  084B  00F2               	movwf	?___llmod+2
 14023  084C  0875               	movf	___llmod@dividend+1,w
 14024  084D  00F1               	movwf	?___llmod+1
 14025  084E  0874               	movf	___llmod@dividend,w
 14026  084F  00F0               	movwf	?___llmod
 14027  0850                     i1l814:
 14028  0850  0008               	return
 14029  0851                     __end_of___llmod:
 14030  007E                     btemp	set	126	;btemp
 14031  007E                     int$flags	set	126
 14032  007E                     wtemp0	set	126
 14033  22F0                     
 14034                           	psect	config
 14035                           
 14036                           ;Config register CONFIG1 @ 0x8007
 14037                           ;	External Oscillator mode selection bits
 14038                           ;	FEXTOSC = OFF, Oscillator not enabled
 14039                           ;	Power-up default value for COSC bits
 14040                           ;	RSTOSC = HFINTPLL, HFINTOSC with 2x PLL, with OSCFRQ = 16 MHz and CDIV = 1:1 (FOSC = 3
      +                          2 MHz)
 14041                           ;	Clock Out Enable bit
 14042                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 14043                           ;	Clock Switch Enable bit
 14044                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 14045                           ;	Fail-Safe Clock Monitor Enable bit
 14046                           ;	FCMEN = ON, FSCM timer enabled
 14047  8007                     	org	32775
 14048  8007  3F9C               	dw	16284
 14049                           
 14050                           ;Config register CONFIG2 @ 0x8008
 14051                           ;	Master Clear Enable bit
 14052                           ;	MCLRE = ON, MCLR pin is Master Clear function
 14053                           ;	Power-up Timer Enable bit
 14054                           ;	PWRTE = OFF, PWRT disabled
 14055                           ;	Low-Power BOR enable bit
 14056                           ;	LPBOREN = OFF, ULPBOR disabled
 14057                           ;	Brown-out reset enable bits
 14058                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 14059                           ;	Brown-out Reset Voltage Selection
 14060                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 14061                           ;	Zero-cross detect disable
 14062                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 14063                           ;	Peripheral Pin Select one-way control
 14064                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 14065                           ;	Stack Overflow/Underflow Reset Enable bit
 14066                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 14067                           ;	Background Debugger
 14068                           ;	DEBUG = 0x1, unprogrammed default
 14069  8008                     	org	32776
 14070  8008  3FFF               	dw	16383
 14071                           
 14072                           ;Config register CONFIG3 @ 0x8009
 14073                           ;	WDT Period Select bits
 14074                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 14075                           ;	WDT operating mode
 14076                           ;	WDTE = ON, WDT enabled regardless of sleep; SWDTEN ignored
 14077                           ;	WDT Window Select bits
 14078                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 14079                           ;	WDT input clock selector
 14080                           ;	WDTCCS = SC, Software Control
 14081  8009                     	org	32777
 14082  8009  3FFF               	dw	16383
 14083                           
 14084                           ;Config register CONFIG4 @ 0x800A
 14085                           ;	UserNVM self-write protection bits
 14086                           ;	WRT = OFF, Write protection off
 14087                           ;	Scanner Enable bit
 14088                           ;	SCANE = available, Scanner module is available for use
 14089                           ;	Low Voltage Programming Enable bit
 14090                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 14091  800A                     	org	32778
 14092  800A  3FFF               	dw	16383
 14093                           
 14094                           ;Config register CONFIG5 @ 0x800B
 14095                           ;	UserNVM Program memory code protection bit
 14096                           ;	CP = OFF, Program Memory code protection disabled
 14097                           ;	DataNVM code protection bit
 14098                           ;	CPD = OFF, Data EEPROM code protection disabled
 14099  800B                     	org	32779
 14100  800B  3FFF               	dw	16383

Data Sizes:
    Strings     109
    Constant    0
    Data        0
    BSS         202
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80     70      75
    BANK1            80     74      80
    BANK2            80     69      79
    BANK3            80      0      50
    BANK4            80      0      64
    BANK5            80      0      64
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            32      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 64
		 -> dbuf(BANK3[32]), main@msg_buff(BANK2[64]), load_tx_msg_str_crlf@new_buff(BANK1[64]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 64
		 -> dbuf(BANK3[32]), main@msg_buff(BANK2[64]), load_tx_msg_str_crlf@new_buff(BANK1[64]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 64
		 -> load_tx_msg_str_crlf@new_buff(BANK1[64]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 64
		 -> load_tx_msg_str_crlf@new_buff(BANK1[64]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 64
		 -> main@msg_buff(BANK2[64]), STR_1(CODE[3]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 64
		 -> main@msg_buff(BANK2[64]), STR_1(CODE[3]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    strcat@dest	PTR unsigned char  size(1) Largest target is 64
		 -> load_tx_msg_str_crlf@new_buff(BANK1[64]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 64
		 -> main@msg_buff(BANK2[64]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 60
		 -> STR_4(CODE[23]), STR_3(CODE[23]), STR_2(CODE[60]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 60
		 -> STR_4(CODE[23]), STR_3(CODE[23]), STR_2(CODE[60]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 60
		 -> STR_4(CODE[23]), STR_3(CODE[23]), STR_2(CODE[60]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    xtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 60
		 -> STR_4(CODE[23]), STR_3(CODE[23]), STR_2(CODE[60]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 64
		 -> main@msg_buff(BANK2[64]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S1318_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 64
		 -> main@msg_buff(BANK2[64]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 64
		 -> main@msg_buff(BANK2[64]), 

    tmr4.PREG	PTR unsigned char  size(2) Largest target is 1
		 -> T4PR(SFR5[1]), 

    tmr4.HLT	PTR unsigned char  size(2) Largest target is 1
		 -> T4HLT(SFR5[1]), 

    tmr4.CLKCON	PTR unsigned char  size(2) Largest target is 1
		 -> T4CLKCON(SFR5[1]), 

    tmr4.CON	PTR unsigned char  size(2) Largest target is 1
		 -> T4CON(SFR5[1]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 64
		 -> load_tx_msg_str_crlf@new_buff(BANK1[64]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 64
		 -> load_tx_msg_str_crlf@new_buff(BANK1[64]), 

    load_tx_msg_str_crlf@in_bytes	PTR unsigned char  size(1) Largest target is 64
		 -> main@msg_buff(BANK2[64]), 

    load_tx_msg_str@in_bytes	PTR unsigned char  size(2) Largest target is 64
		 -> main@msg_buff(BANK2[64]), load_tx_msg_str_crlf@new_buff(BANK1[64]), 

    Mod.PREG	PTR unsigned char  size(2) Largest target is 1
		 -> T4PR(SFR5[1]), 

    Mod.HLT	PTR unsigned char  size(2) Largest target is 1
		 -> T4HLT(SFR5[1]), 

    Mod.CLKCON	PTR unsigned char  size(2) Largest target is 1
		 -> T4CLKCON(SFR5[1]), 

    Mod.CON	PTR unsigned char  size(2) Largest target is 1
		 -> T4CON(SFR5[1]), 

    Mod.PREG	PTR unsigned char  size(2) Largest target is 1
		 -> T4PR(SFR5[1]), 

    Mod.HLT	PTR unsigned char  size(2) Largest target is 1
		 -> T4HLT(SFR5[1]), 

    Mod.CLKCON	PTR unsigned char  size(2) Largest target is 1
		 -> T4CLKCON(SFR5[1]), 

    Mod.CON	PTR unsigned char  size(2) Largest target is 1
		 -> T4CON(SFR5[1]), 

    S22TimerEven$PREG	PTR unsigned char  size(2) Largest target is 1
		 -> T4PR(SFR5[1]), 

    Mod.PREG	PTR unsigned char  size(2) Largest target is 1
		 -> T4PR(SFR5[1]), 

    S22TimerEven$HLT	PTR unsigned char  size(2) Largest target is 1
		 -> T4HLT(SFR5[1]), 

    Mod.HLT	PTR unsigned char  size(2) Largest target is 1
		 -> T4HLT(SFR5[1]), 

    S22TimerEven$CLKCON	PTR unsigned char  size(2) Largest target is 1
		 -> T4CLKCON(SFR5[1]), 

    Mod.CLKCON	PTR unsigned char  size(2) Largest target is 1
		 -> T4CLKCON(SFR5[1]), 

    S22TimerEven$CON	PTR unsigned char  size(2) Largest target is 1
		 -> T4CON(SFR5[1]), 

    Mod.CON	PTR unsigned char  size(2) Largest target is 1
		 -> T4CON(SFR5[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Isr in COMMON

    _Isr->___llmod

Critical Paths under _main in BANK0

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->___aodiv
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    _atoi->_isdigit
    _load_tx_msg_str_crlf->_strcat
    _strcat->_strcpy
    _strcpy->_strlen
    _load_tx_msg_str->_strlen
    _SysInit->_TmrSetup
    _TmrSetup->_TmrDisable
    _TmrSetup->___lldiv
    _EUSARTSetup->___lldiv

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_load_tx_msg_str_crlf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _Isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                77    77      0   23380
                                             66 BANK1      8     8      0
                                              0 BANK2     69    69      0
                           _SetupClk
                            _SysInit
                            ___lldiv
               _load_tx_msg_str_crlf
                     _read_dht11_dat
                    _read_irdist_dat
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    10     10   16739
                                             36 BANK1     20    10     10
                            ___lldiv (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3   16043
                                             28 BANK1      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           43    41      2   15552
                                             68 BANK0      2     0      2
                                              0 BANK1     28    28      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                38    29      9    5582
                                             30 BANK0     38    29      9
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             11 BANK0      8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              5 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              5 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              8     6      2     191
                                              5 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    5818
                                             32 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3606
                                             21 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1429
                                             13 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3    1037
                                              5 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             24 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     613
                                              5 BANK0     19     3     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     625
                                              5 BANK0     27    11     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1419
                                             11 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     259
                                              5 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              5 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     316
                                              5 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _read_irdist_dat                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_dht11_dat                                      19    19      0     343
                                              5 BANK0     19    19      0
 ---------------------------------------------------------------------------------
 (1) _load_tx_msg_str_crlf                                68    68      0    2479
                                             22 BANK0      2     2      0
                                              0 BANK1     66    66      0
                    _load_tx_msg_str
                             _strcat
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strcat                                               5     3      2     895
                                             17 BANK0      5     3      2
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               8     6      2     314
                                              9 BANK0      8     6      2
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _load_tx_msg_str                                      8     6      2     606
                                              9 BANK0      8     6      2
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     355
                                              5 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _SysInit                                              1     1      0    2954
                                             44 BANK0      1     1      0
                        _EUSARTSetup
                          _TmrEnable
                           _TmrSetup
                   _make_all_digital
                   _setup_dht11_snsr
                  _setup_irdist_snsr
 ---------------------------------------------------------------------------------
 (2) _setup_irdist_snsr                                    1     1      0      22
                                              5 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _setup_dht11_snsr                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _make_all_digital                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TmrSetup                                            25     9     16    1447
                                             19 BANK0     25     9     16
                         _TmrDisable
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _TmrDisable                                          14     1     13     122
                                              5 BANK0     14     1     13
 ---------------------------------------------------------------------------------
 (2) _TmrEnable                                           13     0     13     122
                                              5 BANK0     13     0     13
 ---------------------------------------------------------------------------------
 (2) _EUSARTSetup                                         17    11      6    1363
                                             19 BANK0     17    11      6
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     618
                                              5 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _SetupClk                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _Isr                                                  6     6      0    1236
                                             10 COMMON     1     1      0
                                              0 BANK0      5     5      0
                            ___llmod
 ---------------------------------------------------------------------------------
 (10) ___llmod                                            10     2      8     919
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SetupClk
   _SysInit
     _EUSARTSetup
       ___lldiv
     _TmrEnable
     _TmrSetup
       _TmrDisable
       ___lldiv
     _make_all_digital
     _setup_dht11_snsr
     _setup_irdist_snsr
   ___lldiv
   _load_tx_msg_str_crlf
     _load_tx_msg_str
       _strlen
     _strcat
       _strcpy
         _strlen (ARG)
       _strlen
     _strcpy
       _strlen (ARG)
     _strlen
   _read_dht11_dat
   _read_irdist_dat
   _sprintf
     ___lldiv (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _toupper
             _islower

 _Isr (ROOT)
   ___llmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     46      4B       5       93.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4A      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     45      4F       9       98.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      32      11       62.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      40      13       80.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      40      15       80.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     1AA      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               20      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     1AA      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Fri Sep 25 13:44:36 2020

                           l20 15B9                             l12 0B11      __size_of_make_all_digital 0007  
                           l17 07FF                             l81 0F7D                             l82 0FFF  
                           l93 0FFC                             l85 0FC1            ___wmul@multiplicand 0027  
   __size_of_setup_irdist_snsr 0012                            l111 0A60                            l107 0A65  
                          l115 17FF                            l132 15D0                            l230 0C75  
                          l136 074E                            l224 0CA6                            l225 0BE3  
                          l138 07B9                            l147 07F6                            l165 15FC  
                          l334 15EA                            l342 0806                            l168 15C4  
                          l329 15E2                            l338 09D9                            l339 09DC  
                          l620 0956                            l584 16C0                            l586 16D4  
                          l684 0E88                            l685 0E99                            l697 0D83  
                          l698 0D94                            _GIE 005F                            _Isr 0004  
                          _abs 167A                            _pad 08A3                            wreg 0009  
                 _BAUD1CONbits 011F                   ?_EUSARTSetup 0033                 Isr@rx_or_error 0021  
                         ?_Isr 0070                           l1101 06C0                           l1122 047F  
                         l1115 0734                           ?_abs 0038                           l1300 1761  
                         l1222 0BC0                           l1118 0461                           l1231 162D  
                         l1143 0597                           l1047 173B                           l1152 022A  
                         l3001 0FCE                           l1209 0B4F                           l1225 16B4  
                         l1145 05C8                           l1306 165F                           l1154 0235  
                         l3011 0FE9                           l3003 0FDA                           l1155 0238  
                         l1260 08A2                           l1084 08BD                           l1092 0612  
                         l1156 023B                           l3021 0FFE                           l3013 0FEB  
                         l3005 0FDE                           l1093 061C                           l1245 1646  
                         l1157 023E                           l1174 0454                           l3007 0FE4  
                         l3015 0FED                           l1239 1717                           l1191 1695  
                         l1271 0003                           l1087 08DF                           l1159 0273  
                         l1184 17BF                           l3017 0FF1                           l3009 0FE7  
                         l3201 0957                           l3121 0739                           l1089 08FB  
                         l1097 063A                           l1290 1679                           l1098 0650  
                         l3019 0FF7                           l3211 095F                           l3203 095A  
                         l3131 0748                           l3123 073D                           l4011 1732  
                         l4003 171A                           l1284 16F5                           l1188 1695  
                         l1268 178A                           l3221 0964                           l3213 0960  
                         l3205 095C                           l3141 0762                           l3133 0750  
                         l3117 0735                           l4005 1722                           l4021 0BCD  
                         l1278 1614                           l3231 0969                           l3223 0965  
                         l3215 0961                           l3207 095D                           l3135 0759  
                         l3127 073E                           l3119 0738                           l1295 1761  
                         l4007 1724                           l4031 0BEB                           l4023 0BCD  
                         l4015 0BC1                           l3081 15F9                           l3073 15ED  
                         l3241 097F                           l3233 0972                           l3225 0966  
                         l3217 0962                           l3209 095E                           l3161 0782  
                         l3153 076F                           l3137 075F                           l3129 0744  
                         l4009 1726                           l4041 0C63                           l4033 0C20  
                         l4025 0BDF                           l4017 0BC4                           l3067 15C5  
                         l3083 15FA                           l3075 15EE                           l3251 09AE  
                         l3243 0983                           l3235 0973                           l3227 0967  
                         l3219 0963                           l3171 07AB                           l3163 0788  
                         l3155 0778                           l3147 0763                           l3139 0760  
                         l4043 0C64                           l4051 0C84                           l4035 0C24  
                         l4027 0BE4                           l3069 15C8                           l3077 15F0  
                         l3253 09B0                           l3245 0987                           l3237 0976  
                         l3229 0968                           l3501 1666                           l3181 07F2  
                         l3165 078C                           l3173 07AF                           l3157 077C  
                         l3149 0765                           l4053 0C96                           l4045 0C6C  
                         l4037 0C2C                           l4029 0BEA                           l3087 0800  
                         l3079 15F6                           l3255 09C2                           l3247 098B  
                         l3239 097A                           l3503 166A                           l3183 07F3  
                         l3175 07B3                           l3167 0799                           l3191 15BA  
                         l3511 1767                           l4055 0C98                           l4047 0C72  
                         l4039 0C5D                           l3257 09D7                           l3249 0991  
                         l3505 1673                           l3185 07F4                           l3177 07BA  
                         l3169 079F                           l3193 15C3                           l3521 16B5  
                         l3601 0D65                           l3513 1775                           l4049 0C77  
                         l3259 09DB                           l3187 07F5                           l3179 07C0  
                         l3531 16D0                           l3523 16B8                           l3515 177A  
                         l3611 08BB                           l3603 08A5                           l3197 15DD  
                         l2901 0AD2                           l3525 16BC                           l3541 0DC3  
                         l3509 1764                           l3621 08EC                           l3613 08C0  
                         l3605 08A9                           l3701 06F6                           l3517 1647  
                         l3199 15E6                           l2751 08FC                           l2743 15AF  
                         l2911 0AF5                           l3527 16C5                           l3551 0E09  
                         l3543 0DCE                           l3535 0D95                           l3615 08CC  
                         l3607 08B1                           l3711 0710                           l3703 06FB  
                         l2761 0926                           l2753 090D                           l2921 07F7  
                         l2745 15B8                           l2913 0B02                           l2905 0AD4  
                         l3529 16CA                           l3801 0B44                           l3561 0E24  
                         l3553 0E0C                           l3545 0DED                           l3537 0D97  
                         l3625 167A                           l3617 08D1                           l3609 08B6  
                         l3713 0715                           l3705 0702                           l3633 1696  
                         l3641 1754                           l3721 0457                           l4097 025B  
                         l2763 0938                           l2755 0910                           l2771 094E  
                         l2931 0EA4                           l2923 07FD                           l2915 0B0D  
                         l2907 0AE0                           l2747 16D7                           l3651 16F6  
                         l4099 0B60                           l3811 0B88                           l3803 0B4B  
                         l3571 0E6A                           l3563 0E46                           l3555 0E14  
                         l3547 0DF2                           l3539 0DA1                           l3627 1688  
                         l3491 086B                           l3483 0851                           l3619 08E4  
                         l3715 0719                           l3707 0706                           l3643 175A  
                         l3731 048B                           l3723 045C                           l2765 0940  
                         l2757 091B                           l2941 0EE5                           l2933 0EA6  
                         l2925 0E9A                           l2917 0B10                           l2909 0AEA  
                         l2749 16DF                           l3653 16F9                           l3821 0BBC  
                         l3805 0B54                           l3565 0E56                           l3557 0E18  
                         l3549 0DFD                           l3581 0CE1                           l3573 0CA8  
                         l3493 0888                           l3485 0857                           l3709 070A  
                         l3717 0722                           l3629 162E                           l3637 173C  
                         l3741 04C6                           l3733 048F                           l3725 0471  
                         l3901 03AC                           ?_pad 0035                           l2767 0941  
                         l2759 091F                           l2951 0F33                           l2943 0EEE  
                         l2935 0EA7                           l2927 0E9D                           l3647 1615  
                         l3655 1700                           l3815 0BA4                           l3807 0B68  
                         l3567 0E57                           l3559 0E1C                           l3591 0D1C  
                         l3583 0D00                           l3575 0CAA                           l3495 089A  
                         l3487 085C                           l3671 0617                           l3663 05CB  
                         l3743 04CD                           l3735 04A3                           l3727 0477  
                         l3911 040B                           l3903 03BF                           l3831 0213  
                         l2769 0948                           l2953 0F37                           l2945 0EF2  
                         l2937 0EB1                           l2929 0EA2                           l2881 0A66  
                         l3657 170F                           l3817 0BAA                           l3569 0E65  
                         l3593 0D20                           l3585 0D0D                           l3577 0CB4  
                         l3489 0861                           l3681 064C                           l3673 062C  
                         l3665 05DB                           l3761 0527                           l3753 0508  
                         l3737 04A6                           l3729 0487                           l3913 0418  
                         l3833 021C                           l2971 0F99                           l2955 0F57  
                         l2947 0F12                           l2963 0F80                           l2939 0ECD  
                         l2891 0A8C                           l2883 0A78                           l3499 1660  
                         l3659 1710                           l3819 0BB0                           l3595 0D42  
                         l3587 0D10                           l3579 0CD6                           l3691 068F  
                         l3683 0654                           l3675 0632                           l3667 05EE  
                         l3771 0584                           l3763 052B                           l3755 050E  
                         l3747 04E5                           l3739 04BE                           l3907 03EF  
                         l3835 0222                           l3923 042A                           l2973 0F9A  
                         l2965 0F93                           l2957 0F6F                           l2949 0F2A  
                         l2893 0A8D                           l2885 0A7F                           l3941 09ED  
                         l3597 0D52                           l3589 0D18                           l3693 0693  
                         l3685 0657                           l3677 0642                           l3669 05F4  
                         l3781 05B6                           l3773 0592                           l3749 04EB  
                         l3757 051A                           l3765 055C                           l3925 044A  
                         l3909 0402                           l3917 041E                           l3861 028E  
                         l3853 0246                           l3837 0227                           l3829 0200  
                         l2991 0FC5                           l2983 0FA9                           l2975 0FA0  
                         l2967 0F97                           l2959 0F7B                           l2895 0A95  
                         l2887 0A84                           l3951 0A2D                           l3943 0A09  
                         l3935 09DD                           l3791 0B1E                           l3599 0D60  
                         l3695 06CE                           l3687 065C                           l3679 0648  
                         l3775 059C                           l3767 056A                           l3759 0523  
                         l3919 0427                           l3863 0297                           l3871 02B1  
                         l3839 022C                           l3855 026C                           l2993 0FCA  
                         l2985 0FB4                           l2977 0FA3                           l2969 0F98  
                         l2897 0AB0                           l2889 0A88                           l3953 0A31  
                         l3945 0A0F                           l3961 0A53                           l3937 09E1  
                         l3793 0B28                           l3785 0B12                           l3697 06DB  
                         l3689 068B                           l3777 05A0                           l3769 0577  
                         l3873 02C5                           l3881 02F9                           l3865 02A4  
                         l3857 0278                           l3849 0241                           l2995 0FCC  
                         l2987 0FB8                           l2899 0ACC                           l3955 0A35  
                         l3947 0A14                           l3939 09E8                           l3795 0B3C  
                         l3787 0B18                           l3699 06E8                           l3779 05A9  
                         l3883 030C                           l3875 02CE                           l3867 02A8  
                         l3859 027C                           l2989 0FC4                           l3957 0A4A  
                         l3949 0A16                           l3965 0A55                           l3973 15FF  
                         l3797 0B3D                           l3789 0B1C                           l3893 036C  
                         l3885 031F                           l3869 02AA                           l3981 1795  
                         l3967 0A5B                           l3959 0A50                           l3991 17C2  
                         l3895 037F                           l3887 0328                           l3879 02F3  
                         l3983 17AD                           l3969 0A64                           l3993 17DA  
                         l3897 0392                           l3889 0342                           l3985 17B7  
                         l3977 178D                           l3995 17ED                           l3899 03A3  
                         l3979 1791                           l3989 17C2                           l3999 17F6  
                         STR_1 186A                           STR_2 1800                           STR_3 1853  
                         STR_4 183C   __end_of_load_tx_msg_str_crlf 1800                           u3100 0EEE  
                         u3101 0EED                           u3110 0F08                           u3200 0FF7  
                         u3120 0F33                           u3040 0A71                           u3201 0FF6  
                         u3121 0F32                           u3210 0FFC                           u3130 0F4D  
                         u3050 0ABE                           u4010 0DCE                           u3211 0FFB  
                         u3115 0F04                           u4011 0DCD                           u3140 0F7B  
                         u3060 0AD2                           u4100 0CB4                           u3141 0F7A  
                         u3061 0AD1                           u4101 0CB3                           u3150 0F8E  
                         u3070 0AE0                           u3310 15F6                           u4030 0DFA  
                         u3135 0F49                           u3071 0ADF                           u3055 0ABA  
                         u3311 15F5                           u3160 0FA0                           u4040 0E09  
                         u4120 0CE1                           u4200 08A9                           u5000 0BCC  
                         u3161 0F9F                           u4041 0E08                           u4121 0CE0  
                         u4201 08A8                           u5001 0BCB                           u3170 0FC1  
                         u3090 0B02                           u3410 079F                           u4050 0E1C  
                         u4210 08B6                           u5010 0BEA                           u3171 0FC0  
                         u3155 0F8A                           u3091 0B01                           u3411 079E  
                         u4051 0E1B                           u4211 08B5                           u5011 0BE9  
                         u3180 0FCA                           u3500 09BB                           u3340 074E  
                         u4060 0E46                           u4140 0D0D                           u4220 08DF  
                         u4300 174E                           u5020 0C2C                           u3181 0FC9  
                         u3085 0AED                           u3405 078F                           u3341 074D  
                         u4061 0E45                           u4141 0D0C                           u4221 08DE  
                         u5021 0C2B                           u3190 0FE4                           u3510 09D7  
                         u3430 07B9                           u3350 076E                           u4070 0E65  
                         u4150 0D20                           u4230 08E4                           u4310 175A  
                         u5030 0C63                           u3191 0FE3                           u3511 09D6  
                         u3431 07B8                           u3351 076D                           u4071 0E64  
                         u4151 0D1F                           u4231 08E3                           u4311 1759  
                         u5031 0C62                           u3440 07C0                           u3360 0778  
                         u4320 1626                           u4080 0E6A                           u4160 0D42  
                         u4240 1688                           u4400 0617                           u5040 0C6C  
                         u3441 07BF                           u3425 07A2                           u3361 0777  
                         u4321 1624                           u4081 0E69                           u4065 0E42  
                         u4161 0D41                           u4241 1687                           u4225 08DB  
                         u4401 0616                           u5041 0C6B                           u3450 07F2  
                         u3370 0781                           u4330 1627                           u4170 0D60  
                         u4410 062C                           u4250 163F                           u5050 0C72  
                         _PIE4 071A                           _T4PR 0293                           u3451 07F1  
                         u3371 0780                           u4171 0D5F                           u4411 062B  
                         u4251 163D                           u5051 0C71                           u3460 15E6  
                         u2900 094E                           u3380 0788                           u4340 1700  
                         u4180 0D65                           u4500 0706                           u4420 0648  
                         u4260 1640                           u5060 0C96                           u3461 15E5  
                         u2901 094D                           u3381 0787                           u4341 16FF  
                         u4181 0D64                           u4165 0D3E                           u4245 1684  
                         u4501 0705                           u4421 0647                           u5061 0C95  
                         u3470 15EA                           u2830 16F5                           u3390 078C  
                         u4350 170F                           u4510 0710                           u4430 064C  
                         u4270 16AD                           u3471 15E9                           u2831 16F4  
                         u3455 07EE                           u3391 078B                           u4351 170E  
                         u4511 070F                           u4431 064B                           u4415 0628  
                         u4271 16AB                           u2840 090D                           u3480 099C  
                         u4440 06CE                           u4360 05E6                           u4280 16AE  
                         u4600 0502                           u4520 045C                           u2841 090C  
                         u4441 06CD                           u4361 05E4                           u4521 045B  
                         u5065 0C92                           u3490 09AE                           u4450 06DB  
                         u4370 05E7                           u4290 174D                           u4610 050E  
                         u4530 0471                           u3491 09AD                           u4451 06DA  
                         u4291 174B                           u4611 050D                           u4531 0470  
                         _PEIE 005E                           u2860 091F                           u4700 0B3C  
                         u3900 0888                           u4460 06E8                           u4380 05F4  
                         u4620 0549                           u4540 048B                           u2861 091E  
                         u5077 0754                           u4701 0B3B                           u3901 0887  
                         u4461 06E7                           u4445 06CA                           u4381 05F3  
                         u4541 048A                           u3910 1673                           u4710 0B4A  
                         u4470 06F6                           u4630 056A                           u4550 04BE  
                         _INTF 3860                           u2855 0911                           u3911 1672  
                         u5087 075C                           u4711 0B49                           u4471 06F5  
                         u4631 0569                           u4551 04BD                           u4535 046D  
                         u2880 0938                           u4720 0B9D                           u3920 178A  
                         u4480 06FB                           u4640 0577                           u4560 04DE  
                         u4800 02A8                           u2881 0937                           u4721 0B9B  
                         u3905 0884                           u3921 1789                           u4481 06FA  
                         u4465 06E4                           u4641 0576                           u4625 0540  
                         u4561 04DC                           u4801 02A7                           u4730 0B9E  
                         u4490 0702                           u3930 1658                           u4650 0584  
                         u4570 04DF                           u4810 02EC                           u2875 0920  
                         u4491 0701                           u4475 06F2                           u3931 1656  
                         u4651 0583                           u4635 0566                           u4555 04BA  
                         u4811 02EA                           _RCIE 38CD                           u4900 09ED  
                         u4740 0BAA                           u3940 1659                           u4660 0592  
                         u4580 04EB                           u4820 02ED                           _RCIF 387D  
                         u2885 0934                           u4901 09EC                           u4741 0BA9  
                         u4661 0591                           u4581 04EA                           u4910 0A09  
                         u3950 16BC                           u4750 0BB0                           u3870 0857  
                         u4670 0597                           u4590 0501                           u4830 02F9  
                         u2895 0942                           u4911 0A08                           u3951 16BB  
                         u4751 0BAF                           u3871 0856                           u4671 0596  
                         u4655 0580                           u4591 04FF                           u4831 02F8  
                         u4920 0A0F                           u3880 085C                           u4680 059C  
                         u4840 030C                           u4760 0213                           u4921 0A0E  
                         u3881 085B                           u4681 059B                           u4665 058E  
                         u4841 030B                           u4761 0212                           u4930 0A14  
                         u4690 0B28                           u3890 086B                           u4850 031F  
                         u4770 0273                           u4931 0A13                           u4915 0A05  
                         u4691 0B27                           u3891 086A                           u4851 031E  
                         u4771 0272                           u4940 0A4A                           u3980 16D0  
                         u4860 037F                           u4780 0278                           _PIR4 0710  
                         u4941 0A49                           u3981 16CF                           u3965 16C1  
                         u4861 037E                           u4781 0277                           u4950 0A50  
                         u3990 0DA1                           u4870 0392                           u4790 028E  
                         u4951 0A4F                           u3975 16C6                           u3991 0DA0  
                         u4871 0391                           u4791 028D                           u4960 0A5B  
                         u4880 0402                           u4961 0A5A                           u4945 0A46  
                         u4881 0401                           u4970 0A60                           u4890 09E8  
                         u4971 0A5F                           u4891 09E7                           u4980 17B7  
                         u4981 17B6                           u4990 17DA                           u4991 17D9  
                         _TXIE 38CC                           _TXIF 387C                           _TXEN 08F5  
                         Isr@i 0023                Isr@rx_frm_error 0020                           abs@a 0038  
                         _dbuf 01B2                           _atoi 0B12                           _main 0BC1  
                         _dtoa 05C9                           _tmr4 01A0                           _prec 00EC  
                         _nout 0169                           pad@i 0039                           pad@p 0036  
                         fsr0h 0005                           fsr1h 0007                           indf0 0000  
                         fsr0l 0004                           indf1 0001                           fsr1l 0006  
                         pad@w 003B                           btemp 007E                           _xtoa 0455  
                         start 01B1               load_tx_msg_str@i 0030      __size_of_setup_dht11_snsr 000C  
                        ??_Isr 007A                          ??_abs 003A                          ??_pad 0038  
             main@sys_time_act 0161                __end_of___aodiv 0E9A                          ?_atoi 002B  
                        ?_main 0070                          ?_dtoa 0040                __end_of___aomod 0D95  
              __end_of_SysInit 09DD                __end_of___lldiv 0957                          ?_xtoa 003E  
              __end_of___llmod 0851                          _T4CON 0294                          _T4HLT 0295  
                        i1l421 01AF                          i1l413 00E8                          i1l405 00DF  
                        i1l432 01AF                          i1l418 011E                          i1l814 0850  
                 vfpfcnvrt@fmt 0064                   vfpfcnvrt@llu 00AE                          _RXPPS 0ECB  
                 main@msg_buff 0120                          _flags 0066                          _fputc 0851  
              __end_of_isalpha 16B5                          _fputs 1762                __end_of_isdigit 162E  
                        atoi@n 0038                          pad@fp 003D                          atoi@s 002B  
                        _width 00EA                          _putch 0003                          dtoa@d 0040  
                        dtoa@i 005C                          dtoa@n 0054                          dtoa@p 004E  
                        dtoa@s 0052                          dtoa@w 0050                __end_of_islower 1660  
              __end_of_isspace 1718                __end_of_isupper 1647                          status 0003  
                        wtemp0 007E                __end_of_sprintf 173C                          xtoa@c 0062  
                        xtoa@d 003E                          xtoa@i 0060                          xtoa@n 0058  
                        xtoa@p 0054                          xtoa@w 0056                          xtoa@x 0046  
              __end_of_toupper 1762                   _toupper$1555 0031             _eusart_rx_buff_idx 0068  
           _eusart_rx_buff_isr 0220             _eusart_rx_buff_use 02A0                __initialization 01B3  
                 __end_of_atoi 0BC1                   __end_of_main 0CA8                   __end_of_dtoa 0735  
                 __end_of_xtoa 05C9              ??_read_irdist_dat 0025            _do_irdist_snsr_read 016D  
                       ??_atoi 002D                         ??_main 00E2                         ??_dtoa 0048  
                       ??_xtoa 0047                  _dht11_dat_arr 01AD               __end_of_SetupClk 15EB  
             __end_of_TmrSetup 0B12                         ?_fputc 0025               ___llmod@dividend 0074  
                       ?_fputs 002D                         _ANSELA 0F38                         ?_putch 0070  
                       _ANSELB 0F43                         _ANSELC 0F4E                         _ANSELD 0F59  
                       _ANSELE 0F64                         _RC1REG 0119                         _RC1STA 011D  
                       _RC6PPS 0F26                         i1l3401 0140                         i1l3403 0146  
                       i1l3411 015F                         i1l3421 0184                         i1l3413 0164  
                       i1l3405 014C                         i1l3341 0012                         i1l3423 018A  
                       i1l3415 0166                         i1l3407 0151                         i1l3351 005C  
                       i1l3343 0017                         i1l3281 081D                         i1l3441 01AB  
                       i1l3425 018E                         i1l3417 017A                         i1l3409 015A  
                       i1l3353 0078                         i1l3361 00C0                         i1l3345 0020  
                       i1l3337 0006                         i1l3283 0821                         i1l3291 0848  
                       i1l3275 0807                         i1l3435 0195                         i1l3427 0191  
                       i1l3419 017E                         i1l3371 00F5                         i1l3363 00DC  
                       i1l3355 0084                         i1l3347 002C                         i1l3339 000C  
                       i1l3285 0833                         i1l3277 080F                         i1l3437 01A1  
                       i1l3429 0194                         i1l3373 00FA                         i1l3381 010D  
                       i1l3365 00E4                         i1l3357 00A0                         i1l3349 0040  
                       i1l3287 083B                         i1l3279 0812                         i1l3439 01A5  
                       i1l3391 0123                         i1l3383 0112                         i1l3375 00FE  
                       i1l3367 00ED                         i1l3359 00B2                         i1l3289 0842  
                       i1l3393 0129                         i1l3385 0113                         i1l3377 0107  
                       i1l3369 00EE                         i1l3395 012F                         i1l3387 0116  
                       i1l3379 010C                         i1l3397 0135                         i1l3389 011B  
                       i1l3399 013A                         u352_20 080F                         u352_21 080E  
                       _INTPPS 0E90                         u353_25 0813                         u354_20 0821  
                       u370_20 00DC                         u354_21 0820                         u370_21 00DB  
                       u355_20 0833                         u371_20 00E4                         u355_21 0832  
                       u371_21 00E3                         u355_25 082F                         u380_20 0140  
                       u372_20 00ED                         u380_21 013F                         u372_21 00EC  
                       u356_25 083C                         u357_20 0848                         u381_20 0146  
                       u373_20 00F5                         u365_20 000C                         u357_21 0847  
                       u381_21 0145                         u373_21 00F4                         u365_21 000B  
                       u382_20 014C                         u374_20 00FA                         u366_20 0012  
                       u382_21 014B                         u374_21 00F9                         u366_21 0011  
                       u383_20 0151                         u375_20 0112                         u367_20 005C  
                       u383_21 0150                         u375_21 0111                         u367_21 005B  
                       u384_20 0164                         u376_20 011B                         u368_20 0078  
                       u384_21 0163                         u376_21 011A                         u368_21 0077  
                       u385_20 0184                         u377_20 0123                         u369_20 00A0  
                       u385_21 0183                         u377_21 0122                         u369_21 009F  
                       u386_20 01AB                         u378_20 012F                         u386_21 01AA  
                       u378_21 012E                         u379_20 013A                         u379_21 0139  
                       _OSCFRQ 0893                  vfpfcnvrt@done 00B7                         u400lld 0DC0  
                       u402lld 0DED                         u411lld 0CD3                         u413lld 0D00  
                       _TX1REG 011A                         u409lld 0E88                         u419lld 0D83  
                       u439lld 0612                   vfprintf@cfmt 00C2                      ??___aodiv 0035  
                   _TmrDisable 15AF                      ??___aomod 0035                         ___wmul 16B5  
                    ??_SysInit 004C                      ??___lldiv 002D                      ??___llmod 0078  
             _make_all_digital 0800           _load_tx_msg_str_crlf 17C0                         pad@buf 0035  
                       _strcat 15FD                         dtoa@fp 004B                         _strcpy 16D5  
                       _strlen 1660             __size_of_TmrEnable 0009        _eusart_rx_buff_load_cnt 007B  
                       fputc@c 0025                _load_tx_msg_str 09DD                         fputs@c 0031  
                       fputs@i 0032                         fputs@s 0034                      ??_isalpha 0027  
                    ??_isdigit 0027                   EUSARTSetup@i 003D                      ??_islower 0027  
                    ??_isspace 0027                      ??_isupper 0027          _eusart_rx_msg_present 00EF  
                       putch@c 0070               __end_of_vfprintf 17C0                      ??_sprintf 00CE  
                       xtoa@fp 004F                      ??_toupper 002D           __size_of_EUSARTSetup 0166  
      __end_of__initialization 01FA               _setup_dht11_snsr 15C5                 __pcstackCOMMON 0070  
                __end_of_fputc 08A3                  __end_of_fputs 178B          ?_load_tx_msg_str_crlf 0070  
                __end_of_putch 0004                TmrSetup@use_int 0042                        ??_fputc 0028  
                      ??_fputs 002E                        ??_putch 0025                     __pbssBANK0 0066  
                   __pbssBANK1 00EA                     __pbssBANK2 0165                     __pbssBANK3 01A0  
                   __pbssBANK4 0220                     __pbssBANK5 02A0              __end_of_TmrEnable 0800  
          _eusart_tx_buff_head 0069            _eusart_tx_buff_full 007D            _eusart_tx_buff_tail 006A  
        read_dht11_dat@counter 0036                     __pmaintext 0BC1             _do_dht11_snsr_read 016E  
                    ?_SetupClk 0070                    ?_TmrDisable 0025                      ?_TmrSetup 0033  
                      ?___wmul 0025        read_dht11_dat@laststate 0033                     __pintentry 0004  
      __end_of_load_tx_msg_str 0A66                        ?_strcat 0031                        ?_strcpy 0029  
                      ?_strlen 0025              EUSARTSetup@regVal 0040                        _SP1BRGH 011C  
                      _SP1BRGL 011B                  _irdist_result 016C                        _OSCCON1 088D  
           __size_of_vfpfcnvrt 0257              EUSARTSetup@use_rx 0038              EUSARTSetup@use_tx 0037  
              _read_irdist_dat 15BA                     ??_SetupClk 0025                     ??_TmrSetup 0043  
                      ___aodiv 0D95                        ___aomod 0CA8                        _SysInit 0957  
       ??_load_tx_msg_str_crlf 0036                        ___lldiv 08FC                __size_of___wmul 0020  
                      ___llmod 0807                      ?_vfprintf 00BC                        __ptext1 1718  
                      __ptext2 178B                        __ptext3 01FE                        __ptext4 0455  
                      __ptext5 173C                        __ptext6 1647                        __ptext7 162E  
                      __ptext8 1696                        __ptext9 05C9        __size_of_read_dht11_dat 00C2  
              __size_of_strcat 0018                __size_of_strcpy 0021                __size_of_strlen 001A  
                 __size_of_Isr 01AD                   __size_of_abs 001C                   __size_of_pad 0059  
                      _isalpha 1696                        _isdigit 1615                        _islower 1647  
                      _isspace 16F6                        _isupper 162E                        atoi@neg 0031  
                      _sprintf 1718                        clrloop0 15D2                        _toupper 173C  
          __size_of_TmrDisable 000B           end_of_initialization 01FA       __end_of_make_all_digital 0807  
                      fputc@fp 0027                        fputs@fp 002D                    TmrSetup@Mod 0033  
          EUSARTSetup@set_baud 0033                ___lldiv@divisor 0025                ___lldiv@counter 0032  
            __end_of_vfpfcnvrt 0455                     ??_vfprintf 00BF               ?_load_tx_msg_str 0029  
                      strcpy@d 002F                        strlen@a 0027                        strcpy@s 002D  
                      strlen@s 0025                      _PORTBbits 000D                      _PORTDbits 000F  
     __end_of_setup_dht11_snsr 15D1                      _TRISAbits 0011                      _TRISBbits 0012  
                    _TRISCbits 0013                      _TRISDbits 0014        __end_of_read_irdist_dat 15C5  
         TmrSetup@prescalarVal 0047                      Isr@rx_val 0022                    vfpfcnvrt@ap 0065  
                  vfpfcnvrt@fp 00BB                    vfpfcnvrt@ll 00A6                 __end_of___wmul 16D5  
              read_dht11_dat@i 0037                read_dht11_dat@j 0035                  TmrDisable@Mod 0025  
               __end_of_strcat 1615                 __end_of_strcpy 16F6                 __end_of_strlen 167A  
          start_initialization 01B3                    __end_of_Isr 01B1                    __end_of_abs 1696  
                  __end_of_pad 08FC                  ??_EUSARTSetup 0039                ___llmod@divisor 0070  
              ___llmod@counter 0079                    vfprintf@fmt 00BC               TmrSetup@tmr_freq 0040  
                    _TmrEnable 07F7                   ??_TmrDisable 0032                       ??___wmul 0029  
  setup_irdist_snsr@use_extint 0025              __size_of_SetupClk 000E              __size_of_TmrSetup 00AC  
               _read_dht11_dat 0735                       ??_strcat 0033                       ??_strcpy 002B  
                     ??_strlen 0027                    __pbssBIGRAM 22F0                    __pbssCOMMON 007B  
                    ___latbits 0002                  __pcstackBANK0 0020                  __pcstackBANK1 00A0  
                __pcstackBANK2 0120               ___aodiv@dividend 002D               ?_read_irdist_dat 0070  
               TmrSetup@regVal 0048             __end_of_TmrDisable 15BA            __end_of_EUSARTSetup 1000  
                    _atoi$1460 0037                      _atoi$1461 0035                      _atoi$1459 0033  
                    _dtoa$1412 004C                     ?_TmrEnable 0025               EUSARTSetup@i_239 003F  
                     ?___aodiv 0025                       ?___aomod 0025               ___aodiv@quotient 0038  
                     ?_SysInit 0070                       ?___lldiv 0025                       ?___llmod 0070  
       __end_of_read_dht11_dat 07F7              __size_of_vfprintf 0035                       ?_isalpha 0025  
                     ?_isdigit 0025         read_dht11_dat@run_stat 0034                       ?_islower 0025  
                     ?_isspace 0025                       ?_isupper 0025                       ?_sprintf 00C4  
               __size_of_fputc 0052                 __size_of_fputs 0029                       ?_toupper 002B  
         _eusart_rx_sys_active 00EE                       _T4CLKCON 0296                 __size_of_putch 0001  
            ?_make_all_digital 0070                 ___wmul@product 0029                       _LATAbits 0016  
                     _LATBbits 0017                       _LATCbits 0018                       _LATDbits 0019  
           ??_make_all_digital 0025                      clear_ram0 15D1                       _PIE0bits 0716  
              ?_read_dht11_dat 0070                      _vfpfcnvrt 01FE  __size_of_load_tx_msg_str_crlf 0040  
                    _xtoa$1423 0050                      _xtoa$1424 0052              ___wmul@multiplier 0025  
                     Isr@i_885 0024                 _eusart_tx_buff 22F0              ?_setup_dht11_snsr 0070  
                 _isspace$1486 0029                   TmrEnable@Mod 0025                     vfpfcnvrt@c 00B6  
                  _EUSARTSetup 0E9A             ??_setup_dht11_snsr 0025                     vfprintf@ap 00BE  
                   vfprintf@fp 00C1                    ??_TmrEnable 0032                       _SetupClk 15DD  
                     _TmrSetup 0A66               __size_of___aodiv 0105               __size_of___aomod 00ED  
             __size_of_SysInit 0086               __size_of___lldiv 005B               __size_of___llmod 004A  
                   ?_vfpfcnvrt 0064                ___aodiv@divisor 0025                ___aodiv@counter 0036  
            _setup_irdist_snsr 15EB                     sprintf@fmt 00C4                     strcat@dest 0035  
     __size_of_load_tx_msg_str 0089             ?_setup_irdist_snsr 0070               __size_of_isalpha 001F  
             __size_of_isdigit 0019               __size_of_islower 0019               __size_of_isspace 0022  
                     __ptext10 08A3                       __ptext11 1762                       __ptext20 16B5  
                     __ptext12 0851                       __ptext21 15BA                       __ptext13 0003  
                     __ptext30 15C5                       __ptext22 0735                       __ptext14 167A  
                     __ptext31 0800                       __ptext23 17C0                       __ptext15 0CA8  
                     __ptext32 0A66                       __ptext24 15FD                       __ptext16 0D95  
                     __ptext33 15AF                       __ptext25 16D5                       __ptext17 0B12  
                     __ptext34 07F7                       __ptext26 09DD                       __ptext18 16F6  
                     __ptext35 0E9A                       __ptext27 1660                       __ptext19 1615  
                     __ptext36 08FC                       __ptext28 0957                       __ptext37 15DD  
                     __ptext29 15EB                       __ptext39 0807               __size_of_isupper 0019  
         _eusart_tx_sys_active 007C               __size_of_sprintf 0024                     strcpy@dest 0030  
             __size_of_toupper 0026            ??_setup_irdist_snsr 0025                  __size_of_atoi 00AF  
                __size_of_main 00E7                  __size_of_dtoa 016C                  __size_of_xtoa 0174  
                   _RC1STAbits 011D                       int$flags 007E                       _vfprintf 178B  
    __end_of_setup_irdist_snsr 15FD        load_tx_msg_str@in_bytes 0029               ___aomod@dividend 002D  
                  _OSCSTATbits 0890                       _sys_time 0165                       _sys_stat 016B  
               _vfpfcnvrt$1438 00B9                     _INTCONbits 000B                       isalpha@c 0025  
                     isdigit@c 0025                       intlevel1 0000                      sprintf@ap 00D2  
                    strcat@src 0031                       islower@c 0025                       isspace@c 0025  
             ___lldiv@dividend 0029                      strcpy@src 0029                       isupper@c 0025  
              ___aomod@divisor 0025                    ??_vfpfcnvrt 00A0                ___aomod@counter 0036  
                __pstringtext1 1800                  __pstringtext2 183C                  __pstringtext3 1853  
                __pstringtext4 186A                  __pstringtext5 0000                       sprintf@f 00D3  
                     sprintf@s 00D1               ___lldiv@quotient 002E                       toupper@c 002B  
                   _TX1STAbits 011E   load_tx_msg_str_crlf@in_bytes 00E1                   ___aodiv@sign 0037  
            ??_load_tx_msg_str 002B   load_tx_msg_str_crlf@new_buff 00A0       __size_of_read_irdist_dat 000B  
                 ___aomod@sign 0037               ??_read_dht11_dat 0025  
